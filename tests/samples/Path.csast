{"File":"./tests/samples/Path.cs","Lines":[{"Kind":0,"KindStr":"Decl","Declaration":"UsingDirective","Info":{"Essentials":["System.Globalization"],"Extras":[]},"Source":"//------------------------------------------------------------------------------\n// \n// System.IO.Path.cs \n//\n// Copyright (C) 2001 Moonlight Enterprises, All Rights Reserved\n// Copyright (C) 2002 Ximian, Inc. (http://www.ximian.com)\n// Copyright (C) 2003 Ben Maurer\n// Copyright 2011 Xamarin Inc (http://www.xamarin.com).\n// \n// Author:         Jim Richardson, develop@wtfo-guru.com\n//                 Dan Lewis (dihlewis@yahoo.co.uk)\n//                 Gonzalo Paniagua Javier (gonzalo@ximian.com)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Globalization"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Globalization"],"Extras":[]},"Source":"Globalization"},{"Kind":0,"KindStr":"Decl","Declaration":"UsingDirective","Info":{"Essentials":["System.Runtime.CompilerServices"],"Extras":[]},"Source":"using System.Runtime.CompilerServices;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Runtime.CompilerServices"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Runtime"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Runtime"],"Extras":[]},"Source":"Runtime"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CompilerServices"],"Extras":[]},"Source":"CompilerServices"},{"Kind":0,"KindStr":"Decl","Declaration":"UsingDirective","Info":{"Essentials":["System.Runtime.InteropServices"],"Extras":[]},"Source":"using System.Runtime.InteropServices;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Runtime.InteropServices"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Runtime"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Runtime"],"Extras":[]},"Source":"Runtime"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InteropServices"],"Extras":[]},"Source":"InteropServices"},{"Kind":0,"KindStr":"Decl","Declaration":"UsingDirective","Info":{"Essentials":["System.Security"],"Extras":[]},"Source":"using System.Security;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Security"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Security"],"Extras":[]},"Source":"Security"},{"Kind":0,"KindStr":"Decl","Declaration":"UsingDirective","Info":{"Essentials":["System.Security.Cryptography"],"Extras":[]},"Source":"using System.Security.Cryptography;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Security.Cryptography"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Security"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Security"],"Extras":[]},"Source":"Security"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Cryptography"],"Extras":[]},"Source":"Cryptography"},{"Kind":0,"KindStr":"Decl","Declaration":"UsingDirective","Info":{"Essentials":["System.Security.Permissions"],"Extras":[]},"Source":"using System.Security.Permissions;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Security.Permissions"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Security"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Security"],"Extras":[]},"Source":"Security"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Permissions"],"Extras":[]},"Source":"Permissions"},{"Kind":0,"KindStr":"Decl","Declaration":"UsingDirective","Info":{"Essentials":["System.Text"],"Extras":[]},"Source":"using System.Text;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Text"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Text"],"Extras":[]},"Source":"Text"},{"Kind":0,"KindStr":"Decl","Declaration":"UsingDirective","Info":{"Essentials":["System.Diagnostics"],"Extras":[]},"Source":"using System.Diagnostics;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.Diagnostics"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Diagnostics"],"Extras":[]},"Source":"Diagnostics"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["1"],"Extras":["NamespaceDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"NamespaceDeclaration","Info":{"Essentials":["System.IO"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"QualifiedName","Info":{"Essentials":["System.IO"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IO"],"Extras":[]},"Source":"IO "},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["2"],"Extras":["ClassDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ClassDeclaration","Info":{"Essentials":["Path"],"Extras":["public static partial"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ComVisible"],"Extras":[]},"Source":"ComVisible "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["public static readonly","char[]","InvalidPathChars"],"Extras":[]},"Source":"\n\t\t[Obsolete (\"see GetInvalidPathChars and GetInvalidFileNameChars methods.\")]\n\t\tpublic static readonly char[] InvalidPathChars;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Obsolete"],"Extras":[]},"Source":"Obsolete "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"see GetInvalidPathChars and GetInvalidFileNameChars methods.\""],"Extras":[]},"Source":"\"see GetInvalidPathChars and GetInvalidFileNameChars methods.\""},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char[]","name:InvalidPathChars"],"Extras":[]},"Source":"char[] InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char[] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["public static readonly","char","AltDirectorySeparatorChar"],"Extras":[]},"Source":"\t\tpublic static readonly char AltDirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:AltDirectorySeparatorChar"],"Extras":[]},"Source":"char AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["public static readonly","char","DirectorySeparatorChar"],"Extras":[]},"Source":"\t\tpublic static readonly char DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:DirectorySeparatorChar"],"Extras":[]},"Source":"char DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["public static readonly","char","PathSeparator"],"Extras":[]},"Source":"\t\tpublic static readonly char PathSeparator;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:PathSeparator"],"Extras":[]},"Source":"char PathSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["PathSeparator"],"Extras":[]},"Source":"PathSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["internal static readonly","string","DirectorySeparatorStr"],"Extras":[]},"Source":"\t\tinternal static readonly string DirectorySeparatorStr;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:DirectorySeparatorStr"],"Extras":[]},"Source":"string DirectorySeparatorStr"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["public static readonly","char","VolumeSeparatorChar"],"Extras":[]},"Source":"\t\tpublic static readonly char VolumeSeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:VolumeSeparatorChar"],"Extras":[]},"Source":"char VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["internal static readonly","char[]","PathSeparatorChars"],"Extras":[]},"Source":"\n\t\tinternal static readonly char[] PathSeparatorChars;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char[]","name:PathSeparatorChars"],"Extras":[]},"Source":"char[] PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char[] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["private static readonly","bool","dirEqualsVolume"],"Extras":[]},"Source":"\t\tprivate static readonly bool dirEqualsVolume;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:dirEqualsVolume"],"Extras":[]},"Source":"bool dirEqualsVolume"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["dirEqualsVolume"],"Extras":[]},"Source":"dirEqualsVolume"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["ChangeExtension","string"],"Extras":["public static"]},"Source":"\n\t\t// class methods\n\t\tpublic static string ChangeExtension (string path, string extension)\n\t\t{\n\t\t\tif (path == null)\n\t\t\t\treturn null;\n\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n\n\t\t\tint iExt = findExtension (path);\n\n\t\t\tif (extension == null)\n\t\t\t\treturn iExt < 0 ? path : path.Substring (0, iExt);\n\t\t\telse if (extension.Length == 0)\n\t\t\t\treturn iExt < 0 ? path + '.' : path.Substring (0, iExt + 1);\n\n\t\t\telse if (path.Length != 0) {\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path, string extension)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["extension","string "],"Extras":[]},"Source":"string extension"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null","return null;"],"Extras":[]},"Source":"\t\t\tif (path == null)\n\t\t\t\treturn null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["null"],"Extras":[]},"Source":"\t\t\t\treturn null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.IndexOfAny (InvalidPathChars) != -1","throw new ArgumentException (\"Illegal characters in path.\");"],"Extras":[]},"Source":"\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.IndexOfAny (InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOfAny"],"Extras":[]},"Source":"path.IndexOfAny (InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"(InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"(\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["iExt","int"],"Extras":[]},"Source":"\n\t\t\tint iExt = findExtension (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:iExt"],"Extras":[]},"Source":"\n\t\t\tint iExt = findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt = findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["findExtension (path)"],"Extras":[]},"Source":"= findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["findExtension"],"Extras":[]},"Source":"findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["findExtension"],"Extras":[]},"Source":"findExtension "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["extension == null","return iExt < 0 ? path : path.Substring (0, iExt);","if (extension.Length == 0)\n\t\t\t\treturn iExt < 0 ? path + '.' : path.Substring (0, iExt + 1);\n\n\t\t\telse if (path.Length != 0) {\n\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n\t\t\t} else\n\t\t\t\textension = String.Empty;"],"Extras":[]},"Source":"\n\t\t\tif (extension == null)\n\t\t\t\treturn iExt < 0 ? path : path.Substring (0, iExt);\n\t\t\telse if (extension.Length == 0)\n\t\t\t\treturn iExt < 0 ? path + '.' : path.Substring (0, iExt + 1);\n\n\t\t\telse if (path.Length != 0) {\n\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n\t\t\t} else\n\t\t\t\textension = String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"extension == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"extension "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["iExt < 0 ? path : path.Substring (0, iExt)"],"Extras":[]},"Source":"\t\t\t\treturn iExt < 0 ? path : path.Substring (0, iExt);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"iExt < 0 ? path : path.Substring (0, iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"iExt < 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"path.Substring (0, iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["0, iExt"],"Extras":[]},"Source":"(0, iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\telse if (extension.Length == 0)\n\t\t\t\treturn iExt < 0 ? path + '.' : path.Substring (0, iExt + 1);\n\n\t\t\telse if (path.Length != 0) {\n\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n\t\t\t} else\n\t\t\t\textension = String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["extension.Length == 0","return iExt < 0 ? path + '.' : path.Substring (0, iExt + 1);","if (path.Length != 0) {\n\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n\t\t\t} else\n\t\t\t\textension = String.Empty;"],"Extras":[]},"Source":"if (extension.Length == 0)\n\t\t\t\treturn iExt < 0 ? path + '.' : path.Substring (0, iExt + 1);\n\n\t\t\telse if (path.Length != 0) {\n\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n\t\t\t} else\n\t\t\t\textension = String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"extension.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"extension.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"extension"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["iExt < 0 ? path + '.' : path.Substring (0, iExt + 1)"],"Extras":[]},"Source":"\t\t\t\treturn iExt < 0 ? path + '.' : path.Substring (0, iExt + 1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"iExt < 0 ? path + '.' : path.Substring (0, iExt + 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"iExt < 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path + '.' "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"'.' "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"path.Substring (0, iExt + 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["0, iExt + 1"],"Extras":[]},"Source":"(0, iExt + 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["iExt + 1"],"Extras":[]},"Source":"iExt + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"iExt + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\n\t\t\telse if (path.Length != 0) {\n\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n\t\t\t} else\n\t\t\t\textension = String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Length != 0","{\n\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n\t\t\t}","extension = String.Empty;"],"Extras":[]},"Source":"if (path.Length != 0) {\n\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n\t\t\t} else\n\t\t\t\textension = String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length != 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["extension.Length > 0 && extension [0] != '.'","extension = \".\" + extension;"],"Extras":[]},"Source":"\t\t\t\tif (extension.Length > 0 && extension [0] != '.')\n\t\t\t\t\textension = \".\" + extension;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"extension.Length > 0 && extension [0] != '.'"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"extension.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"extension.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"extension"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"extension [0] != '.'"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"extension [0] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"extension "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"'.'"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\textension = \".\" + extension;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["extension","=","\".\" + extension"],"Extras":[]},"Source":"\t\t\t\t\textension = \".\" + extension"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"\t\t\t\t\textension "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\".\" + extension"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\".\""],"Extras":[]},"Source":"\".\" "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"extension"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else\n\t\t\t\textension = String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\textension = String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["extension","=","String.Empty"],"Extras":[]},"Source":"\t\t\t\textension = String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"\t\t\t\textension "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Empty"],"Extras":[]},"Source":"Empty"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["iExt < 0","{\n\t\t\t\treturn path + extension;\n\t\t\t}","if (iExt > 0) {\n\t\t\t\tstring temp = path.Substring (0, iExt);\n\t\t\t\treturn temp + extension;\n\t\t\t}"],"Extras":[]},"Source":"\t\t\t\n\t\t\tif (iExt < 0) {\n\t\t\t\treturn path + extension;\n\t\t\t} else if (iExt > 0) {\n\t\t\t\tstring temp = path.Substring (0, iExt);\n\t\t\t\treturn temp + extension;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"iExt < 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path + extension"],"Extras":[]},"Source":"\t\t\t\treturn path + extension;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path + extension"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"extension"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else if (iExt > 0) {\n\t\t\t\tstring temp = path.Substring (0, iExt);\n\t\t\t\treturn temp + extension;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["iExt > 0","{\n\t\t\t\tstring temp = path.Substring (0, iExt);\n\t\t\t\treturn temp + extension;\n\t\t\t}"],"Extras":[]},"Source":"if (iExt > 0) {\n\t\t\t\tstring temp = path.Substring (0, iExt);\n\t\t\t\treturn temp + extension;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"iExt > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["temp","string"],"Extras":[]},"Source":"\t\t\t\tstring temp = path.Substring (0, iExt);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:temp"],"Extras":[]},"Source":"\t\t\t\tstring temp = path.Substring (0, iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["temp"],"Extras":[]},"Source":"temp = path.Substring (0, iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.Substring (0, iExt)"],"Extras":[]},"Source":"= path.Substring (0, iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"path.Substring (0, iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["0, iExt"],"Extras":[]},"Source":"(0, iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["temp + extension"],"Extras":[]},"Source":"\t\t\t\treturn temp + extension;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"temp + extension"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["temp"],"Extras":[]},"Source":"temp "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"extension"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["extension"],"Extras":[]},"Source":"\n\t\t\treturn extension;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["extension"],"Extras":[]},"Source":"extension"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["Combine","string"],"Extras":["public static"]},"Source":"\n\t\tpublic static string Combine (string path1, string path2)\n\t\t{\n\t\t\tif (path1 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path1\");\n\n\t\t\tif (path2 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path2\");\n\n\t\t\tif (path1.Length == 0)\n\t\t\t\treturn path2;\n\n\t\t\tif (path2.Length == 0)\n\t\t\t\treturn path1;\n\n\t\t\tif (path1.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n\n\t\t\tif (path2.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illeg"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path1, string path2)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path1","string "],"Extras":[]},"Source":"string path1"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path2","string "],"Extras":[]},"Source":"string path2"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1 == null","throw new ArgumentNullException (\"path1\");"],"Extras":[]},"Source":"\t\t\tif (path1 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path1\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path1\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path1\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"(\"path1\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"\"path1\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"\"path1\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2 == null","throw new ArgumentNullException (\"path2\");"],"Extras":[]},"Source":"\n\t\t\tif (path2 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"(\"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1.Length == 0","return path2;"],"Extras":[]},"Source":"\n\t\t\tif (path1.Length == 0)\n\t\t\t\treturn path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path2"],"Extras":[]},"Source":"\t\t\t\treturn path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2.Length == 0","return path1;"],"Extras":[]},"Source":"\n\t\t\tif (path2.Length == 0)\n\t\t\t\treturn path1;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path1"],"Extras":[]},"Source":"\t\t\t\treturn path1;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1.IndexOfAny (InvalidPathChars) != -1","throw new ArgumentException (\"Illegal characters in path.\");"],"Extras":[]},"Source":"\n\t\t\tif (path1.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.IndexOfAny (InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path1.IndexOfAny"],"Extras":[]},"Source":"path1.IndexOfAny (InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"(InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"(\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2.IndexOfAny (InvalidPathChars) != -1","throw new ArgumentException (\"Illegal characters in path.\");"],"Extras":[]},"Source":"\n\t\t\tif (path2.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.IndexOfAny (InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path2.IndexOfAny"],"Extras":[]},"Source":"path2.IndexOfAny (InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"(InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"(\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["IsPathRooted (path2)","return path2;"],"Extras":[]},"Source":"\n\t\t\t//TODO???: UNC names\n\t\t\tif (IsPathRooted (path2))\n\t\t\t\treturn path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted (path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2"],"Extras":[]},"Source":"(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path2"],"Extras":[]},"Source":"\t\t\t\treturn path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["p1end","char"],"Extras":[]},"Source":"\t\t\t\n\t\t\tchar p1end = path1 [path1.Length - 1];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:p1end"],"Extras":[]},"Source":"\t\t\t\n\t\t\tchar p1end = path1 [path1.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"\t\t\t\n\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["p1end"],"Extras":[]},"Source":"p1end = path1 [path1.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path1 [path1.Length - 1]"],"Extras":[]},"Source":"= path1 [path1.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path1 [path1.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1 "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[path1.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1.Length - 1"],"Extras":[]},"Source":"path1.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar && p1end != VolumeSeparatorChar","return path1 + DirectorySeparatorStr + path2;"],"Extras":[]},"Source":"\t\t\tif (p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar && p1end != VolumeSeparatorChar)\n\t\t\t\treturn path1 + DirectorySeparatorStr + path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar && p1end != VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p1end"],"Extras":[]},"Source":"p1end "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p1end"],"Extras":[]},"Source":"p1end "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p1end"],"Extras":[]},"Source":"p1end "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path1 + DirectorySeparatorStr + path2"],"Extras":[]},"Source":"\t\t\t\treturn path1 + DirectorySeparatorStr + path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 + DirectorySeparatorStr + path2"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 + DirectorySeparatorStr "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path1 + path2"],"Extras":[]},"Source":"\n\t\t\treturn path1 + path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 + path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["CleanPath","string"],"Extras":["internal static"]},"Source":"\t\n\t\t//\n\t\t// This routine:\n\t\t//   * Removes duplicat path separators from a string\n\t\t//   * If the string starts with \\\\, preserves the first two (hostname on Windows)\n\t\t//   * Removes the trailing path separator.\n\t\t//   * Returns the DirectorySeparatorChar for the single input DirectorySeparatorChar or AltDirectorySeparatorChar\n\t\t//\n\t\t// Unlike CanonicalizePath, this does not do any path resolution\n\t\t// (which GetDirectoryName is not supposed to do).\n\t\t//\n\t\tinternal static string CleanPath (stri"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string s)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["s","string "],"Extras":[]},"Source":"string s"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["l","int"],"Extras":[]},"Source":"\t\t\tint l = s.Length;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:l"],"Extras":[]},"Source":"\t\t\tint l = s.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["l"],"Extras":[]},"Source":"l = s.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["s.Length"],"Extras":[]},"Source":"= s.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"s.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["sub","int"],"Extras":[]},"Source":"\t\t\tint sub = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:sub"],"Extras":[]},"Source":"\t\t\tint sub = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["sub"],"Extras":[]},"Source":"sub = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["0"],"Extras":[]},"Source":"= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["alt","int"],"Extras":[]},"Source":"\t\t\tint alt = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:alt"],"Extras":[]},"Source":"\t\t\tint alt = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["alt"],"Extras":[]},"Source":"alt = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["0"],"Extras":[]},"Source":"= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["start","int"],"Extras":[]},"Source":"\t\t\tint start = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:start"],"Extras":[]},"Source":"\t\t\tint start = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["start"],"Extras":[]},"Source":"start = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["0"],"Extras":[]},"Source":"= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["s0","char"],"Extras":[]},"Source":"\n\t\t\t// Host prefix?\n\t\t\tchar s0 = s [0];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:s0"],"Extras":[]},"Source":"\n\t\t\t// Host prefix?\n\t\t\tchar s0 = s [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"\n\t\t\t// Host prefix?\n\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["s0"],"Extras":[]},"Source":"s0 = s [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["s [0]"],"Extras":[]},"Source":"= s [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"s [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["l > 2 && s0 == '\\\\' && s [1] == '\\\\'","{\n\t\t\t\tstart = 2;\n\t\t\t}"],"Extras":[]},"Source":"\t\t\tif (l > 2 && s0 == '\\\\' && s [1] == '\\\\'){\n\t\t\t\tstart = 2;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l > 2 && s0 == '\\\\' && s [1] == '\\\\'"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l > 2 && s0 == '\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l > 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"s0 == '\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s0"],"Extras":[]},"Source":"s0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"s [1] == '\\\\'"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"s [1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\'"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tstart = 2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["start","=","2"],"Extras":[]},"Source":"\t\t\t\tstart = 2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"\t\t\t\tstart "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["l == 1 && (s0 == DirectorySeparatorChar || s0 == AltDirectorySeparatorChar)","return s;"],"Extras":[]},"Source":"\n\t\t\t// We are only left with root\n\t\t\tif (l == 1 && (s0 == DirectorySeparatorChar || s0 == AltDirectorySeparatorChar))\n\t\t\t\treturn s;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l == 1 && (s0 == DirectorySeparatorChar || s0 == AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l == 1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(s0 == DirectorySeparatorChar || s0 == AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"s0 == DirectorySeparatorChar || s0 == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"s0 == DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s0"],"Extras":[]},"Source":"s0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"s0 == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s0"],"Extras":[]},"Source":"s0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["s"],"Extras":[]},"Source":"\t\t\t\treturn s;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"ForStatement","Info":null,"Source":"\n\t\t\t// Cleanup\n\t\t\tfor (int i = start; i < l; i++){\n\t\t\t\tchar c = s [i];\n\t\t\t\t\n\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (DirectorySeparatorChar != AltDirectorySeparatorChar && c == AltDirectorySeparatorChar)\n\t\t\t\t\talt++;\n\t\t\t\tif (i+1 == l)\n\t\t\t\t\tsub++;\n\t\t\t\telse {\n\t\t\t\t\tc = s [i + 1];\n\t\t\t\t\tif (c == DirectorySeparatorChar || c == AltDirectorySeparatorChar)\n\t\t\t\t\t\tsub++;\n\t\t\t\t}\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:i"],"Extras":[]},"Source":"int i = start"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["i"],"Extras":[]},"Source":"i = start"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["start"],"Extras":[]},"Source":"= start"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i < l"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"i++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["c","char"],"Extras":[]},"Source":"\t\t\t\tchar c = s [i];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:c"],"Extras":[]},"Source":"\t\t\t\tchar c = s [i]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"\t\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["c"],"Extras":[]},"Source":"c = s [i]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["s [i]"],"Extras":[]},"Source":"= s [i]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"s [i]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["c != DirectorySeparatorChar && c != AltDirectorySeparatorChar","continue;"],"Extras":[]},"Source":"\t\t\t\t\n\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar)\n\t\t\t\t\tcontinue;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != DirectorySeparatorChar && c != AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ContinueStatement","Info":null,"Source":"\t\t\t\t\tcontinue;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["DirectorySeparatorChar != AltDirectorySeparatorChar && c == AltDirectorySeparatorChar","alt++;"],"Extras":[]},"Source":"\t\t\t\tif (DirectorySeparatorChar != AltDirectorySeparatorChar && c == AltDirectorySeparatorChar)\n\t\t\t\t\talt++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar != AltDirectorySeparatorChar && c == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar != AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\talt++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\t\talt++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["alt"],"Extras":[]},"Source":"\t\t\t\t\talt"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["i+1 == l","sub++;","{\n\t\t\t\t\tc = s [i + 1];\n\t\t\t\t\tif (c == DirectorySeparatorChar || c == AltDirectorySeparatorChar)\n\t\t\t\t\t\tsub++;\n\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\tif (i+1 == l)\n\t\t\t\t\tsub++;\n\t\t\t\telse {\n\t\t\t\t\tc = s [i + 1];\n\t\t\t\t\tif (c == DirectorySeparatorChar || c == AltDirectorySeparatorChar)\n\t\t\t\t\t\tsub++;\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i+1 == l"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i+1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tsub++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\t\tsub++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["sub"],"Extras":[]},"Source":"\t\t\t\t\tsub"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\t\telse {\n\t\t\t\t\tc = s [i + 1];\n\t\t\t\t\tif (c == DirectorySeparatorChar || c == AltDirectorySeparatorChar)\n\t\t\t\t\t\tsub++;\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tc = s [i + 1];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["c","=","s [i + 1]"],"Extras":[]},"Source":"\t\t\t\t\tc = s [i + 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"\t\t\t\t\tc "},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"s [i + 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i + 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i + 1"],"Extras":[]},"Source":"i + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["c == DirectorySeparatorChar || c == AltDirectorySeparatorChar","sub++;"],"Extras":[]},"Source":"\t\t\t\t\tif (c == DirectorySeparatorChar || c == AltDirectorySeparatorChar)\n\t\t\t\t\t\tsub++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == DirectorySeparatorChar || c == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tsub++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\t\t\tsub++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["sub"],"Extras":[]},"Source":"\t\t\t\t\t\tsub"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["sub == 0 && alt == 0","return s;"],"Extras":[]},"Source":"\n\t\t\tif (sub == 0 && alt == 0)\n\t\t\t\treturn s;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"sub == 0 && alt == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"sub == 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["sub"],"Extras":[]},"Source":"sub "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"alt == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["alt"],"Extras":[]},"Source":"alt "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["s"],"Extras":[]},"Source":"\t\t\t\treturn s;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["copy","char []"],"Extras":[]},"Source":"\n\t\t\tchar [] copy = new char [l-sub];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char []","name:copy"],"Extras":[]},"Source":"\n\t\t\tchar [] copy = new char [l-sub]"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"\n\t\t\tchar [] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"\n\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["copy"],"Extras":[]},"Source":"copy = new char [l-sub]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["new char [l-sub]"],"Extras":[]},"Source":"= new char [l-sub]"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new char [l-sub]"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char [l-sub]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[l-sub]"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l-sub"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["sub"],"Extras":[]},"Source":"sub"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["start != 0","{\n\t\t\t\tcopy [0] = '\\\\';\n\t\t\t\tcopy [1] = '\\\\';\n\t\t\t}"],"Extras":[]},"Source":"\t\t\tif (start != 0){\n\t\t\t\tcopy [0] = '\\\\';\n\t\t\t\tcopy [1] = '\\\\';\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"start != 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tcopy [0] = '\\\\';\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["copy [0]","=","'\\\\'"],"Extras":[]},"Source":"\t\t\t\tcopy [0] = '\\\\'"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\tcopy [0] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["copy"],"Extras":[]},"Source":"\t\t\t\tcopy "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\'"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tcopy [1] = '\\\\';\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["copy [1]","=","'\\\\'"],"Extras":[]},"Source":"\t\t\t\tcopy [1] = '\\\\'"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\tcopy [1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["copy"],"Extras":[]},"Source":"\t\t\t\tcopy "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\'"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ForStatement","Info":null,"Source":"\t\t\tfor (int i = start, j = start; i < l && j < copy.Length; i++){\n\t\t\t\tchar c = s [i];\n\n\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar){\n\t\t\t\t\tcopy [j++] = c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// For non-trailing cases.\n\t\t\t\tif (j+1 != copy.Length){\n\t\t\t\t\tcopy [j++] = DirectorySeparatorChar;\n\t\t\t\t\tfor (;i < l-1; i++){\n\t\t\t\t\t\tc = s [i+1];\n\t\t\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:i"],"Extras":[]},"Source":"int i = start, j = start"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["i"],"Extras":[]},"Source":"i = start"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["start"],"Extras":[]},"Source":"= start"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["j"],"Extras":[]},"Source":"j = start"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["start"],"Extras":[]},"Source":"= start"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i < l && j < copy.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i < l "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"j < copy.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["j"],"Extras":[]},"Source":"j "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"copy.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["copy"],"Extras":[]},"Source":"copy"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"i++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["c","char"],"Extras":[]},"Source":"\t\t\t\tchar c = s [i];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:c"],"Extras":[]},"Source":"\t\t\t\tchar c = s [i]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"\t\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["c"],"Extras":[]},"Source":"c = s [i]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["s [i]"],"Extras":[]},"Source":"= s [i]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"s [i]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["c != DirectorySeparatorChar && c != AltDirectorySeparatorChar","{\n\t\t\t\t\tcopy [j++] = c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}"],"Extras":[]},"Source":"\n\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar){\n\t\t\t\t\tcopy [j++] = c;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != DirectorySeparatorChar && c != AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tcopy [j++] = c;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["copy [j++]","=","c"],"Extras":[]},"Source":"\t\t\t\t\tcopy [j++] = c"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\tcopy [j++] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["copy"],"Extras":[]},"Source":"\t\t\t\t\tcopy "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[j++] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["j++"],"Extras":[]},"Source":"j++"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"j++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["j"],"Extras":[]},"Source":"j"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ContinueStatement","Info":null,"Source":"\t\t\t\t\tcontinue;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["j+1 != copy.Length","{\n\t\t\t\t\tcopy [j++] = DirectorySeparatorChar;\n\t\t\t\t\tfor (;i < l-1; i++){\n\t\t\t\t\t\tc = s [i+1];\n\t\t\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}"],"Extras":[]},"Source":"\n\t\t\t\t// For non-trailing cases.\n\t\t\t\tif (j+1 != copy.Length){\n\t\t\t\t\tcopy [j++] = DirectorySeparatorChar;\n\t\t\t\t\tfor (;i < l-1; i++){\n\t\t\t\t\t\tc = s [i+1];\n\t\t\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"j+1 != copy.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"j+1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["j"],"Extras":[]},"Source":"j"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"copy.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["copy"],"Extras":[]},"Source":"copy"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tcopy [j++] = DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["copy [j++]","=","DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\tcopy [j++] = DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\tcopy [j++] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["copy"],"Extras":[]},"Source":"\t\t\t\t\tcopy "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[j++] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["j++"],"Extras":[]},"Source":"j++"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"j++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["j"],"Extras":[]},"Source":"j"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ForStatement","Info":null,"Source":"\t\t\t\t\tfor (;i < l-1; i++){\n\t\t\t\t\t\tc = s [i+1];\n\t\t\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i < l-1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l-1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"i++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tc = s [i+1];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["c","=","s [i+1]"],"Extras":[]},"Source":"\t\t\t\t\t\tc = s [i+1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"\t\t\t\t\t\tc "},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"s [i+1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i+1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i+1"],"Extras":[]},"Source":"i+1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i+1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["c != DirectorySeparatorChar && c != AltDirectorySeparatorChar","break;"],"Extras":[]},"Source":"\t\t\t\t\t\tif (c != DirectorySeparatorChar && c != AltDirectorySeparatorChar)\n\t\t\t\t\t\t\tbreak;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != DirectorySeparatorChar && c != AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c != AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BreakStatement","Info":null,"Source":"\t\t\t\t\t\t\tbreak;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["new String (copy)"],"Extras":[]},"Source":"\t\t\treturn new String (copy);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["String"],"Extras":[]},"Source":"new String (copy)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["copy"],"Extras":[]},"Source":"(copy)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["copy"],"Extras":[]},"Source":"copy"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["copy"],"Extras":[]},"Source":"copy"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetDirectoryName","string"],"Extras":["public static"]},"Source":"\n\t\tpublic static string GetDirectoryName (string path)\n\t\t{\n\t\t\t// LAMESPEC: For empty string MS docs say both\n\t\t\t// return null AND throw exception.  Seems .NET throws.\n\t\t\tif (path == String.Empty)\n\t\t\t\tthrow new ArgumentException(\"Invalid path\");\n\n\t\t\tif (path == null || GetPathRoot (path) == path)\n\t\t\t\treturn null;\n\n\t\t\tif (path.Trim ().Length == 0)\n\t\t\t\tthrow new ArgumentException (\"Argument string consists of whitespace characters only.\");\n\n\t\t\tif (path.IndexOfAny (System.IO.Path.InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == String.Empty","throw new ArgumentException(\"Invalid path\");"],"Extras":[]},"Source":"\t\t\t// LAMESPEC: For empty string MS docs say both\n\t\t\t// return null AND throw exception.  Seems .NET throws.\n\t\t\tif (path == String.Empty)\n\t\t\t\tthrow new ArgumentException(\"Invalid path\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Empty"],"Extras":[]},"Source":"Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException(\"Invalid path\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException(\"Invalid path\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Invalid path\""],"Extras":[]},"Source":"(\"Invalid path\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Invalid path\""],"Extras":[]},"Source":"\"Invalid path\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Invalid path\""],"Extras":[]},"Source":"\"Invalid path\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null || GetPathRoot (path) == path","return null;"],"Extras":[]},"Source":"\n\t\t\tif (path == null || GetPathRoot (path) == path)\n\t\t\t\treturn null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null || GetPathRoot (path) == path"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"GetPathRoot (path) == path"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["GetPathRoot"],"Extras":[]},"Source":"GetPathRoot (path) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetPathRoot"],"Extras":[]},"Source":"GetPathRoot "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["null"],"Extras":[]},"Source":"\t\t\t\treturn null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Trim ().Length == 0","throw new ArgumentException (\"Argument string consists of whitespace characters only.\");"],"Extras":[]},"Source":"\n\t\t\tif (path.Trim ().Length == 0)\n\t\t\t\tthrow new ArgumentException (\"Argument string consists of whitespace characters only.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Trim ().Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim ().Length "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Trim"],"Extras":[]},"Source":"path.Trim ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Trim"],"Extras":[]},"Source":"Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Argument string consists of whitespace characters only.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Argument string consists of whitespace characters only.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Argument string consists of whitespace characters only.\""],"Extras":[]},"Source":"(\"Argument string consists of whitespace characters only.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Argument string consists of whitespace characters only.\""],"Extras":[]},"Source":"\"Argument string consists of whitespace characters only.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Argument string consists of whitespace characters only.\""],"Extras":[]},"Source":"\"Argument string consists of whitespace characters only.\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.IndexOfAny (System.IO.Path.InvalidPathChars) > -1","throw new ArgumentException (\"Path contains invalid characters\");"],"Extras":[]},"Source":"\n\t\t\tif (path.IndexOfAny (System.IO.Path.InvalidPathChars) > -1)\n\t\t\t\tthrow new ArgumentException (\"Path contains invalid characters\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.IndexOfAny (System.IO.Path.InvalidPathChars) > -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOfAny"],"Extras":[]},"Source":"path.IndexOfAny (System.IO.Path.InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["System.IO.Path.InvalidPathChars"],"Extras":[]},"Source":"(System.IO.Path.InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["System.IO.Path.InvalidPathChars"],"Extras":[]},"Source":"System.IO.Path.InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"System.IO.Path.InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"System.IO.Path"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"System.IO"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["System"],"Extras":[]},"Source":"System"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IO"],"Extras":[]},"Source":"IO"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Path"],"Extras":[]},"Source":"Path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Path contains invalid characters\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Path contains invalid characters\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Path contains invalid characters\""],"Extras":[]},"Source":"(\"Path contains invalid characters\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Path contains invalid characters\""],"Extras":[]},"Source":"\"Path contains invalid characters\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Path contains invalid characters\""],"Extras":[]},"Source":"\"Path contains invalid characters\""},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["nLast","int"],"Extras":[]},"Source":"\n\t\t\tint nLast = path.LastIndexOfAny (PathSeparatorChars);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:nLast"],"Extras":[]},"Source":"\n\t\t\tint nLast = path.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast = path.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.LastIndexOfAny (PathSeparatorChars)"],"Extras":[]},"Source":"= path.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.LastIndexOfAny"],"Extras":[]},"Source":"path.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.LastIndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["LastIndexOfAny"],"Extras":[]},"Source":"LastIndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"(PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["nLast == 0","nLast++;"],"Extras":[]},"Source":"\t\t\tif (nLast == 0)\n\t\t\t\tnLast++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"nLast == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tnLast++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\tnLast++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"\t\t\t\tnLast"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["nLast > 0","{\n\t\t\t\tstring ret = path.Substring (0, nLast);\n\t\t\t\tint l = ret.Length;\n\n\t\t\t\tif (l >= 2 && DirectorySeparatorChar == '\\\\' && ret [l - 1] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + DirectorySeparatorChar;\n\t\t\t\telse if (l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 && path [nLast] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + VolumeSeparatorChar;\n\t\t\t\telse {\n\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should not\n\t\t\t\t\t// return absolute paths\n\t\t\t\t\t//\n\t\t\t\t\treturn CleanPath (ret);\n\t\t\t\t}\n\t\t\t}"],"Extras":[]},"Source":"\n\t\t\tif (nLast > 0) {\n\t\t\t\tstring ret = path.Substring (0, nLast);\n\t\t\t\tint l = ret.Length;\n\n\t\t\t\tif (l >= 2 && DirectorySeparatorChar == '\\\\' && ret [l - 1] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + DirectorySeparatorChar;\n\t\t\t\telse if (l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 && path [nLast] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + VolumeSeparatorChar;\n\t\t\t\telse {\n\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"nLast > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["ret","string"],"Extras":[]},"Source":"\t\t\t\tstring ret = path.Substring (0, nLast);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:ret"],"Extras":[]},"Source":"\t\t\t\tstring ret = path.Substring (0, nLast)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret = path.Substring (0, nLast)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.Substring (0, nLast)"],"Extras":[]},"Source":"= path.Substring (0, nLast)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"path.Substring (0, nLast)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["0, nLast"],"Extras":[]},"Source":"(0, nLast)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["l","int"],"Extras":[]},"Source":"\t\t\t\tint l = ret.Length;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:l"],"Extras":[]},"Source":"\t\t\t\tint l = ret.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["l"],"Extras":[]},"Source":"l = ret.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["ret.Length"],"Extras":[]},"Source":"= ret.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"ret.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["l >= 2 && DirectorySeparatorChar == '\\\\' && ret [l - 1] == VolumeSeparatorChar","return ret + DirectorySeparatorChar;","if (l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 && path [nLast] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + VolumeSeparatorChar;\n\t\t\t\telse {\n\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should not\n\t\t\t\t\t// return absolute paths\n\t\t\t\t\t//\n\t\t\t\t\treturn CleanPath (ret);\n\t\t\t\t}"],"Extras":[]},"Source":"\n\t\t\t\tif (l >= 2 && DirectorySeparatorChar == '\\\\' && ret [l - 1] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + DirectorySeparatorChar;\n\t\t\t\telse if (l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 && path [nLast] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + VolumeSeparatorChar;\n\t\t\t\telse {\n\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should not\n\t\t\t\t\t// return absolute paths\n\t\t\t\t\t//\n\t\t\t\t\treturn CleanPath (ret);\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l >= 2 && DirectorySeparatorChar == '\\\\' && ret [l - 1] == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l >= 2 && DirectorySeparatorChar == '\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l >= 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar == '\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ret [l - 1] == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"ret [l - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[l - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["l - 1"],"Extras":[]},"Source":"l - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["ret + DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\treturn ret + DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ret + DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\t\telse if (l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 && path [nLast] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + VolumeSeparatorChar;\n\t\t\t\telse {\n\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should not\n\t\t\t\t\t// return absolute paths\n\t\t\t\t\t//\n\t\t\t\t\treturn CleanPath (ret);\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 && path [nLast] == VolumeSeparatorChar","return ret + VolumeSeparatorChar;","{\n\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should not\n\t\t\t\t\t// return absolute paths\n\t\t\t\t\t//\n\t\t\t\t\treturn CleanPath (ret);\n\t\t\t\t}"],"Extras":[]},"Source":"if (l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 && path [nLast] == VolumeSeparatorChar)\n\t\t\t\t\treturn ret + VolumeSeparatorChar;\n\t\t\t\telse {\n\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should not\n\t\t\t\t\t// return absolute paths\n\t\t\t\t\t//\n\t\t\t\t\treturn CleanPath (ret);\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 && path [nLast] == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l == 1 && DirectorySeparatorChar == '\\\\' && path.Length >= 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l == 1 && DirectorySeparatorChar == '\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"l == 1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["l"],"Extras":[]},"Source":"l "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar == '\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length >= 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path [nLast] == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [nLast] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[nLast] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["ret + VolumeSeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\treturn ret + VolumeSeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ret + VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\t\telse {\n\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should not\n\t\t\t\t\t// return absolute paths\n\t\t\t\t\t//\n\t\t\t\t\treturn CleanPath (ret);\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["CleanPath (ret)"],"Extras":[]},"Source":"\t\t\t\t\t//\n\t\t\t\t\t// Important: do not use CanonicalizePath here, use\n\t\t\t\t\t// the custom CleanPath here, as this should not\n\t\t\t\t\t// return absolute paths\n\t\t\t\t\t//\n\t\t\t\t\treturn CleanPath (ret);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["CleanPath"],"Extras":[]},"Source":"CleanPath (ret)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CleanPath"],"Extras":[]},"Source":"CleanPath "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["ret"],"Extras":[]},"Source":"(ret)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["String.Empty"],"Extras":[]},"Source":"\n\t\t\treturn String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Empty"],"Extras":[]},"Source":"Empty"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetDirectoryName","ReadOnlySpan<char>"],"Extras":["public static"]},"Source":"\n\t\tpublic static ReadOnlySpan<char> GetDirectoryName (ReadOnlySpan<char> path)\n\t\t{\n\t\t\treturn Path.GetDirectoryName (path.ToString ()).AsSpan ();\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["Path.GetDirectoryName (path.ToString ()).AsSpan ()"],"Extras":[]},"Source":"\t\t\treturn Path.GetDirectoryName (path.ToString ()).AsSpan ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Path.GetDirectoryName (path.ToString ()).AsSpan"],"Extras":[]},"Source":"Path.GetDirectoryName (path.ToString ()).AsSpan ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Path.GetDirectoryName (path.ToString ()).AsSpan "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Path.GetDirectoryName"],"Extras":[]},"Source":"Path.GetDirectoryName (path.ToString ())"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Path.GetDirectoryName "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Path"],"Extras":[]},"Source":"Path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetDirectoryName"],"Extras":[]},"Source":"GetDirectoryName "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path.ToString ()"],"Extras":[]},"Source":"(path.ToString ())"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path.ToString ()"],"Extras":[]},"Source":"path.ToString ()"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.ToString"],"Extras":[]},"Source":"path.ToString ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ToString"],"Extras":[]},"Source":"ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AsSpan"],"Extras":[]},"Source":"AsSpan "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetExtension","string"],"Extras":["public static"]},"Source":"\n\t\tpublic static string GetExtension (string path)\n\t\t{\n\t\t\tif (path == null)\n\t\t\t\treturn null;\n\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n\n\t\t\tint iExt = findExtension (path);\n\n\t\t\tif (iExt > -1)\n\t\t\t{\n\t\t\t\tif (iExt < path.Length - 1)\n\t\t\t\t\treturn path.Substring (iExt);\n\t\t\t}\n\t\t\treturn string.Empty;\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null","return null;"],"Extras":[]},"Source":"\t\t\tif (path == null)\n\t\t\t\treturn null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["null"],"Extras":[]},"Source":"\t\t\t\treturn null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.IndexOfAny (InvalidPathChars) != -1","throw new ArgumentException (\"Illegal characters in path.\");"],"Extras":[]},"Source":"\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.IndexOfAny (InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOfAny"],"Extras":[]},"Source":"path.IndexOfAny (InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"(InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"(\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["iExt","int"],"Extras":[]},"Source":"\n\t\t\tint iExt = findExtension (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:iExt"],"Extras":[]},"Source":"\n\t\t\tint iExt = findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt = findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["findExtension (path)"],"Extras":[]},"Source":"= findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["findExtension"],"Extras":[]},"Source":"findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["findExtension"],"Extras":[]},"Source":"findExtension "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["iExt > -1","{\n\t\t\t\tif (iExt < path.Length - 1)\n\t\t\t\t\treturn path.Substring (iExt);\n\t\t\t}"],"Extras":[]},"Source":"\n\t\t\tif (iExt > -1)\n\t\t\t{\n\t\t\t\tif (iExt < path.Length - 1)\n\t\t\t\t\treturn path.Substring (iExt);\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"iExt > -1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt "},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["iExt < path.Length - 1","return path.Substring (iExt);"],"Extras":[]},"Source":"\t\t\t\tif (iExt < path.Length - 1)\n\t\t\t\t\treturn path.Substring (iExt);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"iExt < path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path.Substring (iExt)"],"Extras":[]},"Source":"\t\t\t\t\treturn path.Substring (iExt);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"path.Substring (iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"(iExt)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iExt"],"Extras":[]},"Source":"iExt"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["string.Empty"],"Extras":[]},"Source":"\t\t\treturn string.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"string.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Empty"],"Extras":[]},"Source":"Empty"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetFileName","string"],"Extras":["public static"]},"Source":"\n\t\tpublic static string GetFileName (string path)\n\t\t{\n\t\t\tif (path == null || path.Length == 0)\n\t\t\t\treturn path;\n\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n\n\t\t\tint nLast = path.LastIndexOfAny (PathSeparatorChars);\n\t\t\tif (nLast >= 0)\n\t\t\t\treturn path.Substring (nLast + 1);\n\n\t\t\treturn path;\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null || path.Length == 0","return path;"],"Extras":[]},"Source":"\t\t\tif (path == null || path.Length == 0)\n\t\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null || path.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.IndexOfAny (InvalidPathChars) != -1","throw new ArgumentException (\"Illegal characters in path.\");"],"Extras":[]},"Source":"\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.IndexOfAny (InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOfAny"],"Extras":[]},"Source":"path.IndexOfAny (InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"(InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"(\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["nLast","int"],"Extras":[]},"Source":"\n\t\t\tint nLast = path.LastIndexOfAny (PathSeparatorChars);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:nLast"],"Extras":[]},"Source":"\n\t\t\tint nLast = path.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast = path.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.LastIndexOfAny (PathSeparatorChars)"],"Extras":[]},"Source":"= path.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.LastIndexOfAny"],"Extras":[]},"Source":"path.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.LastIndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["LastIndexOfAny"],"Extras":[]},"Source":"LastIndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"(PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["nLast >= 0","return path.Substring (nLast + 1);"],"Extras":[]},"Source":"\t\t\tif (nLast >= 0)\n\t\t\t\treturn path.Substring (nLast + 1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"nLast >= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path.Substring (nLast + 1)"],"Extras":[]},"Source":"\t\t\t\treturn path.Substring (nLast + 1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"path.Substring (nLast + 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["nLast + 1"],"Extras":[]},"Source":"(nLast + 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["nLast + 1"],"Extras":[]},"Source":"nLast + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"nLast + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["nLast"],"Extras":[]},"Source":"nLast "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path"],"Extras":[]},"Source":"\n\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetFileNameWithoutExtension","string"],"Extras":["public static"]},"Source":"\t\tpublic static string GetFileNameWithoutExtension (string path)\n\t\t{\n\t\t\treturn ChangeExtension (GetFileName (path), null);\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["ChangeExtension (GetFileName (path), null)"],"Extras":[]},"Source":"\t\t\treturn ChangeExtension (GetFileName (path), null);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["ChangeExtension"],"Extras":[]},"Source":"ChangeExtension (GetFileName (path), null)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ChangeExtension"],"Extras":[]},"Source":"ChangeExtension "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["GetFileName (path), null"],"Extras":[]},"Source":"(GetFileName (path), null)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["GetFileName (path)"],"Extras":[]},"Source":"GetFileName (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["GetFileName"],"Extras":[]},"Source":"GetFileName (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetFileName"],"Extras":[]},"Source":"GetFileName "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetFullPath","string"],"Extras":["public static"]},"Source":"\n\t\tpublic static string GetFullPath (string path)\n\t\t{\n\t\t\tstring fullpath = InsecureGetFullPath (path);\n\n\t\t\tSecurityManager.EnsureElevatedPermissions (); // this is a no-op outside moonlight\n\n#if MONO_FEATURE_CAS\n\t\t\tif (SecurityManager.SecurityEnabled) {\n\t\t\t\tnew FileIOPermission (FileIOPermissionAccess.PathDiscovery, fullpath).Demand ();\n\t\t\t}\n#endif\n\t\t\treturn fullpath;\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["fullpath","string"],"Extras":[]},"Source":"\t\t\tstring fullpath = InsecureGetFullPath (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:fullpath"],"Extras":[]},"Source":"\t\t\tstring fullpath = InsecureGetFullPath (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["fullpath"],"Extras":[]},"Source":"fullpath = InsecureGetFullPath (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["InsecureGetFullPath (path)"],"Extras":[]},"Source":"= InsecureGetFullPath (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["InsecureGetFullPath"],"Extras":[]},"Source":"InsecureGetFullPath (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InsecureGetFullPath"],"Extras":[]},"Source":"InsecureGetFullPath "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tSecurityManager.EnsureElevatedPermissions (); // this is a no-op outside moonlight\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["SecurityManager.EnsureElevatedPermissions"],"Extras":[]},"Source":"\n\t\t\tSecurityManager.EnsureElevatedPermissions ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\n\t\t\tSecurityManager.EnsureElevatedPermissions "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecurityManager"],"Extras":[]},"Source":"\n\t\t\tSecurityManager"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["EnsureElevatedPermissions"],"Extras":[]},"Source":"EnsureElevatedPermissions "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["fullpath"],"Extras":[]},"Source":"\n#if MONO_FEATURE_CAS\n\t\t\tif (SecurityManager.SecurityEnabled) {\n\t\t\t\tnew FileIOPermission (FileIOPermissionAccess.PathDiscovery, fullpath).Demand ();\n\t\t\t}\n#endif\n\t\t\treturn fullpath;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["fullpath"],"Extras":[]},"Source":"fullpath"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetFullPathInternal","String"],"Extras":["internal static"]},"Source":"\n\t\tinternal static String GetFullPathInternal(String path)\n\t\t{\n\t\t\treturn InsecureGetFullPath (path);\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(String path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","String "],"Extras":[]},"Source":"String path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String "},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["InsecureGetFullPath (path)"],"Extras":[]},"Source":"\t\t\treturn InsecureGetFullPath (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["InsecureGetFullPath"],"Extras":[]},"Source":"InsecureGetFullPath (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InsecureGetFullPath"],"Extras":[]},"Source":"InsecureGetFullPath "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["InsecureGetFullPath","string"],"Extras":["internal static"]},"Source":"\n#if WIN_PLATFORM\n\t\t// http://msdn.microsoft.com/en-us/library/windows/desktop/aa364963%28v=vs.85%29.aspx\n\t\t[DllImport(\"Kernel32.dll\", SetLastError = true, CharSet = CharSet.Unicode)]\n\t\tprivate static extern int GetFullPathName(string path, int numBufferChars, StringBuilder buffer, ref IntPtr lpFilePartOrNull); \n\n\t\tinternal static string GetFullPathName(string path)\n\t\t{\n\t\t\tconst int MAX_PATH = 260;\n\t\t\tStringBuilder buffer = new StringBuilder(MAX_PATH);\n\t\t\tIntPtr ptr = IntPtr.Zero;\n\t\t\tint length "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null","throw new ArgumentNullException (\"path\");"],"Extras":[]},"Source":"\t\t\tif (path == null)\n\t\t\t\tthrow new ArgumentNullException (\"path\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path\""],"Extras":[]},"Source":"(\"path\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path\""],"Extras":[]},"Source":"\"path\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path\""],"Extras":[]},"Source":"\"path\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Trim ().Length == 0","{\n\t\t\t\tstring msg = Locale.GetText (\"The specified path is not of a legal form (empty).\");\n\t\t\t\tthrow new ArgumentException (msg);\n\t\t\t}"],"Extras":[]},"Source":"\n\t\t\tif (path.Trim ().Length == 0) {\n\t\t\t\tstring msg = Locale.GetText (\"The specified path is not of a legal form (empty).\");\n\t\t\t\tthrow new ArgumentException (msg);\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Trim ().Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim ().Length "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Trim"],"Extras":[]},"Source":"path.Trim ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Trim"],"Extras":[]},"Source":"Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["msg","string"],"Extras":[]},"Source":"\t\t\t\tstring msg = Locale.GetText (\"The specified path is not of a legal form (empty).\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:msg"],"Extras":[]},"Source":"\t\t\t\tstring msg = Locale.GetText (\"The specified path is not of a legal form (empty).\")"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["msg"],"Extras":[]},"Source":"msg = Locale.GetText (\"The specified path is not of a legal form (empty).\")"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["Locale.GetText (\"The specified path is not of a legal form (empty).\")"],"Extras":[]},"Source":"= Locale.GetText (\"The specified path is not of a legal form (empty).\")"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Locale.GetText"],"Extras":[]},"Source":"Locale.GetText (\"The specified path is not of a legal form (empty).\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Locale.GetText "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Locale"],"Extras":[]},"Source":"Locale"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetText"],"Extras":[]},"Source":"GetText "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"The specified path is not of a legal form (empty).\""],"Extras":[]},"Source":"(\"The specified path is not of a legal form (empty).\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"The specified path is not of a legal form (empty).\""],"Extras":[]},"Source":"\"The specified path is not of a legal form (empty).\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"The specified path is not of a legal form (empty).\""],"Extras":[]},"Source":"\"The specified path is not of a legal form (empty).\""},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (msg);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (msg)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["msg"],"Extras":[]},"Source":"(msg)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["msg"],"Extras":[]},"Source":"msg"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["msg"],"Extras":[]},"Source":"msg"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["end","char"],"Extras":[]},"Source":"#if WIN_PLATFORM\n\t\t\t// adjust for drives, i.e. a special case for windows\n\t\t\tif (Environment.IsRunningOnWindows)\n\t\t\t\tpath = WindowsDriveAdjustment (path);\n#endif\n\t\t\t// if the supplied path ends with a separator...\n\t\t\tchar end = path [path.Length - 1];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:end"],"Extras":[]},"Source":"#if WIN_PLATFORM\n\t\t\t// adjust for drives, i.e. a special case for windows\n\t\t\tif (Environment.IsRunningOnWindows)\n\t\t\t\tpath = WindowsDriveAdjustment (path);\n#endif\n\t\t\t// if the supplied path ends with a separator...\n\t\t\tchar end = path [path.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"#if WIN_PLATFORM\n\t\t\t// adjust for drives, i.e. a special case for windows\n\t\t\tif (Environment.IsRunningOnWindows)\n\t\t\t\tpath = WindowsDriveAdjustment (path);\n#endif\n\t\t\t// if the supplied path ends with a separator...\n\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["end"],"Extras":[]},"Source":"end = path [path.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path [path.Length - 1]"],"Extras":[]},"Source":"= path [path.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [path.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[path.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path.Length - 1"],"Extras":[]},"Source":"path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["canonicalize","var"],"Extras":[]},"Source":"\n\t\t\tvar canonicalize = true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:var","name:canonicalize"],"Extras":[]},"Source":"\n\t\t\tvar canonicalize = true"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["var"],"Extras":[]},"Source":"\n\t\t\tvar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["canonicalize"],"Extras":[]},"Source":"canonicalize = true"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["true"],"Extras":[]},"Source":"= true"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Length >= 2 &&\n\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\tIsDirectorySeparator (path [1])","{\n\t\t\t\tif (path.Length == 2 || path.IndexOf (path [0], 2) < 0)\n\t\t\t\t\tthrow new ArgumentException (\"UNC paths should be of the form \\\\\\\\server\\\\share.\");\n\n\t\t\t\tif (path [0] != DirectorySeparatorChar)\n\t\t\t\t\tpath = path.Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n\n\t\t\t}","{\n\t\t\t\tif (!IsPathRooted (path)) {\n\t\t\t\t\t\n\t\t\t\t\t// avoid calling expensive CanonicalizePath when possible\n\t\t\t\t\tif (!Environment.IsRunningOnWindows) {\n\t\t\t\t\t\tvar start = 0;\n\t\t\t\t\t\twhile ((start = path.IndexOf ('.', start)) != -1) {\n\t\t\t\t\t\t\tif (++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcanonicalize = start > 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cwd = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (cwd [cwd.Length - 1] == DirectorySeparatorChar)\n\t\t\t\t\t\tpath = cwd + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = cwd + DirectorySeparatorChar + path;\t\t\t\t\t\n\t\t\t\t} else if (DirectorySeparatorChar == '\\\\' &&\n\t\t\t\t\tpath.Length >= 2 &&\n\t\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\t\t!IsDirectorySeparator (path [1])) { // like `\\abc\\def'\n\t\t\t\t\tstring current = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (current [1] == VolumeSeparatorChar)\n\t\t\t\t\t\tpath = current.Substring (0, 2) + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));\n\t\t\t\t}\n\t\t\t}"],"Extras":[]},"Source":"\t\t\tif (path.Length >= 2 &&\n\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\tIsDirectorySeparator (path [1])) {\n\t\t\t\tif (path.Length == 2 || path.IndexOf (path [0], 2) < 0)\n\t\t\t\t\tthrow new ArgumentException (\"UNC paths should be of the form \\\\\\\\server\\\\share.\");\n\n\t\t\t\tif (path [0] != DirectorySeparatorChar)\n\t\t\t\t\tpath = path.Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n\n\t\t\t} else {\n\t\t\t\tif (!IsPathRooted (path)) {\n\t\t\t\t\t\n\t\t\t\t\t// avoid calling expensive CanonicalizePath when possible\n\t\t\t\t\tif ("},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length >= 2 &&\n\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\tIsDirectorySeparator (path [1])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length >= 2 &&\n\t\t\t\tIsDirectorySeparator (path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length >= 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2 "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"\t\t\t\tIsDirectorySeparator (path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"\t\t\t\tIsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"(path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"\t\t\t\tIsDirectorySeparator (path [1])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"\t\t\t\tIsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [1]"],"Extras":[]},"Source":"(path [1])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [1]"],"Extras":[]},"Source":"path [1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Length == 2 || path.IndexOf (path [0], 2) < 0","throw new ArgumentException (\"UNC paths should be of the form \\\\\\\\server\\\\share.\");"],"Extras":[]},"Source":"\t\t\t\tif (path.Length == 2 || path.IndexOf (path [0], 2) < 0)\n\t\t\t\t\tthrow new ArgumentException (\"UNC paths should be of the form \\\\\\\\server\\\\share.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length == 2 || path.IndexOf (path [0], 2) < 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length == 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.IndexOf (path [0], 2) < 0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOf"],"Extras":[]},"Source":"path.IndexOf (path [0], 2) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOf "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOf"],"Extras":[]},"Source":"IndexOf "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [0], 2"],"Extras":[]},"Source":"(path [0], 2) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\t\tthrow new ArgumentException (\"UNC paths should be of the form \\\\\\\\server\\\\share.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"UNC paths should be of the form \\\\\\\\server\\\\share.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"UNC paths should be of the form \\\\\\\\server\\\\share.\""],"Extras":[]},"Source":"(\"UNC paths should be of the form \\\\\\\\server\\\\share.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"UNC paths should be of the form \\\\\\\\server\\\\share.\""],"Extras":[]},"Source":"\"UNC paths should be of the form \\\\\\\\server\\\\share.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"UNC paths should be of the form \\\\\\\\server\\\\share.\""],"Extras":[]},"Source":"\"UNC paths should be of the form \\\\\\\\server\\\\share.\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path [0] != DirectorySeparatorChar","path = path.Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);"],"Extras":[]},"Source":"\n\t\t\t\tif (path [0] != DirectorySeparatorChar)\n\t\t\t\t\tpath = path.Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path [0] != DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tpath = path.Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","=","path.Replace (AltDirectorySeparatorChar, DirectorySeparatorChar)"],"Extras":[]},"Source":"\t\t\t\t\tpath = path.Replace (AltDirectorySeparatorChar, DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\t\tpath "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Replace"],"Extras":[]},"Source":"path.Replace (AltDirectorySeparatorChar, DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Replace "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Replace"],"Extras":[]},"Source":"Replace "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["AltDirectorySeparatorChar, DirectorySeparatorChar"],"Extras":[]},"Source":"(AltDirectorySeparatorChar, DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else {\n\t\t\t\tif (!IsPathRooted (path)) {\n\t\t\t\t\t\n\t\t\t\t\t// avoid calling expensive CanonicalizePath when possible\n\t\t\t\t\tif (!Environment.IsRunningOnWindows) {\n\t\t\t\t\t\tvar start = 0;\n\t\t\t\t\t\twhile ((start = path.IndexOf ('.', start)) != -1) {\n\t\t\t\t\t\t\tif (++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcanonicalize = start > 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cwd = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (cwd [cwd.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!IsPathRooted (path)","{\n\t\t\t\t\t\n\t\t\t\t\t// avoid calling expensive CanonicalizePath when possible\n\t\t\t\t\tif (!Environment.IsRunningOnWindows) {\n\t\t\t\t\t\tvar start = 0;\n\t\t\t\t\t\twhile ((start = path.IndexOf ('.', start)) != -1) {\n\t\t\t\t\t\t\tif (++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcanonicalize = start > 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cwd = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (cwd [cwd.Length - 1] == DirectorySeparatorChar)\n\t\t\t\t\t\tpath = cwd + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = cwd + DirectorySeparatorChar + path;\t\t\t\t\t\n\t\t\t\t}","if (DirectorySeparatorChar == '\\\\' &&\n\t\t\t\t\tpath.Length >= 2 &&\n\t\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\t\t!IsDirectorySeparator (path [1])) { // like `\\abc\\def'\n\t\t\t\t\tstring current = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (current [1] == VolumeSeparatorChar)\n\t\t\t\t\t\tpath = current.Substring (0, 2) + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));\n\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\tif (!IsPathRooted (path)) {\n\t\t\t\t\t\n\t\t\t\t\t// avoid calling expensive CanonicalizePath when possible\n\t\t\t\t\tif (!Environment.IsRunningOnWindows) {\n\t\t\t\t\t\tvar start = 0;\n\t\t\t\t\t\twhile ((start = path.IndexOf ('.', start)) != -1) {\n\t\t\t\t\t\t\tif (++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcanonicalize = start > 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar cwd = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (cwd [cwd.Length - 1] == Di"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!IsPathRooted (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!Environment.IsRunningOnWindows","{\n\t\t\t\t\t\tvar start = 0;\n\t\t\t\t\t\twhile ((start = path.IndexOf ('.', start)) != -1) {\n\t\t\t\t\t\t\tif (++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcanonicalize = start > 0;\n\t\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\t\t\n\t\t\t\t\t// avoid calling expensive CanonicalizePath when possible\n\t\t\t\t\tif (!Environment.IsRunningOnWindows) {\n\t\t\t\t\t\tvar start = 0;\n\t\t\t\t\t\twhile ((start = path.IndexOf ('.', start)) != -1) {\n\t\t\t\t\t\t\tif (++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcanonicalize = start > 0;\n\t\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!Environment.IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsRunningOnWindows"],"Extras":[]},"Source":"IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["start","var"],"Extras":[]},"Source":"\t\t\t\t\t\tvar start = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:var","name:start"],"Extras":[]},"Source":"\t\t\t\t\t\tvar start = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["var"],"Extras":[]},"Source":"\t\t\t\t\t\tvar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["start"],"Extras":[]},"Source":"start = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["0"],"Extras":[]},"Source":"= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"WhileStatement","Info":null,"Source":"\t\t\t\t\t\twhile ((start = path.IndexOf ('.', start)) != -1) {\n\t\t\t\t\t\t\tif (++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar)\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"(start = path.IndexOf ('.', start)) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(start = path.IndexOf ('.', start)) "},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["start","=","path.IndexOf ('.', start)"],"Extras":[]},"Source":"start = path.IndexOf ('.', start)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOf"],"Extras":[]},"Source":"path.IndexOf ('.', start)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOf "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOf"],"Extras":[]},"Source":"IndexOf "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["'.', start"],"Extras":[]},"Source":"('.', start)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"'.'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"'.'"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar","break;"],"Extras":[]},"Source":"\t\t\t\t\t\t\tif (++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar)\n\t\t\t\t\t\t\t\tbreak;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"++start == path.Length || path [start] == DirectorySeparatorChar || path [start] == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"++start == path.Length || path [start] == DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"++start == path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"++start "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path [start] == DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [start] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[start] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path [start] == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [start] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[start] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BreakStatement","Info":null,"Source":"\t\t\t\t\t\t\t\tbreak;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tcanonicalize = start > 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["canonicalize","=","start > 0"],"Extras":[]},"Source":"\t\t\t\t\t\tcanonicalize = start > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["canonicalize"],"Extras":[]},"Source":"\t\t\t\t\t\tcanonicalize "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"start > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["start"],"Extras":[]},"Source":"start "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["cwd","var"],"Extras":[]},"Source":"\n\t\t\t\t\tvar cwd = Directory.InsecureGetCurrentDirectory();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:var","name:cwd"],"Extras":[]},"Source":"\n\t\t\t\t\tvar cwd = Directory.InsecureGetCurrentDirectory()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["var"],"Extras":[]},"Source":"\n\t\t\t\t\tvar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["cwd"],"Extras":[]},"Source":"cwd = Directory.InsecureGetCurrentDirectory()"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["Directory.InsecureGetCurrentDirectory()"],"Extras":[]},"Source":"= Directory.InsecureGetCurrentDirectory()"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Directory.InsecureGetCurrentDirectory"],"Extras":[]},"Source":"Directory.InsecureGetCurrentDirectory()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Directory.InsecureGetCurrentDirectory"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Directory"],"Extras":[]},"Source":"Directory"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InsecureGetCurrentDirectory"],"Extras":[]},"Source":"InsecureGetCurrentDirectory"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["cwd [cwd.Length - 1] == DirectorySeparatorChar","path = cwd + path;","path = cwd + DirectorySeparatorChar + path;"],"Extras":[]},"Source":"\t\t\t\t\tif (cwd [cwd.Length - 1] == DirectorySeparatorChar)\n\t\t\t\t\t\tpath = cwd + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = cwd + DirectorySeparatorChar + path;\t\t\t\t\t\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"cwd [cwd.Length - 1] == DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"cwd [cwd.Length - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["cwd"],"Extras":[]},"Source":"cwd "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[cwd.Length - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["cwd.Length - 1"],"Extras":[]},"Source":"cwd.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"cwd.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"cwd.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["cwd"],"Extras":[]},"Source":"cwd"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tpath = cwd + path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","=","cwd + path"],"Extras":[]},"Source":"\t\t\t\t\t\tpath = cwd + path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\t\t\tpath "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"cwd + path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["cwd"],"Extras":[]},"Source":"cwd "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\t\t\telse\n\t\t\t\t\t\tpath = cwd + DirectorySeparatorChar + path;\t\t\t\t\t\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tpath = cwd + DirectorySeparatorChar + path;\t\t\t\t\t\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","=","cwd + DirectorySeparatorChar + path"],"Extras":[]},"Source":"\t\t\t\t\t\tpath = cwd + DirectorySeparatorChar + path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\t\t\tpath "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"cwd + DirectorySeparatorChar + path"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"cwd + DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["cwd"],"Extras":[]},"Source":"cwd "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else if (DirectorySeparatorChar == '\\\\' &&\n\t\t\t\t\tpath.Length >= 2 &&\n\t\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\t\t!IsDirectorySeparator (path [1])) { // like `\\abc\\def'\n\t\t\t\t\tstring current = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (current [1] == VolumeSeparatorChar)\n\t\t\t\t\t\tpath = current.Substring (0, 2) + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["DirectorySeparatorChar == '\\\\' &&\n\t\t\t\t\tpath.Length >= 2 &&\n\t\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\t\t!IsDirectorySeparator (path [1])","{ // like `\\abc\\def'\n\t\t\t\t\tstring current = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (current [1] == VolumeSeparatorChar)\n\t\t\t\t\t\tpath = current.Substring (0, 2) + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));\n\t\t\t\t}"],"Extras":[]},"Source":"if (DirectorySeparatorChar == '\\\\' &&\n\t\t\t\t\tpath.Length >= 2 &&\n\t\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\t\t!IsDirectorySeparator (path [1])) { // like `\\abc\\def'\n\t\t\t\t\tstring current = Directory.InsecureGetCurrentDirectory();\n\t\t\t\t\tif (current [1] == VolumeSeparatorChar)\n\t\t\t\t\t\tpath = current.Substring (0, 2) + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar == '\\\\' &&\n\t\t\t\t\tpath.Length >= 2 &&\n\t\t\t\t\tIsDirectorySeparator (path [0]) &&\n\t\t\t\t\t!IsDirectorySeparator (path [1])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar == '\\\\' &&\n\t\t\t\t\tpath.Length >= 2 &&\n\t\t\t\t\tIsDirectorySeparator (path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar == '\\\\' &&\n\t\t\t\t\tpath.Length >= 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar == '\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\' "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tpath.Length >= 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\tpath.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\t\tpath"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2 "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"\t\t\t\t\tIsDirectorySeparator (path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"\t\t\t\t\tIsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"(path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"\t\t\t\t\t!IsDirectorySeparator (path [1])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [1])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [1]"],"Extras":[]},"Source":"(path [1])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [1]"],"Extras":[]},"Source":"path [1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["current","string"],"Extras":[]},"Source":"\t\t\t\t\tstring current = Directory.InsecureGetCurrentDirectory();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:current"],"Extras":[]},"Source":"\t\t\t\t\tstring current = Directory.InsecureGetCurrentDirectory()"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["current"],"Extras":[]},"Source":"current = Directory.InsecureGetCurrentDirectory()"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["Directory.InsecureGetCurrentDirectory()"],"Extras":[]},"Source":"= Directory.InsecureGetCurrentDirectory()"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Directory.InsecureGetCurrentDirectory"],"Extras":[]},"Source":"Directory.InsecureGetCurrentDirectory()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Directory.InsecureGetCurrentDirectory"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Directory"],"Extras":[]},"Source":"Directory"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InsecureGetCurrentDirectory"],"Extras":[]},"Source":"InsecureGetCurrentDirectory"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["current [1] == VolumeSeparatorChar","path = current.Substring (0, 2) + path;","path = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));"],"Extras":[]},"Source":"\t\t\t\t\tif (current [1] == VolumeSeparatorChar)\n\t\t\t\t\t\tpath = current.Substring (0, 2) + path;\n\t\t\t\t\telse\n\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"current [1] == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"current [1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["current"],"Extras":[]},"Source":"current "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tpath = current.Substring (0, 2) + path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","=","current.Substring (0, 2) + path"],"Extras":[]},"Source":"\t\t\t\t\t\tpath = current.Substring (0, 2) + path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\t\t\tpath "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"current.Substring (0, 2) + path"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["current.Substring"],"Extras":[]},"Source":"current.Substring (0, 2) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"current.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["current"],"Extras":[]},"Source":"current"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["0, 2"],"Extras":[]},"Source":"(0, 2) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\t\t\telse\n\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","=","current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1))"],"Extras":[]},"Source":"\t\t\t\t\t\tpath = current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\t\t\tpath "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["current.Substring"],"Extras":[]},"Source":"current.Substring (0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"current.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["current"],"Extras":[]},"Source":"current"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1)"],"Extras":[]},"Source":"(0, current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1)"],"Extras":[]},"Source":"current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["current.IndexOf"],"Extras":[]},"Source":"current.IndexOf ('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"current.IndexOf "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["current"],"Extras":[]},"Source":"current"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOf"],"Extras":[]},"Source":"IndexOf "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["'\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1"],"Extras":[]},"Source":"('\\\\', current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\'"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1"],"Extras":[]},"Source":"current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["current.IndexOfUnchecked"],"Extras":[]},"Source":"current.IndexOfUnchecked (\"\\\\\\\\\", 0, current.Length) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"current.IndexOfUnchecked "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["current"],"Extras":[]},"Source":"current"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfUnchecked"],"Extras":[]},"Source":"IndexOfUnchecked "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"\\\\\\\\\", 0, current.Length"],"Extras":[]},"Source":"(\"\\\\\\\\\", 0, current.Length) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"\\\\\\\\\""],"Extras":[]},"Source":"\"\\\\\\\\\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"\\\\\\\\\""],"Extras":[]},"Source":"\"\\\\\\\\\""},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["current.Length"],"Extras":[]},"Source":"current.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"current.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["current"],"Extras":[]},"Source":"current"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["canonicalize","path = CanonicalizePath (path);"],"Extras":[]},"Source":"\t\t\t\n\t\t\tif (canonicalize)\n\t\t\t    path = CanonicalizePath (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["canonicalize"],"Extras":[]},"Source":"canonicalize"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t    path = CanonicalizePath (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","=","CanonicalizePath (path)"],"Extras":[]},"Source":"\t\t\t    path = CanonicalizePath (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t    path "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["CanonicalizePath"],"Extras":[]},"Source":"CanonicalizePath (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CanonicalizePath"],"Extras":[]},"Source":"CanonicalizePath "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["IsDirectorySeparator (end) && (path [path.Length - 1] != DirectorySeparatorChar)","path += DirectorySeparatorChar;"],"Extras":[]},"Source":"\n\t\t\t// if the original ended with a [Alt]DirectorySeparatorChar then ensure the full path also ends with one\n\t\t\tif (IsDirectorySeparator (end) && (path [path.Length - 1] != DirectorySeparatorChar))\n\t\t\t\tpath += DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"IsDirectorySeparator (end) && (path [path.Length - 1] != DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (end) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["end"],"Extras":[]},"Source":"(end) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["end"],"Extras":[]},"Source":"end"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["end"],"Extras":[]},"Source":"end"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(path [path.Length - 1] != DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path [path.Length - 1] != DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [path.Length - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[path.Length - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path.Length - 1"],"Extras":[]},"Source":"path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tpath += DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","+=","DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\tpath += DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\tpath "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path"],"Extras":[]},"Source":"\n\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["IsDirectorySeparator","bool"],"Extras":["internal static"]},"Source":"\n\t\tinternal static bool IsDirectorySeparator (char c) {\n\t\t\treturn c == DirectorySeparatorChar || c == AltDirectorySeparatorChar;\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(char c) "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["c","char "],"Extras":[]},"Source":"char c"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["c == DirectorySeparatorChar || c == AltDirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\treturn c == DirectorySeparatorChar || c == AltDirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == DirectorySeparatorChar || c == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetPathRoot","string"],"Extras":["public static"]},"Source":"\t\tpublic static string GetPathRoot (string path)\n\t\t{\n\t\t\tif (path == null)\n\t\t\t\treturn null;\n\n\t\t\tif (path.Trim ().Length == 0)\n\t\t\t\tthrow new ArgumentException (\"The specified path is not of a legal form.\");\n\n\t\t\tif (!IsPathRooted (path))\n\t\t\t\treturn String.Empty;\n\t\t\t\n\t\t\tif (DirectorySeparatorChar == '/') {\n\t\t\t\t// UNIX\n\t\t\t\treturn IsDirectorySeparator (path [0]) ? DirectorySeparatorStr : String.Empty;\n\t\t\t} else {\n\t\t\t\t// Windows\n\t\t\t\tint len = 2;\n\n\t\t\t\tif (path.Length == 1 && IsDirectorySeparator (path ["},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null","return null;"],"Extras":[]},"Source":"\t\t\tif (path == null)\n\t\t\t\treturn null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["null"],"Extras":[]},"Source":"\t\t\t\treturn null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Trim ().Length == 0","throw new ArgumentException (\"The specified path is not of a legal form.\");"],"Extras":[]},"Source":"\n\t\t\tif (path.Trim ().Length == 0)\n\t\t\t\tthrow new ArgumentException (\"The specified path is not of a legal form.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Trim ().Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim ().Length "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Trim"],"Extras":[]},"Source":"path.Trim ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Trim"],"Extras":[]},"Source":"Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"The specified path is not of a legal form.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"The specified path is not of a legal form.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"The specified path is not of a legal form.\""],"Extras":[]},"Source":"(\"The specified path is not of a legal form.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"The specified path is not of a legal form.\""],"Extras":[]},"Source":"\"The specified path is not of a legal form.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"The specified path is not of a legal form.\""],"Extras":[]},"Source":"\"The specified path is not of a legal form.\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!IsPathRooted (path)","return String.Empty;"],"Extras":[]},"Source":"\n\t\t\tif (!IsPathRooted (path))\n\t\t\t\treturn String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!IsPathRooted (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["String.Empty"],"Extras":[]},"Source":"\t\t\t\treturn String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Empty"],"Extras":[]},"Source":"Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["DirectorySeparatorChar == '/'","{\n\t\t\t\t// UNIX\n\t\t\t\treturn IsDirectorySeparator (path [0]) ? DirectorySeparatorStr : String.Empty;\n\t\t\t}","{\n\t\t\t\t// Windows\n\t\t\t\tint len = 2;\n\n\t\t\t\tif (path.Length == 1 && IsDirectorySeparator (path [0]))\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\telse if (path.Length < 2)\n\t\t\t\t\treturn String.Empty;\n\n\t\t\t\tif (IsDirectorySeparator (path [0]) && IsDirectorySeparator (path[1])) {\n\t\t\t\t\t// UNC: \\\\server or \\\\server\\share\n\t\t\t\t\t// Get server\n\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\n\t\t\t\t\t// Get share\n\t\t\t\t\tif (len < path.Length) {\n\t\t\t\t\t\tlen++;\n\t\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn DirectorySeparatorStr +\n\t\t\t\t\t\tDirectorySeparatorStr +\n\t\t\t\t\t\tpath.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n\t\t\t\t} else if (IsDirectorySeparator (path [0])) {\n\t\t\t\t\t// path starts with '\\' or '/'\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\t} else if (path[1] == VolumeSeparatorChar) {\n\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n\t\t\t\t} else\n\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);// + path.Substring (0, len);\n\t\t\t\treturn path.Substring (0, len);\n\t\t\t}"],"Extras":[]},"Source":"\t\t\t\n\t\t\tif (DirectorySeparatorChar == '/') {\n\t\t\t\t// UNIX\n\t\t\t\treturn IsDirectorySeparator (path [0]) ? DirectorySeparatorStr : String.Empty;\n\t\t\t} else {\n\t\t\t\t// Windows\n\t\t\t\tint len = 2;\n\n\t\t\t\tif (path.Length == 1 && IsDirectorySeparator (path [0]))\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\telse if (path.Length < 2)\n\t\t\t\t\treturn String.Empty;\n\n\t\t\t\tif (IsDirectorySeparator (path [0]) && IsDirectorySeparator (path[1])) {\n\t\t\t\t\t// UNC: \\\\server or \\\\server\\share\n\t\t\t\t\t// Get server\n\t\t\t\t\twhile (len < path.Leng"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar == '/'"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'/'"],"Extras":[]},"Source":"'/'"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["IsDirectorySeparator (path [0]) ? DirectorySeparatorStr : String.Empty"],"Extras":[]},"Source":"\t\t\t\t// UNIX\n\t\t\t\treturn IsDirectorySeparator (path [0]) ? DirectorySeparatorStr : String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"IsDirectorySeparator (path [0]) ? DirectorySeparatorStr : String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"(path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Empty"],"Extras":[]},"Source":"Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else {\n\t\t\t\t// Windows\n\t\t\t\tint len = 2;\n\n\t\t\t\tif (path.Length == 1 && IsDirectorySeparator (path [0]))\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\telse if (path.Length < 2)\n\t\t\t\t\treturn String.Empty;\n\n\t\t\t\tif (IsDirectorySeparator (path [0]) && IsDirectorySeparator (path[1])) {\n\t\t\t\t\t// UNC: \\\\server or \\\\server\\share\n\t\t\t\t\t// Get server\n\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\n\t\t\t\t\t// Get share\n\t\t\t\t\tif (len < path.Length) {\n\t\t\t\t\t\tlen++;\n\t\t\t\t\t\twhile (len < path.Length &&"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["len","int"],"Extras":[]},"Source":"\t\t\t\t// Windows\n\t\t\t\tint len = 2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:len"],"Extras":[]},"Source":"\t\t\t\t// Windows\n\t\t\t\tint len = 2"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\t\t// Windows\n\t\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["len"],"Extras":[]},"Source":"len = 2"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["2"],"Extras":[]},"Source":"= 2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Length == 1 && IsDirectorySeparator (path [0])","return DirectorySeparatorStr;","if (path.Length < 2)\n\t\t\t\t\treturn String.Empty;"],"Extras":[]},"Source":"\n\t\t\t\tif (path.Length == 1 && IsDirectorySeparator (path [0]))\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\telse if (path.Length < 2)\n\t\t\t\t\treturn String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length == 1 && IsDirectorySeparator (path [0])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length == 1 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [0])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"(path [0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"\t\t\t\t\treturn DirectorySeparatorStr;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\t\telse if (path.Length < 2)\n\t\t\t\t\treturn String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Length < 2","return String.Empty;"],"Extras":[]},"Source":"if (path.Length < 2)\n\t\t\t\t\treturn String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length < 2"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["String.Empty"],"Extras":[]},"Source":"\t\t\t\t\treturn String.Empty;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Empty"],"Extras":[]},"Source":"Empty"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["IsDirectorySeparator (path [0]) && IsDirectorySeparator (path[1])","{\n\t\t\t\t\t// UNC: \\\\server or \\\\server\\share\n\t\t\t\t\t// Get server\n\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\n\t\t\t\t\t// Get share\n\t\t\t\t\tif (len < path.Length) {\n\t\t\t\t\t\tlen++;\n\t\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn DirectorySeparatorStr +\n\t\t\t\t\t\tDirectorySeparatorStr +\n\t\t\t\t\t\tpath.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n\t\t\t\t}","if (IsDirectorySeparator (path [0])) {\n\t\t\t\t\t// path starts with '\\' or '/'\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\t} else if (path[1] == VolumeSeparatorChar) {\n\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n\t\t\t\t} else\n\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);"],"Extras":[]},"Source":"\n\t\t\t\tif (IsDirectorySeparator (path [0]) && IsDirectorySeparator (path[1])) {\n\t\t\t\t\t// UNC: \\\\server or \\\\server\\share\n\t\t\t\t\t// Get server\n\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\n\t\t\t\t\t// Get share\n\t\t\t\t\tif (len < path.Length) {\n\t\t\t\t\t\tlen++;\n\t\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn DirectorySeparatorStr +\n\t\t\t\t\t\tDirectorySeparatorStr +\n\t\t\t\t\t\tpath.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, Dire"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"IsDirectorySeparator (path [0]) && IsDirectorySeparator (path[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"(path [0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path[1]"],"Extras":[]},"Source":"(path[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path[1]"],"Extras":[]},"Source":"path[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"WhileStatement","Info":null,"Source":"\t\t\t\t\t// UNC: \\\\server or \\\\server\\share\n\t\t\t\t\t// Get server\n\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length && !IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [len]"],"Extras":[]},"Source":"(path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [len]"],"Extras":[]},"Source":"path [len]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [len]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[len]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"len++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["len < path.Length","{\n\t\t\t\t\t\tlen++;\n\t\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\t\t\t\t\t}"],"Extras":[]},"Source":"\n\t\t\t\t\t// Get share\n\t\t\t\t\tif (len < path.Length) {\n\t\t\t\t\t\tlen++;\n\t\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\t\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tlen++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\t\t\tlen++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"\t\t\t\t\t\tlen"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"WhileStatement","Info":null,"Source":"\t\t\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length && !IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [len]"],"Extras":[]},"Source":"(path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [len]"],"Extras":[]},"Source":"path [len]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [len]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[len]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"len++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["DirectorySeparatorStr +\n\t\t\t\t\t\tDirectorySeparatorStr +\n\t\t\t\t\t\tpath.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar)"],"Extras":[]},"Source":"\n\t\t\t\t\treturn DirectorySeparatorStr +\n\t\t\t\t\t\tDirectorySeparatorStr +\n\t\t\t\t\t\tpath.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorStr +\n\t\t\t\t\t\tDirectorySeparatorStr +\n\t\t\t\t\t\tpath.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorStr +\n\t\t\t\t\t\tDirectorySeparatorStr "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"\t\t\t\t\t\tDirectorySeparatorStr "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring (2, len - 2).Replace"],"Extras":[]},"Source":"\t\t\t\t\t\tpath.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tpath.Substring (2, len - 2).Replace "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"\t\t\t\t\t\tpath.Substring (2, len - 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tpath.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\t\t\tpath"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["2, len - 2"],"Extras":[]},"Source":"(2, len - 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["len - 2"],"Extras":[]},"Source":"len - 2"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len - 2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Replace"],"Extras":[]},"Source":"Replace "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["AltDirectorySeparatorChar, DirectorySeparatorChar"],"Extras":[]},"Source":"(AltDirectorySeparatorChar, DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else if (IsDirectorySeparator (path [0])) {\n\t\t\t\t\t// path starts with '\\' or '/'\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\t} else if (path[1] == VolumeSeparatorChar) {\n\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n\t\t\t\t} else\n\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);// + path.Substring (0, len);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["IsDirectorySeparator (path [0])","{\n\t\t\t\t\t// path starts with '\\' or '/'\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\t}","if (path[1] == VolumeSeparatorChar) {\n\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n\t\t\t\t} else\n\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);"],"Extras":[]},"Source":"if (IsDirectorySeparator (path [0])) {\n\t\t\t\t\t// path starts with '\\' or '/'\n\t\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t\t} else if (path[1] == VolumeSeparatorChar) {\n\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n\t\t\t\t} else\n\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);// + path.Substring (0, len);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [0])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"(path [0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"\t\t\t\t\t// path starts with '\\' or '/'\n\t\t\t\t\treturn DirectorySeparatorStr;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else if (path[1] == VolumeSeparatorChar) {\n\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n\t\t\t\t} else\n\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);// + path.Substring (0, len);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path[1] == VolumeSeparatorChar","{\n\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n\t\t\t\t}","return Directory.GetCurrentDirectory ().Substring (0, 2);"],"Extras":[]},"Source":"if (path[1] == VolumeSeparatorChar) {\n\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n\t\t\t\t} else\n\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);// + path.Substring (0, len);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path[1] == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Length >= 3 && (IsDirectorySeparator (path [2]))","len++;"],"Extras":[]},"Source":"\t\t\t\t\t// C:\\folder\n\t\t\t\t\tif (path.Length >= 3 && (IsDirectorySeparator (path [2]))) len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length >= 3 && (IsDirectorySeparator (path [2]))"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length >= 3 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["3"],"Extras":[]},"Source":"3 "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(IsDirectorySeparator (path [2]))"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [2])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [2]"],"Extras":[]},"Source":"(path [2])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [2]"],"Extras":[]},"Source":"path [2]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [2]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[2]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"len++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else\n\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);// + path.Substring (0, len);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["Directory.GetCurrentDirectory ().Substring (0, 2)"],"Extras":[]},"Source":"\t\t\t\t\treturn Directory.GetCurrentDirectory ().Substring (0, 2);// + path.Substring (0, len);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Directory.GetCurrentDirectory ().Substring"],"Extras":[]},"Source":"Directory.GetCurrentDirectory ().Substring (0, 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Directory.GetCurrentDirectory ().Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Directory.GetCurrentDirectory"],"Extras":[]},"Source":"Directory.GetCurrentDirectory ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Directory.GetCurrentDirectory "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Directory"],"Extras":[]},"Source":"Directory"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetCurrentDirectory"],"Extras":[]},"Source":"GetCurrentDirectory "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["0, 2"],"Extras":[]},"Source":"(0, 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path.Substring (0, len)"],"Extras":[]},"Source":"\t\t\t\treturn path.Substring (0, len);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"path.Substring (0, len)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["0, len"],"Extras":[]},"Source":"(0, len)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetTempFileName","string"],"Extras":["public static"]},"Source":"\n\t\t// FIXME: Further limit the assertion when imperative Assert is implemented\n\t\t[FileIOPermission (SecurityAction.Assert, Unrestricted = true)]\n\t\tpublic static string GetTempFileName ()\n\t\t{\n\t\t\tFileStream f = null;\n\t\t\tstring path;\n\t\t\tRandom rnd;\n\t\t\tint num;\n\t\t\tint count = 0;\n\n\t\t\tSecurityManager.EnsureElevatedPermissions (); // this is a no-op outside moonlight\n\n\t\t\trnd = new Random ();\n\t\t\tvar tmp_path = GetTempPath ();\n\t\t\tdo {\n\t\t\t\tnum = rnd.Next ();\n\t\t\t\tnum++;\n\t\t\t\tpath = Path.Combine (tmp_path, \""},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FileIOPermission"],"Extras":[]},"Source":"FileIOPermission "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"SecurityAction.Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecurityAction"],"Extras":[]},"Source":"SecurityAction"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Assert"],"Extras":[]},"Source":"Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"NameEquals","Info":null,"Source":"Unrestricted = "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Unrestricted"],"Extras":[]},"Source":"Unrestricted "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"()\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["f","FileStream"],"Extras":[]},"Source":"\t\t\tFileStream f = null;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:FileStream","name:f"],"Extras":[]},"Source":"\t\t\tFileStream f = null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FileStream"],"Extras":[]},"Source":"\t\t\tFileStream "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["f"],"Extras":[]},"Source":"f = null"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["null"],"Extras":[]},"Source":"= null"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["path","string"],"Extras":[]},"Source":"\t\t\tstring path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:path"],"Extras":[]},"Source":"\t\t\tstring path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["rnd","Random"],"Extras":[]},"Source":"\t\t\tRandom rnd;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:Random","name:rnd"],"Extras":[]},"Source":"\t\t\tRandom rnd"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Random"],"Extras":[]},"Source":"\t\t\tRandom "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["rnd"],"Extras":[]},"Source":"rnd"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["num","int"],"Extras":[]},"Source":"\t\t\tint num;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:num"],"Extras":[]},"Source":"\t\t\tint num"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["num"],"Extras":[]},"Source":"num"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["count","int"],"Extras":[]},"Source":"\t\t\tint count = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:count"],"Extras":[]},"Source":"\t\t\tint count = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["count"],"Extras":[]},"Source":"count = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["0"],"Extras":[]},"Source":"= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tSecurityManager.EnsureElevatedPermissions (); // this is a no-op outside moonlight\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["SecurityManager.EnsureElevatedPermissions"],"Extras":[]},"Source":"\n\t\t\tSecurityManager.EnsureElevatedPermissions ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\n\t\t\tSecurityManager.EnsureElevatedPermissions "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecurityManager"],"Extras":[]},"Source":"\n\t\t\tSecurityManager"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["EnsureElevatedPermissions"],"Extras":[]},"Source":"EnsureElevatedPermissions "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\trnd = new Random ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["rnd","=","new Random ()"],"Extras":[]},"Source":"\n\t\t\trnd = new Random ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["rnd"],"Extras":[]},"Source":"\n\t\t\trnd "},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Random"],"Extras":[]},"Source":"new Random ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Random"],"Extras":[]},"Source":"Random "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["tmp_path","var"],"Extras":[]},"Source":"\t\t\tvar tmp_path = GetTempPath ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:var","name:tmp_path"],"Extras":[]},"Source":"\t\t\tvar tmp_path = GetTempPath ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["var"],"Extras":[]},"Source":"\t\t\tvar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["tmp_path"],"Extras":[]},"Source":"tmp_path = GetTempPath ()"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["GetTempPath ()"],"Extras":[]},"Source":"= GetTempPath ()"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["GetTempPath"],"Extras":[]},"Source":"GetTempPath ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetTempPath"],"Extras":[]},"Source":"GetTempPath "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"DoStatement","Info":null,"Source":"\t\t\tdo {\n\t\t\t\tnum = rnd.Next ();\n\t\t\t\tnum++;\n\t\t\t\tpath = Path.Combine (tmp_path, \"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\");\n\n\t\t\t\ttry {\n\t\t\t\t\tf = new FileStream (path, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.Read,\n\t\t\t\t\t\t\t    8192, false, (FileOptions) 1);\n\t\t\t\t} catch (IOException ex){\n\t\t\t\t\tif (ex._HResult != MonoIO.FileAlreadyExistsHResult || count ++ > 65536)\n\t\t\t\t\t\tthrow;\n\t\t\t\t} catch (UnauthorizedAccessException ex) {\n\t\t\t\t\tif (count ++ > 65536)\n\t\t\t\t\t\tthrow new IOE"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tnum = rnd.Next ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["num","=","rnd.Next ()"],"Extras":[]},"Source":"\t\t\t\tnum = rnd.Next ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["num"],"Extras":[]},"Source":"\t\t\t\tnum "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["rnd.Next"],"Extras":[]},"Source":"rnd.Next ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"rnd.Next "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["rnd"],"Extras":[]},"Source":"rnd"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Next"],"Extras":[]},"Source":"Next "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tnum++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\tnum++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["num"],"Extras":[]},"Source":"\t\t\t\tnum"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tpath = Path.Combine (tmp_path, \"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","=","Path.Combine (tmp_path, \"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\")"],"Extras":[]},"Source":"\t\t\t\tpath = Path.Combine (tmp_path, \"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\tpath "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Path.Combine"],"Extras":[]},"Source":"Path.Combine (tmp_path, \"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Path.Combine "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Path"],"Extras":[]},"Source":"Path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Combine"],"Extras":[]},"Source":"Combine "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["tmp_path, \"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\""],"Extras":[]},"Source":"(tmp_path, \"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["tmp_path"],"Extras":[]},"Source":"tmp_path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["tmp_path"],"Extras":[]},"Source":"tmp_path"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\""],"Extras":[]},"Source":"\"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\""},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) + \".tmp\""},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\"tmp\" + num.ToString (\"x\", CultureInfo.InvariantCulture) "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"tmp\""],"Extras":[]},"Source":"\"tmp\" "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["num.ToString"],"Extras":[]},"Source":"num.ToString (\"x\", CultureInfo.InvariantCulture) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"num.ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["num"],"Extras":[]},"Source":"num"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ToString"],"Extras":[]},"Source":"ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"x\", CultureInfo.InvariantCulture"],"Extras":[]},"Source":"(\"x\", CultureInfo.InvariantCulture) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"x\""],"Extras":[]},"Source":"\"x\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"x\""],"Extras":[]},"Source":"\"x\""},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["CultureInfo.InvariantCulture"],"Extras":[]},"Source":"CultureInfo.InvariantCulture"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"CultureInfo.InvariantCulture"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CultureInfo"],"Extras":[]},"Source":"CultureInfo"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvariantCulture"],"Extras":[]},"Source":"InvariantCulture"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\".tmp\""],"Extras":[]},"Source":"\".tmp\""},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"TryStatement","Info":null,"Source":"\n\t\t\t\ttry {\n\t\t\t\t\tf = new FileStream (path, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.Read,\n\t\t\t\t\t\t\t    8192, false, (FileOptions) 1);\n\t\t\t\t} catch (IOException ex){\n\t\t\t\t\tif (ex._HResult != MonoIO.FileAlreadyExistsHResult || count ++ > 65536)\n\t\t\t\t\t\tthrow;\n\t\t\t\t} catch (UnauthorizedAccessException ex) {\n\t\t\t\t\tif (count ++ > 65536)\n\t\t\t\t\t\tthrow new IOException (ex.Message, ex);\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tf = new FileStream (path, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.Read,\n\t\t\t\t\t\t\t    8192, false, (FileOptions) 1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["f","=","new FileStream (path, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.Read,\n\t\t\t\t\t\t\t    8192, false, (FileOptions) 1)"],"Extras":[]},"Source":"\t\t\t\t\tf = new FileStream (path, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.Read,\n\t\t\t\t\t\t\t    8192, false, (FileOptions) 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["f"],"Extras":[]},"Source":"\t\t\t\t\tf "},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["FileStream"],"Extras":[]},"Source":"new FileStream (path, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.Read,\n\t\t\t\t\t\t\t    8192, false, (FileOptions) 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FileStream"],"Extras":[]},"Source":"FileStream "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.Read,\n\t\t\t\t\t\t\t    8192, false, (FileOptions) 1"],"Extras":[]},"Source":"(path, FileMode.CreateNew, FileAccess.ReadWrite, FileShare.Read,\n\t\t\t\t\t\t\t    8192, false, (FileOptions) 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["FileMode.CreateNew"],"Extras":[]},"Source":"FileMode.CreateNew"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"FileMode.CreateNew"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FileMode"],"Extras":[]},"Source":"FileMode"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CreateNew"],"Extras":[]},"Source":"CreateNew"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["FileAccess.ReadWrite"],"Extras":[]},"Source":"FileAccess.ReadWrite"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"FileAccess.ReadWrite"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FileAccess"],"Extras":[]},"Source":"FileAccess"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ReadWrite"],"Extras":[]},"Source":"ReadWrite"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["FileShare.Read"],"Extras":[]},"Source":"FileShare.Read"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"FileShare.Read"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FileShare"],"Extras":[]},"Source":"FileShare"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Read"],"Extras":[]},"Source":"Read"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\t\t\t    8192"],"Extras":[]},"Source":"\t\t\t\t\t\t\t    8192"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["8192"],"Extras":[]},"Source":"\t\t\t\t\t\t\t    8192"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(FileOptions) 1"],"Extras":[]},"Source":"(FileOptions) 1"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(FileOptions) 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FileOptions"],"Extras":[]},"Source":"FileOptions"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"CatchClause","Info":null,"Source":"catch (IOException ex){\n\t\t\t\t\tif (ex._HResult != MonoIO.FileAlreadyExistsHResult || count ++ > 65536)\n\t\t\t\t\t\tthrow;\n\t\t\t\t} "},{"Kind":0,"KindStr":"Decl","Declaration":"CatchDeclaration","Info":null,"Source":"(IOException ex)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IOException"],"Extras":[]},"Source":"IOException "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["ex._HResult != MonoIO.FileAlreadyExistsHResult || count ++ > 65536","throw;"],"Extras":[]},"Source":"\t\t\t\t\tif (ex._HResult != MonoIO.FileAlreadyExistsHResult || count ++ > 65536)\n\t\t\t\t\t\tthrow;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ex._HResult != MonoIO.FileAlreadyExistsHResult || count ++ > 65536"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ex._HResult != MonoIO.FileAlreadyExistsHResult "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"ex._HResult "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ex"],"Extras":[]},"Source":"ex"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["_HResult"],"Extras":[]},"Source":"_HResult "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MonoIO.FileAlreadyExistsHResult "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MonoIO"],"Extras":[]},"Source":"MonoIO"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FileAlreadyExistsHResult"],"Extras":[]},"Source":"FileAlreadyExistsHResult "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"count ++ > 65536"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"count ++ "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["count"],"Extras":[]},"Source":"count "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["65536"],"Extras":[]},"Source":"65536"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\t\t\tthrow;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"CatchClause","Info":null,"Source":"catch (UnauthorizedAccessException ex) {\n\t\t\t\t\tif (count ++ > 65536)\n\t\t\t\t\t\tthrow new IOException (ex.Message, ex);\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"CatchDeclaration","Info":null,"Source":"(UnauthorizedAccessException ex) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["UnauthorizedAccessException"],"Extras":[]},"Source":"UnauthorizedAccessException "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["count ++ > 65536","throw new IOException (ex.Message, ex);"],"Extras":[]},"Source":"\t\t\t\t\tif (count ++ > 65536)\n\t\t\t\t\t\tthrow new IOException (ex.Message, ex);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"count ++ > 65536"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"count ++ "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["count"],"Extras":[]},"Source":"count "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["65536"],"Extras":[]},"Source":"65536"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\t\t\tthrow new IOException (ex.Message, ex);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["IOException"],"Extras":[]},"Source":"new IOException (ex.Message, ex)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IOException"],"Extras":[]},"Source":"IOException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["ex.Message, ex"],"Extras":[]},"Source":"(ex.Message, ex)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["ex.Message"],"Extras":[]},"Source":"ex.Message"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"ex.Message"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ex"],"Extras":[]},"Source":"ex"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Message"],"Extras":[]},"Source":"Message"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["ex"],"Extras":[]},"Source":"ex"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ex"],"Extras":[]},"Source":"ex"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"f == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["f"],"Extras":[]},"Source":"f "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\n\t\t\tf.Close();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["f.Close"],"Extras":[]},"Source":"\t\t\t\n\t\t\tf.Close()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\n\t\t\tf.Close"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["f"],"Extras":[]},"Source":"\t\t\t\n\t\t\tf"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Close"],"Extras":[]},"Source":"Close"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetTempPath","string"],"Extras":["public static"]},"Source":"\n\t\t[EnvironmentPermission (SecurityAction.Demand, Unrestricted = true)]\n\t\tpublic static string GetTempPath ()\n\t\t{\n\t\t\tSecurityManager.EnsureElevatedPermissions (); // this is a no-op outside moonlight\n\n\t\t\tstring p = get_temp_path ();\n\t\t\tif (p.Length > 0 && p [p.Length - 1] != DirectorySeparatorChar)\n\t\t\t\treturn p + DirectorySeparatorChar;\n\n\t\t\treturn p;\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["EnvironmentPermission"],"Extras":[]},"Source":"EnvironmentPermission "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"SecurityAction.Demand"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecurityAction"],"Extras":[]},"Source":"SecurityAction"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Demand"],"Extras":[]},"Source":"Demand"},{"Kind":0,"KindStr":"Decl","Declaration":"NameEquals","Info":null,"Source":"Unrestricted = "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Unrestricted"],"Extras":[]},"Source":"Unrestricted "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"()\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tSecurityManager.EnsureElevatedPermissions (); // this is a no-op outside moonlight\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["SecurityManager.EnsureElevatedPermissions"],"Extras":[]},"Source":"\t\t\tSecurityManager.EnsureElevatedPermissions ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\tSecurityManager.EnsureElevatedPermissions "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecurityManager"],"Extras":[]},"Source":"\t\t\tSecurityManager"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["EnsureElevatedPermissions"],"Extras":[]},"Source":"EnsureElevatedPermissions "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["p","string"],"Extras":[]},"Source":"\n\t\t\tstring p = get_temp_path ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:p"],"Extras":[]},"Source":"\n\t\t\tstring p = get_temp_path ()"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\n\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["p"],"Extras":[]},"Source":"p = get_temp_path ()"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["get_temp_path ()"],"Extras":[]},"Source":"= get_temp_path ()"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["get_temp_path"],"Extras":[]},"Source":"get_temp_path ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["get_temp_path"],"Extras":[]},"Source":"get_temp_path "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["p.Length > 0 && p [p.Length - 1] != DirectorySeparatorChar","return p + DirectorySeparatorChar;"],"Extras":[]},"Source":"\t\t\tif (p.Length > 0 && p [p.Length - 1] != DirectorySeparatorChar)\n\t\t\t\treturn p + DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p.Length > 0 && p [p.Length - 1] != DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"p.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p"],"Extras":[]},"Source":"p"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p [p.Length - 1] != DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"p [p.Length - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p"],"Extras":[]},"Source":"p "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[p.Length - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["p.Length - 1"],"Extras":[]},"Source":"p.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"p.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p"],"Extras":[]},"Source":"p"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["p + DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\treturn p + DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p + DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p"],"Extras":[]},"Source":"p "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["p"],"Extras":[]},"Source":"\n\t\t\treturn p;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p"],"Extras":[]},"Source":"p"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["get_temp_path","string"],"Extras":["private static extern"]},"Source":"\n\t\t[MethodImplAttribute(MethodImplOptions.InternalCall)]\n\t\tprivate static extern string get_temp_path ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MethodImplAttribute"],"Extras":[]},"Source":"MethodImplAttribute"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MethodImplOptions.InternalCall"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MethodImplOptions"],"Extras":[]},"Source":"MethodImplOptions"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InternalCall"],"Extras":[]},"Source":"InternalCall"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["HasExtension","bool"],"Extras":["public static"]},"Source":"\n\t\tpublic static bool HasExtension (string path)\n\t\t{\n\t\t\tif (path == null || path.Trim ().Length == 0)\n\t\t\t\treturn false;\n\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n\n\t\t\tint pos = findExtension (path);\n\t\t\treturn 0 <= pos && pos < path.Length - 1;\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null || path.Trim ().Length == 0","return false;"],"Extras":[]},"Source":"\t\t\tif (path == null || path.Trim ().Length == 0)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null || path.Trim ().Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Trim ().Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim ().Length "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Trim"],"Extras":[]},"Source":"path.Trim ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Trim"],"Extras":[]},"Source":"Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.IndexOfAny (InvalidPathChars) != -1","throw new ArgumentException (\"Illegal characters in path.\");"],"Extras":[]},"Source":"\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.IndexOfAny (InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOfAny"],"Extras":[]},"Source":"path.IndexOfAny (InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"(InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"(\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["pos","int"],"Extras":[]},"Source":"\n\t\t\tint pos = findExtension (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:pos"],"Extras":[]},"Source":"\n\t\t\tint pos = findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["pos"],"Extras":[]},"Source":"pos = findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["findExtension (path)"],"Extras":[]},"Source":"= findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["findExtension"],"Extras":[]},"Source":"findExtension (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["findExtension"],"Extras":[]},"Source":"findExtension "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["0 <= pos && pos < path.Length - 1"],"Extras":[]},"Source":"\t\t\treturn 0 <= pos && pos < path.Length - 1;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"0 <= pos && pos < path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"0 <= pos "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["pos"],"Extras":[]},"Source":"pos "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"pos < path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["pos"],"Extras":[]},"Source":"pos "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["IsPathRooted","bool"],"Extras":["public static"]},"Source":"\n\t\tpublic static bool IsPathRooted (ReadOnlySpan<char> path)\n\t\t{\n\t\t\tif (path.Length == 0)\n\t\t\t\treturn false;\n\n\t\t\tchar c = path [0];\n\t\t\treturn (c == DirectorySeparatorChar \t||\n\t\t\t\tc == AltDirectorySeparatorChar \t||\n\t\t\t\t(!dirEqualsVolume && path.Length > 1 && path [1] == VolumeSeparatorChar));\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Length == 0","return false;"],"Extras":[]},"Source":"\t\t\tif (path.Length == 0)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["c","char"],"Extras":[]},"Source":"\n\t\t\tchar c = path [0];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:c"],"Extras":[]},"Source":"\n\t\t\tchar c = path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"\n\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["c"],"Extras":[]},"Source":"c = path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"= path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["(c == DirectorySeparatorChar \t||\n\t\t\t\tc == AltDirectorySeparatorChar \t||\n\t\t\t\t(!dirEqualsVolume && path.Length > 1 && path [1] == VolumeSeparatorChar))"],"Extras":[]},"Source":"\t\t\treturn (c == DirectorySeparatorChar \t||\n\t\t\t\tc == AltDirectorySeparatorChar \t||\n\t\t\t\t(!dirEqualsVolume && path.Length > 1 && path [1] == VolumeSeparatorChar));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(c == DirectorySeparatorChar \t||\n\t\t\t\tc == AltDirectorySeparatorChar \t||\n\t\t\t\t(!dirEqualsVolume && path.Length > 1 && path [1] == VolumeSeparatorChar))"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == DirectorySeparatorChar \t||\n\t\t\t\tc == AltDirectorySeparatorChar \t||\n\t\t\t\t(!dirEqualsVolume && path.Length > 1 && path [1] == VolumeSeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == DirectorySeparatorChar \t||\n\t\t\t\tc == AltDirectorySeparatorChar \t"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"c == DirectorySeparatorChar \t"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar \t"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\tc == AltDirectorySeparatorChar \t"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"\t\t\t\tc "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar \t"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"\t\t\t\t(!dirEqualsVolume && path.Length > 1 && path [1] == VolumeSeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"!dirEqualsVolume && path.Length > 1 && path [1] == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"!dirEqualsVolume && path.Length > 1 "},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!dirEqualsVolume "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirEqualsVolume"],"Extras":[]},"Source":"dirEqualsVolume "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length > 1 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path [1] == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["IsPathRooted","bool"],"Extras":["public static"]},"Source":"\n\t\tpublic static bool IsPathRooted (string path)\n\t\t{\n\t\t\tif (path == null || path.Length == 0)\n\t\t\t\treturn false;\n\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n\t\t\treturn IsPathRooted (path.AsSpan());\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null || path.Length == 0","return false;"],"Extras":[]},"Source":"\t\t\tif (path == null || path.Length == 0)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null || path.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.IndexOfAny (InvalidPathChars) != -1","throw new ArgumentException (\"Illegal characters in path.\");"],"Extras":[]},"Source":"\n\t\t\tif (path.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.IndexOfAny (InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOfAny"],"Extras":[]},"Source":"path.IndexOfAny (InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"(InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"(\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["IsPathRooted (path.AsSpan())"],"Extras":[]},"Source":"\t\t\treturn IsPathRooted (path.AsSpan());\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted (path.AsSpan())"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path.AsSpan()"],"Extras":[]},"Source":"(path.AsSpan())"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path.AsSpan()"],"Extras":[]},"Source":"path.AsSpan()"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.AsSpan"],"Extras":[]},"Source":"path.AsSpan()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.AsSpan"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AsSpan"],"Extras":[]},"Source":"AsSpan"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetInvalidFileNameChars","char[]"],"Extras":["public static"]},"Source":"\n\t\tpublic static char[] GetInvalidFileNameChars ()\n\t\t{\n#pragma warning disable 162\n\t\t\t// return a new array as we do not want anyone to be able to change the values\n\t\t\tif (Environment.IsRunningOnWindows) {\n\t\t\t\treturn new char [41] { '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char[] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"()\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["Environment.IsRunningOnWindows","{\n\t\t\t\treturn new char [41] { '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F', '\\x22', '\\x3C', '\\x3E', '\\x7C', ':', '*', '?', '\\\\', '/' };\n\t\t\t}","{\n\t\t\t\treturn new char [2] { '\\x00', '/' };\n\t\t\t}"],"Extras":[]},"Source":"#pragma warning disable 162\n\t\t\t// return a new array as we do not want anyone to be able to change the values\n\t\t\tif (Environment.IsRunningOnWindows) {\n\t\t\t\treturn new char [41] { '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F', '\\x22', '\\x3C', '\\x3E', '\\x7C', ':', '*', '?', '\\"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsRunningOnWindows"],"Extras":[]},"Source":"IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["new char [41] { '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F', '\\x22', '\\x3C', '\\x3E', '\\x7C', ':', '*', '?', '\\\\', '/' }"],"Extras":[]},"Source":"\t\t\t\treturn new char [41] { '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F', '\\x22', '\\x3C', '\\x3E', '\\x7C', ':', '*', '?', '\\\\', '/' };\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new char [41] { '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F', '\\x22', '\\x3C', '\\x3E', '\\x7C', ':', '*', '?', '\\\\', '/' }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char [41] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[41] "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["41"],"Extras":[]},"Source":"41"},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{ '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F', '\\x22', '\\x3C', '\\x3E', '\\x7C', ':', '*', '?', '\\\\', '/' }"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x00'"],"Extras":[]},"Source":"'\\x00'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x01'"],"Extras":[]},"Source":"'\\x01'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x02'"],"Extras":[]},"Source":"'\\x02'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x03'"],"Extras":[]},"Source":"'\\x03'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x04'"],"Extras":[]},"Source":"'\\x04'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x05'"],"Extras":[]},"Source":"'\\x05'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x06'"],"Extras":[]},"Source":"'\\x06'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x07'"],"Extras":[]},"Source":"'\\x07'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x08'"],"Extras":[]},"Source":"\t\t\t\t\t'\\x08'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x09'"],"Extras":[]},"Source":"'\\x09'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0A'"],"Extras":[]},"Source":"'\\x0A'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0B'"],"Extras":[]},"Source":"'\\x0B'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0C'"],"Extras":[]},"Source":"'\\x0C'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0D'"],"Extras":[]},"Source":"'\\x0D'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0E'"],"Extras":[]},"Source":"'\\x0E'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0F'"],"Extras":[]},"Source":"'\\x0F'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x10'"],"Extras":[]},"Source":"'\\x10'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x11'"],"Extras":[]},"Source":"'\\x11'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x12'"],"Extras":[]},"Source":"'\\x12'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x13'"],"Extras":[]},"Source":"\t\t\t\t\t'\\x13'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x14'"],"Extras":[]},"Source":"'\\x14'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x15'"],"Extras":[]},"Source":"'\\x15'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x16'"],"Extras":[]},"Source":"'\\x16'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x17'"],"Extras":[]},"Source":"'\\x17'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x18'"],"Extras":[]},"Source":"'\\x18'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x19'"],"Extras":[]},"Source":"'\\x19'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1A'"],"Extras":[]},"Source":"'\\x1A'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1B'"],"Extras":[]},"Source":"'\\x1B'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1C'"],"Extras":[]},"Source":"'\\x1C'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1D'"],"Extras":[]},"Source":"'\\x1D'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1E'"],"Extras":[]},"Source":"\t\t\t\t\t'\\x1E'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1F'"],"Extras":[]},"Source":"'\\x1F'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x22'"],"Extras":[]},"Source":"'\\x22'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x3C'"],"Extras":[]},"Source":"'\\x3C'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x3E'"],"Extras":[]},"Source":"'\\x3E'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x7C'"],"Extras":[]},"Source":"'\\x7C'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["':'"],"Extras":[]},"Source":"':'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'*'"],"Extras":[]},"Source":"'*'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'?'"],"Extras":[]},"Source":"'?'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\\\'"],"Extras":[]},"Source":"'\\\\'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'/'"],"Extras":[]},"Source":"'/' "},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else {\n\t\t\t\treturn new char [2] { '\\x00', '/' };\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["new char [2] { '\\x00', '/' }"],"Extras":[]},"Source":"\t\t\t\treturn new char [2] { '\\x00', '/' };\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new char [2] { '\\x00', '/' }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char [2] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[2] "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{ '\\x00', '/' }"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x00'"],"Extras":[]},"Source":"'\\x00'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'/'"],"Extras":[]},"Source":"'/' "},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetInvalidPathChars","char[]"],"Extras":["public static"]},"Source":"\n\t\tpublic static char[] GetInvalidPathChars ()\n\t\t{\n#pragma warning disable 162\n\t\t\t// return a new array as we do not want anyone to be able to change the values\n\t\t\tif (Environment.IsRunningOnWindows) {\n\t\t\t\treturn new char [36] { '\\x22', '\\x3C', '\\x3E', '\\x7C', '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char[] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"()\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["Environment.IsRunningOnWindows","{\n\t\t\t\treturn new char [36] { '\\x22', '\\x3C', '\\x3E', '\\x7C', '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F' };\n\t\t\t}","{\n\t\t\t\treturn new char [1] { '\\x00' };\n\t\t\t}"],"Extras":[]},"Source":"#pragma warning disable 162\n\t\t\t// return a new array as we do not want anyone to be able to change the values\n\t\t\tif (Environment.IsRunningOnWindows) {\n\t\t\t\treturn new char [36] { '\\x22', '\\x3C', '\\x3E', '\\x7C', '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F' };\n\t\t\t} else {\n\t\t\t"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsRunningOnWindows"],"Extras":[]},"Source":"IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["new char [36] { '\\x22', '\\x3C', '\\x3E', '\\x7C', '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F' }"],"Extras":[]},"Source":"\t\t\t\treturn new char [36] { '\\x22', '\\x3C', '\\x3E', '\\x7C', '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F' };\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new char [36] { '\\x22', '\\x3C', '\\x3E', '\\x7C', '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F' }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char [36] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[36] "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["36"],"Extras":[]},"Source":"36"},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{ '\\x22', '\\x3C', '\\x3E', '\\x7C', '\\x00', '\\x01', '\\x02', '\\x03', '\\x04', '\\x05', '\\x06', '\\x07',\n\t\t\t\t\t'\\x08', '\\x09', '\\x0A', '\\x0B', '\\x0C', '\\x0D', '\\x0E', '\\x0F', '\\x10', '\\x11', '\\x12', \n\t\t\t\t\t'\\x13', '\\x14', '\\x15', '\\x16', '\\x17', '\\x18', '\\x19', '\\x1A', '\\x1B', '\\x1C', '\\x1D', \n\t\t\t\t\t'\\x1E', '\\x1F' }"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x22'"],"Extras":[]},"Source":"'\\x22'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x3C'"],"Extras":[]},"Source":"'\\x3C'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x3E'"],"Extras":[]},"Source":"'\\x3E'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x7C'"],"Extras":[]},"Source":"'\\x7C'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x00'"],"Extras":[]},"Source":"'\\x00'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x01'"],"Extras":[]},"Source":"'\\x01'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x02'"],"Extras":[]},"Source":"'\\x02'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x03'"],"Extras":[]},"Source":"'\\x03'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x04'"],"Extras":[]},"Source":"'\\x04'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x05'"],"Extras":[]},"Source":"'\\x05'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x06'"],"Extras":[]},"Source":"'\\x06'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x07'"],"Extras":[]},"Source":"'\\x07'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x08'"],"Extras":[]},"Source":"\t\t\t\t\t'\\x08'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x09'"],"Extras":[]},"Source":"'\\x09'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0A'"],"Extras":[]},"Source":"'\\x0A'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0B'"],"Extras":[]},"Source":"'\\x0B'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0C'"],"Extras":[]},"Source":"'\\x0C'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0D'"],"Extras":[]},"Source":"'\\x0D'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0E'"],"Extras":[]},"Source":"'\\x0E'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x0F'"],"Extras":[]},"Source":"'\\x0F'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x10'"],"Extras":[]},"Source":"'\\x10'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x11'"],"Extras":[]},"Source":"'\\x11'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x12'"],"Extras":[]},"Source":"'\\x12'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x13'"],"Extras":[]},"Source":"\t\t\t\t\t'\\x13'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x14'"],"Extras":[]},"Source":"'\\x14'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x15'"],"Extras":[]},"Source":"'\\x15'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x16'"],"Extras":[]},"Source":"'\\x16'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x17'"],"Extras":[]},"Source":"'\\x17'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x18'"],"Extras":[]},"Source":"'\\x18'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x19'"],"Extras":[]},"Source":"'\\x19'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1A'"],"Extras":[]},"Source":"'\\x1A'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1B'"],"Extras":[]},"Source":"'\\x1B'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1C'"],"Extras":[]},"Source":"'\\x1C'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1D'"],"Extras":[]},"Source":"'\\x1D'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1E'"],"Extras":[]},"Source":"\t\t\t\t\t'\\x1E'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x1F'"],"Extras":[]},"Source":"'\\x1F' "},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else {\n\t\t\t\treturn new char [1] { '\\x00' };\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["new char [1] { '\\x00' }"],"Extras":[]},"Source":"\t\t\t\treturn new char [1] { '\\x00' };\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new char [1] { '\\x00' }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char [1] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{ '\\x00' }"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'\\x00'"],"Extras":[]},"Source":"'\\x00' "},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetRandomFileName","string"],"Extras":["public static"]},"Source":"\n\t\tpublic static string GetRandomFileName ()\n\t\t{\n\t\t\t// returns a 8.3 filename (total size 12)\n\t\t\tStringBuilder sb = new StringBuilder (12);\n\t\t\t// using strong crypto but without creating the file\n\t\t\tRandomNumberGenerator rng = RandomNumberGenerator.Create ();\n\t\t\tbyte [] buffer = new byte [11];\n\t\t\trng.GetBytes (buffer);\n\n\t\t\tfor (int i = 0; i < buffer.Length; i++) {\n\t\t\t\tif (sb.Length == 8)\n\t\t\t\t\tsb.Append ('.');\n\n\t\t\t\t// restrict to length of range [a..z0..9]\n\t\t\t\tint b = (buffer [i] % 36);\n\t\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"()\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["sb","StringBuilder"],"Extras":[]},"Source":"\t\t\t// returns a 8.3 filename (total size 12)\n\t\t\tStringBuilder sb = new StringBuilder (12);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:StringBuilder","name:sb"],"Extras":[]},"Source":"\t\t\t// returns a 8.3 filename (total size 12)\n\t\t\tStringBuilder sb = new StringBuilder (12)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["StringBuilder"],"Extras":[]},"Source":"\t\t\t// returns a 8.3 filename (total size 12)\n\t\t\tStringBuilder "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["sb"],"Extras":[]},"Source":"sb = new StringBuilder (12)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["new StringBuilder (12)"],"Extras":[]},"Source":"= new StringBuilder (12)"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["StringBuilder"],"Extras":[]},"Source":"new StringBuilder (12)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["StringBuilder"],"Extras":[]},"Source":"StringBuilder "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["12"],"Extras":[]},"Source":"(12)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["12"],"Extras":[]},"Source":"12"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["12"],"Extras":[]},"Source":"12"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["rng","RandomNumberGenerator"],"Extras":[]},"Source":"\t\t\t// using strong crypto but without creating the file\n\t\t\tRandomNumberGenerator rng = RandomNumberGenerator.Create ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:RandomNumberGenerator","name:rng"],"Extras":[]},"Source":"\t\t\t// using strong crypto but without creating the file\n\t\t\tRandomNumberGenerator rng = RandomNumberGenerator.Create ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["RandomNumberGenerator"],"Extras":[]},"Source":"\t\t\t// using strong crypto but without creating the file\n\t\t\tRandomNumberGenerator "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["rng"],"Extras":[]},"Source":"rng = RandomNumberGenerator.Create ()"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["RandomNumberGenerator.Create ()"],"Extras":[]},"Source":"= RandomNumberGenerator.Create ()"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["RandomNumberGenerator.Create"],"Extras":[]},"Source":"RandomNumberGenerator.Create ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"RandomNumberGenerator.Create "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["RandomNumberGenerator"],"Extras":[]},"Source":"RandomNumberGenerator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Create"],"Extras":[]},"Source":"Create "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["buffer","byte []"],"Extras":[]},"Source":"\t\t\tbyte [] buffer = new byte [11];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:byte []","name:buffer"],"Extras":[]},"Source":"\t\t\tbyte [] buffer = new byte [11]"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"\t\t\tbyte [] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["byte"],"Extras":[]},"Source":"\t\t\tbyte "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["buffer"],"Extras":[]},"Source":"buffer = new byte [11]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["new byte [11]"],"Extras":[]},"Source":"= new byte [11]"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new byte [11]"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"byte [11]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["byte"],"Extras":[]},"Source":"byte "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[11]"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["11"],"Extras":[]},"Source":"11"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\trng.GetBytes (buffer);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["rng.GetBytes"],"Extras":[]},"Source":"\t\t\trng.GetBytes (buffer)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\trng.GetBytes "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["rng"],"Extras":[]},"Source":"\t\t\trng"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetBytes"],"Extras":[]},"Source":"GetBytes "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["buffer"],"Extras":[]},"Source":"(buffer)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["buffer"],"Extras":[]},"Source":"buffer"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["buffer"],"Extras":[]},"Source":"buffer"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ForStatement","Info":null,"Source":"\n\t\t\tfor (int i = 0; i < buffer.Length; i++) {\n\t\t\t\tif (sb.Length == 8)\n\t\t\t\t\tsb.Append ('.');\n\n\t\t\t\t// restrict to length of range [a..z0..9]\n\t\t\t\tint b = (buffer [i] % 36);\n\t\t\t\tchar c = (char) (b < 26 ? (b + 'a') : (b - 26 + '0'));\n\t\t\t\tsb.Append (c);\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:i"],"Extras":[]},"Source":"int i = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["i"],"Extras":[]},"Source":"i = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["0"],"Extras":[]},"Source":"= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i < buffer.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"buffer.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["buffer"],"Extras":[]},"Source":"buffer"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"i++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["sb.Length == 8","sb.Append ('.');"],"Extras":[]},"Source":"\t\t\t\tif (sb.Length == 8)\n\t\t\t\t\tsb.Append ('.');\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"sb.Length == 8"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"sb.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["sb"],"Extras":[]},"Source":"sb"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["8"],"Extras":[]},"Source":"8"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tsb.Append ('.');\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["sb.Append"],"Extras":[]},"Source":"\t\t\t\t\tsb.Append ('.')"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\tsb.Append "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["sb"],"Extras":[]},"Source":"\t\t\t\t\tsb"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Append"],"Extras":[]},"Source":"Append "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"('.')"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"'.'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"'.'"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["b","int"],"Extras":[]},"Source":"\n\t\t\t\t// restrict to length of range [a..z0..9]\n\t\t\t\tint b = (buffer [i] % 36);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:b"],"Extras":[]},"Source":"\n\t\t\t\t// restrict to length of range [a..z0..9]\n\t\t\t\tint b = (buffer [i] % 36)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\t\t// restrict to length of range [a..z0..9]\n\t\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["b"],"Extras":[]},"Source":"b = (buffer [i] % 36)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["(buffer [i] % 36)"],"Extras":[]},"Source":"= (buffer [i] % 36)"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(buffer [i] % 36)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"buffer [i] % 36"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"buffer [i] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["buffer"],"Extras":[]},"Source":"buffer "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["36"],"Extras":[]},"Source":"36"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["c","char"],"Extras":[]},"Source":"\t\t\t\tchar c = (char) (b < 26 ? (b + 'a') : (b - 26 + '0'));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:c"],"Extras":[]},"Source":"\t\t\t\tchar c = (char) (b < 26 ? (b + 'a') : (b - 26 + '0'))"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"\t\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["c"],"Extras":[]},"Source":"c = (char) (b < 26 ? (b + 'a') : (b - 26 + '0'))"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["(char) (b < 26 ? (b + 'a') : (b - 26 + '0'))"],"Extras":[]},"Source":"= (char) (b < 26 ? (b + 'a') : (b - 26 + '0'))"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char) (b < 26 ? (b + 'a') : (b - 26 + '0'))"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(b < 26 ? (b + 'a') : (b - 26 + '0'))"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"b < 26 ? (b + 'a') : (b - 26 + '0')"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"b < 26 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["b"],"Extras":[]},"Source":"b "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["26"],"Extras":[]},"Source":"26 "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(b + 'a') "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"b + 'a'"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["b"],"Extras":[]},"Source":"b "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'a'"],"Extras":[]},"Source":"'a'"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(b - 26 + '0')"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"b - 26 + '0'"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"b - 26 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["b"],"Extras":[]},"Source":"b "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["26"],"Extras":[]},"Source":"26 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'0'"],"Extras":[]},"Source":"'0'"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tsb.Append (c);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["sb.Append"],"Extras":[]},"Source":"\t\t\t\tsb.Append (c)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\tsb.Append "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["sb"],"Extras":[]},"Source":"\t\t\t\tsb"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Append"],"Extras":[]},"Source":"Append "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["c"],"Extras":[]},"Source":"(c)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["c"],"Extras":[]},"Source":"c"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["c"],"Extras":[]},"Source":"c"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["sb.ToString ()"],"Extras":[]},"Source":"\n\t\t\treturn sb.ToString ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["sb.ToString"],"Extras":[]},"Source":"sb.ToString ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"sb.ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["sb"],"Extras":[]},"Source":"sb"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ToString"],"Extras":[]},"Source":"ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["findExtension","int"],"Extras":["private static"]},"Source":"\n\t\t// private class methods\n\n\t\tprivate static int findExtension (string path)\n\t\t{\n\t\t\t// method should return the index of the path extension\n\t\t\t// start or -1 if no valid extension\n\t\t\tif (path != null){\n\t\t\t\tint iLastDot = path.LastIndexOf ('.');\n\t\t\t\tint iLastSep = path.LastIndexOfAny ( PathSeparatorChars );\n\n\t\t\t\tif (iLastDot > iLastSep)\n\t\t\t\t\treturn iLastDot;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path != null","{\n\t\t\t\tint iLastDot = path.LastIndexOf ('.');\n\t\t\t\tint iLastSep = path.LastIndexOfAny ( PathSeparatorChars );\n\n\t\t\t\tif (iLastDot > iLastSep)\n\t\t\t\t\treturn iLastDot;\n\t\t\t}"],"Extras":[]},"Source":"\t\t\t// method should return the index of the path extension\n\t\t\t// start or -1 if no valid extension\n\t\t\tif (path != null){\n\t\t\t\tint iLastDot = path.LastIndexOf ('.');\n\t\t\t\tint iLastSep = path.LastIndexOfAny ( PathSeparatorChars );\n\n\t\t\t\tif (iLastDot > iLastSep)\n\t\t\t\t\treturn iLastDot;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path != null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["iLastDot","int"],"Extras":[]},"Source":"\t\t\t\tint iLastDot = path.LastIndexOf ('.');\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:iLastDot"],"Extras":[]},"Source":"\t\t\t\tint iLastDot = path.LastIndexOf ('.')"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["iLastDot"],"Extras":[]},"Source":"iLastDot = path.LastIndexOf ('.')"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.LastIndexOf ('.')"],"Extras":[]},"Source":"= path.LastIndexOf ('.')"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.LastIndexOf"],"Extras":[]},"Source":"path.LastIndexOf ('.')"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.LastIndexOf "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["LastIndexOf"],"Extras":[]},"Source":"LastIndexOf "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"('.')"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"'.'"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'.'"],"Extras":[]},"Source":"'.'"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["iLastSep","int"],"Extras":[]},"Source":"\t\t\t\tint iLastSep = path.LastIndexOfAny ( PathSeparatorChars );\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:iLastSep"],"Extras":[]},"Source":"\t\t\t\tint iLastSep = path.LastIndexOfAny ( PathSeparatorChars )"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["iLastSep"],"Extras":[]},"Source":"iLastSep = path.LastIndexOfAny ( PathSeparatorChars )"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.LastIndexOfAny ( PathSeparatorChars )"],"Extras":[]},"Source":"= path.LastIndexOfAny ( PathSeparatorChars )"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.LastIndexOfAny"],"Extras":[]},"Source":"path.LastIndexOfAny ( PathSeparatorChars )"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.LastIndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["LastIndexOfAny"],"Extras":[]},"Source":"LastIndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"( PathSeparatorChars )"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["PathSeparatorChars "],"Extras":[]},"Source":"PathSeparatorChars "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["iLastDot > iLastSep","return iLastDot;"],"Extras":[]},"Source":"\n\t\t\t\tif (iLastDot > iLastSep)\n\t\t\t\t\treturn iLastDot;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"iLastDot > iLastSep"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iLastDot"],"Extras":[]},"Source":"iLastDot "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iLastSep"],"Extras":[]},"Source":"iLastSep"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["iLastDot"],"Extras":[]},"Source":"\t\t\t\t\treturn iLastDot;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["iLastDot"],"Extras":[]},"Source":"iLastDot"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["-1"],"Extras":[]},"Source":"\t\t\treturn -1;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ConstructorDeclaration","Info":{"Essentials":["Path"],"Extras":[]},"Source":"\n\t\tstatic Path ()\n\t\t{\n\t\t\tVolumeSeparatorChar = MonoIO.VolumeSeparatorChar;\n\t\t\tDirectorySeparatorChar = MonoIO.DirectorySeparatorChar;\n\t\t\tAltDirectorySeparatorChar = MonoIO.AltDirectorySeparatorChar;\n\n\t\t\tPathSeparator = MonoIO.PathSeparator;\n\t\t\t// this copy will be modifiable (\"by design\")\n\t\t\tInvalidPathChars = GetInvalidPathChars ();\n\t\t\t// internal fields\n\n\t\t\tDirectorySeparatorStr = DirectorySeparatorChar.ToString ();\n\t\t\tPathSeparatorChars = new char [] {\n\t\t\t\tDirectorySeparatorChar,\n\t\t\t\tAltDirec"},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"()\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tVolumeSeparatorChar = MonoIO.VolumeSeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["VolumeSeparatorChar","=","MonoIO.VolumeSeparatorChar"],"Extras":[]},"Source":"\t\t\tVolumeSeparatorChar = MonoIO.VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"\t\t\tVolumeSeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MonoIO.VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MonoIO"],"Extras":[]},"Source":"MonoIO"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tDirectorySeparatorChar = MonoIO.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["DirectorySeparatorChar","=","MonoIO.DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\tDirectorySeparatorChar = MonoIO.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\tDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MonoIO.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MonoIO"],"Extras":[]},"Source":"MonoIO"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tAltDirectorySeparatorChar = MonoIO.AltDirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["AltDirectorySeparatorChar","=","MonoIO.AltDirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\tAltDirectorySeparatorChar = MonoIO.AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\tAltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MonoIO.AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MonoIO"],"Extras":[]},"Source":"MonoIO"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tPathSeparator = MonoIO.PathSeparator;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["PathSeparator","=","MonoIO.PathSeparator"],"Extras":[]},"Source":"\n\t\t\tPathSeparator = MonoIO.PathSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathSeparator"],"Extras":[]},"Source":"\n\t\t\tPathSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MonoIO.PathSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MonoIO"],"Extras":[]},"Source":"MonoIO"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathSeparator"],"Extras":[]},"Source":"PathSeparator"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t// this copy will be modifiable (\"by design\")\n\t\t\tInvalidPathChars = GetInvalidPathChars ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["InvalidPathChars","=","GetInvalidPathChars ()"],"Extras":[]},"Source":"\t\t\t// this copy will be modifiable (\"by design\")\n\t\t\tInvalidPathChars = GetInvalidPathChars ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"\t\t\t// this copy will be modifiable (\"by design\")\n\t\t\tInvalidPathChars "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["GetInvalidPathChars"],"Extras":[]},"Source":"GetInvalidPathChars ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetInvalidPathChars"],"Extras":[]},"Source":"GetInvalidPathChars "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t// internal fields\n\n\t\t\tDirectorySeparatorStr = DirectorySeparatorChar.ToString ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["DirectorySeparatorStr","=","DirectorySeparatorChar.ToString ()"],"Extras":[]},"Source":"\t\t\t// internal fields\n\n\t\t\tDirectorySeparatorStr = DirectorySeparatorChar.ToString ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"\t\t\t// internal fields\n\n\t\t\tDirectorySeparatorStr "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["DirectorySeparatorChar.ToString"],"Extras":[]},"Source":"DirectorySeparatorChar.ToString ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"DirectorySeparatorChar.ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ToString"],"Extras":[]},"Source":"ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tPathSeparatorChars = new char [] {\n\t\t\t\tDirectorySeparatorChar,\n\t\t\t\tAltDirectorySeparatorChar,\n\t\t\t\tVolumeSeparatorChar\n\t\t\t};\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["PathSeparatorChars","=","new char [] {\n\t\t\t\tDirectorySeparatorChar,\n\t\t\t\tAltDirectorySeparatorChar,\n\t\t\t\tVolumeSeparatorChar\n\t\t\t}"],"Extras":[]},"Source":"\t\t\tPathSeparatorChars = new char [] {\n\t\t\t\tDirectorySeparatorChar,\n\t\t\t\tAltDirectorySeparatorChar,\n\t\t\t\tVolumeSeparatorChar\n\t\t\t}"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"\t\t\tPathSeparatorChars "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new char [] {\n\t\t\t\tDirectorySeparatorChar,\n\t\t\t\tAltDirectorySeparatorChar,\n\t\t\t\tVolumeSeparatorChar\n\t\t\t}"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char [] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{\n\t\t\t\tDirectorySeparatorChar,\n\t\t\t\tAltDirectorySeparatorChar,\n\t\t\t\tVolumeSeparatorChar\n\t\t\t}"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\tDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\tAltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"\t\t\t\tVolumeSeparatorChar\n"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tdirEqualsVolume = (DirectorySeparatorChar == VolumeSeparatorChar);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["dirEqualsVolume","=","(DirectorySeparatorChar == VolumeSeparatorChar)"],"Extras":[]},"Source":"\n\t\t\tdirEqualsVolume = (DirectorySeparatorChar == VolumeSeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirEqualsVolume"],"Extras":[]},"Source":"\n\t\t\tdirEqualsVolume "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(DirectorySeparatorChar == VolumeSeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"DirectorySeparatorChar == VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetServerAndShare","string"],"Extras":["static"]},"Source":"\n\t\t// returns the server and share part of a UNC. Assumes \"path\" is a UNC.\n\t\tstatic string GetServerAndShare (string path)\n\t\t{\n\t\t\tint len = 2;\n\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\n\t\t\tif (len < path.Length) {\n\t\t\t\tlen++;\n\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\t\t\t}\n\n\t\t\treturn path.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["len","int"],"Extras":[]},"Source":"\t\t\tint len = 2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:len"],"Extras":[]},"Source":"\t\t\tint len = 2"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["len"],"Extras":[]},"Source":"len = 2"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["2"],"Extras":[]},"Source":"= 2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"WhileStatement","Info":null,"Source":"\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length && !IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [len]"],"Extras":[]},"Source":"(path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [len]"],"Extras":[]},"Source":"path [len]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [len]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[len]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"len++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["len < path.Length","{\n\t\t\t\tlen++;\n\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\t\t\t}"],"Extras":[]},"Source":"\n\t\t\tif (len < path.Length) {\n\t\t\t\tlen++;\n\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tlen++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\tlen++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"\t\t\t\tlen"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"WhileStatement","Info":null,"Source":"\t\t\t\twhile (len < path.Length && !IsDirectorySeparator (path [len])) len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length && !IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len < path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [len]"],"Extras":[]},"Source":"(path [len])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [len]"],"Extras":[]},"Source":"path [len]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [len]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[len]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"len++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"len++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar)"],"Extras":[]},"Source":"\n\t\t\treturn path.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring (2, len - 2).Replace"],"Extras":[]},"Source":"path.Substring (2, len - 2).Replace (AltDirectorySeparatorChar, DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring (2, len - 2).Replace "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Substring"],"Extras":[]},"Source":"path.Substring (2, len - 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["2, len - 2"],"Extras":[]},"Source":"(2, len - 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["len - 2"],"Extras":[]},"Source":"len - 2"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"len - 2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["len"],"Extras":[]},"Source":"len "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Replace"],"Extras":[]},"Source":"Replace "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["AltDirectorySeparatorChar, DirectorySeparatorChar"],"Extras":[]},"Source":"(AltDirectorySeparatorChar, DirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["SameRoot","bool"],"Extras":["static"]},"Source":"\n\t\t// assumes Environment.IsRunningOnWindows == true\n\t\tstatic bool SameRoot (string root, string path)\n\t\t{\n\t\t\t// compare root - if enough details are available\n\t\t\tif ((root.Length < 2) || (path.Length < 2))\n\t\t\t\treturn false;\n\n\t\t\t// UNC handling\n\t\t\tif (IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])) {\n\t\t\t\tif (!(IsDirectorySeparator (path[0]) && IsDirectorySeparator (path[1])))\n\t\t\t\t\treturn false;\n\n\t\t\t\tstring rootShare = GetServerAndShare (root);\n\t\t\t\tstring pathShare = GetServerAn"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string root, string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["root","string "],"Extras":[]},"Source":"string root"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["(root.Length < 2) || (path.Length < 2)","return false;"],"Extras":[]},"Source":"\t\t\t// compare root - if enough details are available\n\t\t\tif ((root.Length < 2) || (path.Length < 2))\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"(root.Length < 2) || (path.Length < 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(root.Length < 2) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"root.Length < 2"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"root.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(path.Length < 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length < 2"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])","{\n\t\t\t\tif (!(IsDirectorySeparator (path[0]) && IsDirectorySeparator (path[1])))\n\t\t\t\t\treturn false;\n\n\t\t\t\tstring rootShare = GetServerAndShare (root);\n\t\t\t\tstring pathShare = GetServerAndShare (path);\n\n\t\t\t\treturn String.Compare (rootShare, pathShare, true, CultureInfo.InvariantCulture) == 0;\n\t\t\t}"],"Extras":[]},"Source":"\n\t\t\t// UNC handling\n\t\t\tif (IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])) {\n\t\t\t\tif (!(IsDirectorySeparator (path[0]) && IsDirectorySeparator (path[1])))\n\t\t\t\t\treturn false;\n\n\t\t\t\tstring rootShare = GetServerAndShare (root);\n\t\t\t\tstring pathShare = GetServerAndShare (path);\n\n\t\t\t\treturn String.Compare (rootShare, pathShare, true, CultureInfo.InvariantCulture) == 0;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (root[0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["root[0]"],"Extras":[]},"Source":"(root[0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["root[0]"],"Extras":[]},"Source":"root[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"root[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["root[1]"],"Extras":[]},"Source":"(root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["root[1]"],"Extras":[]},"Source":"root[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"root[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!(IsDirectorySeparator (path[0]) && IsDirectorySeparator (path[1]))","return false;"],"Extras":[]},"Source":"\t\t\t\tif (!(IsDirectorySeparator (path[0]) && IsDirectorySeparator (path[1])))\n\t\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!(IsDirectorySeparator (path[0]) && IsDirectorySeparator (path[1]))"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(IsDirectorySeparator (path[0]) && IsDirectorySeparator (path[1]))"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"IsDirectorySeparator (path[0]) && IsDirectorySeparator (path[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path[0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path[0]"],"Extras":[]},"Source":"(path[0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path[0]"],"Extras":[]},"Source":"path[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path[1]"],"Extras":[]},"Source":"(path[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path[1]"],"Extras":[]},"Source":"path[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["rootShare","string"],"Extras":[]},"Source":"\n\t\t\t\tstring rootShare = GetServerAndShare (root);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:rootShare"],"Extras":[]},"Source":"\n\t\t\t\tstring rootShare = GetServerAndShare (root)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\n\t\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["rootShare"],"Extras":[]},"Source":"rootShare = GetServerAndShare (root)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["GetServerAndShare (root)"],"Extras":[]},"Source":"= GetServerAndShare (root)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["GetServerAndShare"],"Extras":[]},"Source":"GetServerAndShare (root)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetServerAndShare"],"Extras":[]},"Source":"GetServerAndShare "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["root"],"Extras":[]},"Source":"(root)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["pathShare","string"],"Extras":[]},"Source":"\t\t\t\tstring pathShare = GetServerAndShare (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:pathShare"],"Extras":[]},"Source":"\t\t\t\tstring pathShare = GetServerAndShare (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["pathShare"],"Extras":[]},"Source":"pathShare = GetServerAndShare (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["GetServerAndShare (path)"],"Extras":[]},"Source":"= GetServerAndShare (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["GetServerAndShare"],"Extras":[]},"Source":"GetServerAndShare (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetServerAndShare"],"Extras":[]},"Source":"GetServerAndShare "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["String.Compare (rootShare, pathShare, true, CultureInfo.InvariantCulture) == 0"],"Extras":[]},"Source":"\n\t\t\t\treturn String.Compare (rootShare, pathShare, true, CultureInfo.InvariantCulture) == 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"String.Compare (rootShare, pathShare, true, CultureInfo.InvariantCulture) == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["String.Compare"],"Extras":[]},"Source":"String.Compare (rootShare, pathShare, true, CultureInfo.InvariantCulture) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Compare "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Compare"],"Extras":[]},"Source":"Compare "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["rootShare, pathShare, true, CultureInfo.InvariantCulture"],"Extras":[]},"Source":"(rootShare, pathShare, true, CultureInfo.InvariantCulture) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["rootShare"],"Extras":[]},"Source":"rootShare"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["rootShare"],"Extras":[]},"Source":"rootShare"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["pathShare"],"Extras":[]},"Source":"pathShare"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["pathShare"],"Extras":[]},"Source":"pathShare"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["CultureInfo.InvariantCulture"],"Extras":[]},"Source":"CultureInfo.InvariantCulture"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"CultureInfo.InvariantCulture"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CultureInfo"],"Extras":[]},"Source":"CultureInfo"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvariantCulture"],"Extras":[]},"Source":"InvariantCulture"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!root [0].Equals (path [0])","return false;"],"Extras":[]},"Source":"\t\t\t\n\t\t\t// same volume/drive\n\t\t\tif (!root [0].Equals (path [0]))\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!root [0].Equals (path [0])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["root [0].Equals"],"Extras":[]},"Source":"root [0].Equals (path [0])"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"root [0].Equals "},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"root [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Equals"],"Extras":[]},"Source":"Equals "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"(path [0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path [0]"],"Extras":[]},"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path [0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path[1] != Path.VolumeSeparatorChar","return false;"],"Extras":[]},"Source":"\t\t\t// presence of the separator\n\t\t\tif (path[1] != Path.VolumeSeparatorChar)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path[1] != Path.VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Path.VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Path"],"Extras":[]},"Source":"Path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["(root.Length > 2) && (path.Length > 2)","{\n\t\t\t\t// but don't directory compare the directory separator\n\t\t\t\treturn (IsDirectorySeparator (root[2]) && IsDirectorySeparator (path[2]));\n\t\t\t}"],"Extras":[]},"Source":"\t\t\tif ((root.Length > 2) && (path.Length > 2)) {\n\t\t\t\t// but don't directory compare the directory separator\n\t\t\t\treturn (IsDirectorySeparator (root[2]) && IsDirectorySeparator (path[2]));\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"(root.Length > 2) && (path.Length > 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(root.Length > 2) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"root.Length > 2"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"root.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(path.Length > 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length > 2"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["(IsDirectorySeparator (root[2]) && IsDirectorySeparator (path[2]))"],"Extras":[]},"Source":"\t\t\t\t// but don't directory compare the directory separator\n\t\t\t\treturn (IsDirectorySeparator (root[2]) && IsDirectorySeparator (path[2]));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(IsDirectorySeparator (root[2]) && IsDirectorySeparator (path[2]))"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"IsDirectorySeparator (root[2]) && IsDirectorySeparator (path[2])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (root[2]) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["root[2]"],"Extras":[]},"Source":"(root[2]) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["root[2]"],"Extras":[]},"Source":"root[2]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"root[2]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[2]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (path[2])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path[2]"],"Extras":[]},"Source":"(path[2])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path[2]"],"Extras":[]},"Source":"path[2]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path[2]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[2]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["true"],"Extras":[]},"Source":"\t\t\treturn true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["CanonicalizePath","string"],"Extras":["static"]},"Source":"\n\t\tstatic string CanonicalizePath (string path)\n\t\t{\n#pragma warning disable 162\n\t\t\t// STEP 1: Check for empty string\n\t\t\tif (path == null)\n\t\t\t\treturn path;\n\t\t\tif (Environment.IsRunningOnWindows)\n\t\t\t\tpath = path.Trim ();\n\n\t\t\tif (path.Length == 0)\n\t\t\t\treturn path;\n\n\t\t\t// STEP 2: Check to see if this is only a root\n\t\t\tstring root = Path.GetPathRoot (path);\n\t\t\t// it will return '\\' for path '\\', while it should return 'c:\\' or so.\n\t\t\t// Note: commenting this out makes the need for the (target == 1..."},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null","return path;"],"Extras":[]},"Source":"#pragma warning disable 162\n\t\t\t// STEP 1: Check for empty string\n\t\t\tif (path == null)\n\t\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["Environment.IsRunningOnWindows","path = path.Trim ();"],"Extras":[]},"Source":"\t\t\tif (Environment.IsRunningOnWindows)\n\t\t\t\tpath = path.Trim ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsRunningOnWindows"],"Extras":[]},"Source":"IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tpath = path.Trim ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["path","=","path.Trim ()"],"Extras":[]},"Source":"\t\t\t\tpath = path.Trim ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\tpath "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Trim"],"Extras":[]},"Source":"path.Trim ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Trim"],"Extras":[]},"Source":"Trim "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.Length == 0","return path;"],"Extras":[]},"Source":"\n\t\t\tif (path.Length == 0)\n\t\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path"],"Extras":[]},"Source":"\t\t\t\treturn path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["root","string"],"Extras":[]},"Source":"\n\t\t\t// STEP 2: Check to see if this is only a root\n\t\t\tstring root = Path.GetPathRoot (path);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:root"],"Extras":[]},"Source":"\n\t\t\t// STEP 2: Check to see if this is only a root\n\t\t\tstring root = Path.GetPathRoot (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\n\t\t\t// STEP 2: Check to see if this is only a root\n\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["root"],"Extras":[]},"Source":"root = Path.GetPathRoot (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["Path.GetPathRoot (path)"],"Extras":[]},"Source":"= Path.GetPathRoot (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Path.GetPathRoot"],"Extras":[]},"Source":"Path.GetPathRoot (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Path.GetPathRoot "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Path"],"Extras":[]},"Source":"Path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetPathRoot"],"Extras":[]},"Source":"GetPathRoot "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["dirs","string[]"],"Extras":[]},"Source":"\t\t\t// it will return '\\' for path '\\', while it should return 'c:\\' or so.\n\t\t\t// Note: commenting this out makes the need for the (target == 1...) check in step 5\n\t\t\t//if (root == path) return path;\n\n\t\t\t// STEP 3: split the directories, this gets rid of consecutative \"/\"'s\n\t\t\tstring[] dirs = path.Split (Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string[]","name:dirs"],"Extras":[]},"Source":"\t\t\t// it will return '\\' for path '\\', while it should return 'c:\\' or so.\n\t\t\t// Note: commenting this out makes the need for the (target == 1...) check in step 5\n\t\t\t//if (root == path) return path;\n\n\t\t\t// STEP 3: split the directories, this gets rid of consecutative \"/\"'s\n\t\t\tstring[] dirs = path.Split (Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"\t\t\t// it will return '\\' for path '\\', while it should return 'c:\\' or so.\n\t\t\t// Note: commenting this out makes the need for the (target == 1...) check in step 5\n\t\t\t//if (root == path) return path;\n\n\t\t\t// STEP 3: split the directories, this gets rid of consecutative \"/\"'s\n\t\t\tstring[] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\t// it will return '\\' for path '\\', while it should return 'c:\\' or so.\n\t\t\t// Note: commenting this out makes the need for the (target == 1...) check in step 5\n\t\t\t//if (root == path) return path;\n\n\t\t\t// STEP 3: split the directories, this gets rid of consecutative \"/\"'s\n\t\t\tstring"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs = path.Split (Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.Split (Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar)"],"Extras":[]},"Source":"= path.Split (Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Split"],"Extras":[]},"Source":"path.Split (Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Split "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Split"],"Extras":[]},"Source":"Split "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar"],"Extras":[]},"Source":"(Path.DirectorySeparatorChar, Path.AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Path.DirectorySeparatorChar"],"Extras":[]},"Source":"Path.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Path.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Path"],"Extras":[]},"Source":"Path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Path.AltDirectorySeparatorChar"],"Extras":[]},"Source":"Path.AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Path.AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Path"],"Extras":[]},"Source":"Path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["target","int"],"Extras":[]},"Source":"\t\t\t// STEP 4: Get rid of directories containing . and ..\n\t\t\tint target = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:target"],"Extras":[]},"Source":"\t\t\t// STEP 4: Get rid of directories containing . and ..\n\t\t\tint target = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\t// STEP 4: Get rid of directories containing . and ..\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["target"],"Extras":[]},"Source":"target = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["0"],"Extras":[]},"Source":"= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["isUnc","bool"],"Extras":[]},"Source":"\n\t\t\tbool isUnc = Environment.IsRunningOnWindows &&\n\t\t\t\troot.Length > 2 && IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1]);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:isUnc"],"Extras":[]},"Source":"\n\t\t\tbool isUnc = Environment.IsRunningOnWindows &&\n\t\t\t\troot.Length > 2 && IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\n\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["isUnc"],"Extras":[]},"Source":"isUnc = Environment.IsRunningOnWindows &&\n\t\t\t\troot.Length > 2 && IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["Environment.IsRunningOnWindows &&\n\t\t\t\troot.Length > 2 && IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])"],"Extras":[]},"Source":"= Environment.IsRunningOnWindows &&\n\t\t\t\troot.Length > 2 && IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"Environment.IsRunningOnWindows &&\n\t\t\t\troot.Length > 2 && IsDirectorySeparator (root[0]) && IsDirectorySeparator (root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"Environment.IsRunningOnWindows &&\n\t\t\t\troot.Length > 2 && IsDirectorySeparator (root[0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"Environment.IsRunningOnWindows &&\n\t\t\t\troot.Length > 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.IsRunningOnWindows "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsRunningOnWindows"],"Extras":[]},"Source":"IsRunningOnWindows "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\troot.Length > 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\troot.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"\t\t\t\troot"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2 "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (root[0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["root[0]"],"Extras":[]},"Source":"(root[0]) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["root[0]"],"Extras":[]},"Source":"root[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"root[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator (root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["root[1]"],"Extras":[]},"Source":"(root[1])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["root[1]"],"Extras":[]},"Source":"root[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"root[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["limit","int"],"Extras":[]},"Source":"\n\t\t\t// Set an overwrite limit for UNC paths since '\\' + server + share\n\t\t\t// must not be eliminated by the '..' elimination algorithm.\n\t\t\tint limit = isUnc ? 3 : 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:limit"],"Extras":[]},"Source":"\n\t\t\t// Set an overwrite limit for UNC paths since '\\' + server + share\n\t\t\t// must not be eliminated by the '..' elimination algorithm.\n\t\t\tint limit = isUnc ? 3 : 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\t// Set an overwrite limit for UNC paths since '\\' + server + share\n\t\t\t// must not be eliminated by the '..' elimination algorithm.\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["limit"],"Extras":[]},"Source":"limit = isUnc ? 3 : 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["isUnc ? 3 : 0"],"Extras":[]},"Source":"= isUnc ? 3 : 0"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"isUnc ? 3 : 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["isUnc"],"Extras":[]},"Source":"isUnc "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["3"],"Extras":[]},"Source":"3 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ForStatement","Info":null,"Source":"\n\t\t\tfor (int i = 0; i < dirs.Length; i++) {\n\t\t\t\t// WIN32 path components must be trimmed\n\t\t\t\tif (Environment.IsRunningOnWindows)\n\t\t\t\t\tdirs[i] = dirs[i].TrimEnd ();\n\t\t\t\t\n\t\t\t\tif ((!(isUnc && i == 2) && dirs[i] == \".\") || (i != 0 && dirs[i].Length == 0))\n\t\t\t\t\tcontinue;\n\t\t\t\telse if (dirs[i] == \"..\") {\n\t\t\t\t\t// don't overwrite path segments below the limit\n\t\t\t\t\tif (target > limit)\n\t\t\t\t\t\ttarget--;\n\t\t\t\t} else\n\t\t\t\t\tdirs[target++] = dirs[i];\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:i"],"Extras":[]},"Source":"int i = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["i"],"Extras":[]},"Source":"i = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["0"],"Extras":[]},"Source":"= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i < dirs.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"dirs.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"i++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["Environment.IsRunningOnWindows","dirs[i] = dirs[i].TrimEnd ();"],"Extras":[]},"Source":"\t\t\t\t// WIN32 path components must be trimmed\n\t\t\t\tif (Environment.IsRunningOnWindows)\n\t\t\t\t\tdirs[i] = dirs[i].TrimEnd ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsRunningOnWindows"],"Extras":[]},"Source":"IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tdirs[i] = dirs[i].TrimEnd ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["dirs[i]","=","dirs[i].TrimEnd ()"],"Extras":[]},"Source":"\t\t\t\t\tdirs[i] = dirs[i].TrimEnd ()"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\tdirs[i] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"\t\t\t\t\tdirs"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["dirs[i].TrimEnd"],"Extras":[]},"Source":"dirs[i].TrimEnd ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"dirs[i].TrimEnd "},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"dirs[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["TrimEnd"],"Extras":[]},"Source":"TrimEnd "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["(!(isUnc && i == 2) && dirs[i] == \".\") || (i != 0 && dirs[i].Length == 0)","continue;","if (dirs[i] == \"..\") {\n\t\t\t\t\t// don't overwrite path segments below the limit\n\t\t\t\t\tif (target > limit)\n\t\t\t\t\t\ttarget--;\n\t\t\t\t} else\n\t\t\t\t\tdirs[target++] = dirs[i];"],"Extras":[]},"Source":"\t\t\t\t\n\t\t\t\tif ((!(isUnc && i == 2) && dirs[i] == \".\") || (i != 0 && dirs[i].Length == 0))\n\t\t\t\t\tcontinue;\n\t\t\t\telse if (dirs[i] == \"..\") {\n\t\t\t\t\t// don't overwrite path segments below the limit\n\t\t\t\t\tif (target > limit)\n\t\t\t\t\t\ttarget--;\n\t\t\t\t} else\n\t\t\t\t\tdirs[target++] = dirs[i];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"(!(isUnc && i == 2) && dirs[i] == \".\") || (i != 0 && dirs[i].Length == 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(!(isUnc && i == 2) && dirs[i] == \".\") "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"!(isUnc && i == 2) && dirs[i] == \".\""},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!(isUnc && i == 2) "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(isUnc && i == 2) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"isUnc && i == 2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["isUnc"],"Extras":[]},"Source":"isUnc "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i == 2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"dirs[i] == \".\""},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"dirs[i] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\".\""],"Extras":[]},"Source":"\".\""},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(i != 0 && dirs[i].Length == 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i != 0 && dirs[i].Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i != 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"dirs[i].Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"dirs[i].Length "},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"dirs[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ContinueStatement","Info":null,"Source":"\t\t\t\t\tcontinue;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\t\telse if (dirs[i] == \"..\") {\n\t\t\t\t\t// don't overwrite path segments below the limit\n\t\t\t\t\tif (target > limit)\n\t\t\t\t\t\ttarget--;\n\t\t\t\t} else\n\t\t\t\t\tdirs[target++] = dirs[i];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["dirs[i] == \"..\"","{\n\t\t\t\t\t// don't overwrite path segments below the limit\n\t\t\t\t\tif (target > limit)\n\t\t\t\t\t\ttarget--;\n\t\t\t\t}","dirs[target++] = dirs[i];"],"Extras":[]},"Source":"if (dirs[i] == \"..\") {\n\t\t\t\t\t// don't overwrite path segments below the limit\n\t\t\t\t\tif (target > limit)\n\t\t\t\t\t\ttarget--;\n\t\t\t\t} else\n\t\t\t\t\tdirs[target++] = dirs[i];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"dirs[i] == \"..\""},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"dirs[i] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"..\""],"Extras":[]},"Source":"\"..\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["target > limit","target--;"],"Extras":[]},"Source":"\t\t\t\t\t// don't overwrite path segments below the limit\n\t\t\t\t\tif (target > limit)\n\t\t\t\t\t\ttarget--;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"target > limit"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["target"],"Extras":[]},"Source":"target "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["limit"],"Extras":[]},"Source":"limit"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\ttarget--;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\t\t\ttarget--"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["target"],"Extras":[]},"Source":"\t\t\t\t\t\ttarget"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else\n\t\t\t\t\tdirs[target++] = dirs[i];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tdirs[target++] = dirs[i];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["dirs[target++]","=","dirs[i]"],"Extras":[]},"Source":"\t\t\t\t\tdirs[target++] = dirs[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\tdirs[target++] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"\t\t\t\t\tdirs"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[target++] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["target++"],"Extras":[]},"Source":"target++"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"target++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["target"],"Extras":[]},"Source":"target"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"dirs[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["target == 0 || (target == 1 && dirs[0] == \"\")","return root;","{\n\t\t\t\tstring ret = String.Join (DirectorySeparatorStr, dirs, 0, target);\n\t\t\t\tif (Environment.IsRunningOnWindows) {\n#if WIN_PLATFORM\n\t\t\t\t\t// append leading '\\' of the UNC path that was lost in STEP 3.\n\t\t\t\t\tif (isUnc)\n\t\t\t\t\t\tret = Path.DirectorySeparatorStr + ret;\n\n\t\t\t\t\tif (!SameRoot (root, ret))\n\t\t\t\t\t\tret = root + ret;\n\n\t\t\t\t\tif (isUnc) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t} else if (!IsDirectorySeparator (path[0]) && SameRoot (root, path)) {\n\t\t\t\t\t\tif (ret.Length <= 2 && !ret.EndsWith (DirectorySeparatorStr)) // '\\' after \"c:\"\n\t\t\t\t\t\t\tret += Path.DirectorySeparatorChar;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstring current = Directory.GetCurrentDirectory ();\n\t\t\t\t\t\tif (current.Length > 1 && current[1] == Path.VolumeSeparatorChar) {\n\t\t\t\t\t\t\t// DOS local file path\n\t\t\t\t\t\t\tif (ret.Length == 0 || IsDirectorySeparator (ret[0]))\n\t\t\t\t\t\t\t\tret += '\\\\';\n\t\t\t\t\t\t\treturn current.Substring (0, 2) + ret;\n\t\t\t\t\t\t} else if (IsDirectorySeparator (current[current.Length - 1]) && IsDirectorySeparator (ret[0]))\n\t\t\t\t\t\t\treturn current + ret.Substring (1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn current + ret;\n\t\t\t\t\t}\n#endif\n\t\t\t\t} else {\n\t\t\t\t\tif (root != \"\" && ret.Length > 0 && ret [0] != '/')\n\t\t\t\t\t\tret = root + ret;\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t}"],"Extras":[]},"Source":"\n\t\t\t// STEP 5: Combine everything.\n\t\t\tif (target == 0 || (target == 1 && dirs[0] == \"\"))\n\t\t\t\treturn root;\n\t\t\telse {\n\t\t\t\tstring ret = String.Join (DirectorySeparatorStr, dirs, 0, target);\n\t\t\t\tif (Environment.IsRunningOnWindows) {\n#if WIN_PLATFORM\n\t\t\t\t\t// append leading '\\' of the UNC path that was lost in STEP 3.\n\t\t\t\t\tif (isUnc)\n\t\t\t\t\t\tret = Path.DirectorySeparatorStr + ret;\n\n\t\t\t\t\tif (!SameRoot (root, ret))\n\t\t\t\t\t\tret = root + ret;\n\n\t\t\t\t\tif (isUnc) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t} else if (!IsDirectorySe"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"target == 0 || (target == 1 && dirs[0] == \"\")"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"target == 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["target"],"Extras":[]},"Source":"target "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(target == 1 && dirs[0] == \"\")"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"target == 1 && dirs[0] == \"\""},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"target == 1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["target"],"Extras":[]},"Source":"target "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"dirs[0] == \"\""},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"dirs[0] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"\""],"Extras":[]},"Source":"\"\""},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["root"],"Extras":[]},"Source":"\t\t\t\treturn root;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"\t\t\telse {\n\t\t\t\tstring ret = String.Join (DirectorySeparatorStr, dirs, 0, target);\n\t\t\t\tif (Environment.IsRunningOnWindows) {\n#if WIN_PLATFORM\n\t\t\t\t\t// append leading '\\' of the UNC path that was lost in STEP 3.\n\t\t\t\t\tif (isUnc)\n\t\t\t\t\t\tret = Path.DirectorySeparatorStr + ret;\n\n\t\t\t\t\tif (!SameRoot (root, ret))\n\t\t\t\t\t\tret = root + ret;\n\n\t\t\t\t\tif (isUnc) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t} else if (!IsDirectorySeparator (path[0]) && SameRoot (root, path)) {\n\t\t\t\t\t\tif (ret.Length <= 2 && !ret.EndsWith (DirectorySeparat"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["ret","string"],"Extras":[]},"Source":"\t\t\t\tstring ret = String.Join (DirectorySeparatorStr, dirs, 0, target);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:string","name:ret"],"Extras":[]},"Source":"\t\t\t\tstring ret = String.Join (DirectorySeparatorStr, dirs, 0, target)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"\t\t\t\tstring "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret = String.Join (DirectorySeparatorStr, dirs, 0, target)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["String.Join (DirectorySeparatorStr, dirs, 0, target)"],"Extras":[]},"Source":"= String.Join (DirectorySeparatorStr, dirs, 0, target)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["String.Join"],"Extras":[]},"Source":"String.Join (DirectorySeparatorStr, dirs, 0, target)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Join "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Join"],"Extras":[]},"Source":"Join "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["DirectorySeparatorStr, dirs, 0, target"],"Extras":[]},"Source":"(DirectorySeparatorStr, dirs, 0, target)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["dirs"],"Extras":[]},"Source":"dirs"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["target"],"Extras":[]},"Source":"target"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["target"],"Extras":[]},"Source":"target"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["Environment.IsRunningOnWindows","{\n#if WIN_PLATFORM\n\t\t\t\t\t// append leading '\\' of the UNC path that was lost in STEP 3.\n\t\t\t\t\tif (isUnc)\n\t\t\t\t\t\tret = Path.DirectorySeparatorStr + ret;\n\n\t\t\t\t\tif (!SameRoot (root, ret))\n\t\t\t\t\t\tret = root + ret;\n\n\t\t\t\t\tif (isUnc) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t} else if (!IsDirectorySeparator (path[0]) && SameRoot (root, path)) {\n\t\t\t\t\t\tif (ret.Length <= 2 && !ret.EndsWith (DirectorySeparatorStr)) // '\\' after \"c:\"\n\t\t\t\t\t\t\tret += Path.DirectorySeparatorChar;\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstring current = Directory.GetCurrentDirectory ();\n\t\t\t\t\t\tif (current.Length > 1 && current[1] == Path.VolumeSeparatorChar) {\n\t\t\t\t\t\t\t// DOS local file path\n\t\t\t\t\t\t\tif (ret.Length == 0 || IsDirectorySeparator (ret[0]))\n\t\t\t\t\t\t\t\tret += '\\\\';\n\t\t\t\t\t\t\treturn current.Substring (0, 2) + ret;\n\t\t\t\t\t\t} else if (IsDirectorySeparator (current[current.Length - 1]) && IsDirectorySeparator (ret[0]))\n\t\t\t\t\t\t\treturn current + ret.Substring (1);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn current + ret;\n\t\t\t\t\t}\n#endif\n\t\t\t\t}","{\n\t\t\t\t\tif (root != \"\" && ret.Length > 0 && ret [0] != '/')\n\t\t\t\t\t\tret = root + ret;\n\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\tif (Environment.IsRunningOnWindows) {\n#if WIN_PLATFORM\n\t\t\t\t\t// append leading '\\' of the UNC path that was lost in STEP 3.\n\t\t\t\t\tif (isUnc)\n\t\t\t\t\t\tret = Path.DirectorySeparatorStr + ret;\n\n\t\t\t\t\tif (!SameRoot (root, ret))\n\t\t\t\t\t\tret = root + ret;\n\n\t\t\t\t\tif (isUnc) {\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t} else if (!IsDirectorySeparator (path[0]) && SameRoot (root, path)) {\n\t\t\t\t\t\tif (ret.Length <= 2 && !ret.EndsWith (DirectorySeparatorStr)) // '\\' after \"c:\"\n\t\t\t\t\t\t\tret += Path.DirectorySeparatorChar;\n\t\t\t\t\t\treturn"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsRunningOnWindows"],"Extras":[]},"Source":"IsRunningOnWindows"},{"Kind":0,"KindStr":"Decl","Declaration":"ElseClause","Info":null,"Source":"else {\n\t\t\t\t\tif (root != \"\" && ret.Length > 0 && ret [0] != '/')\n\t\t\t\t\t\tret = root + ret;\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["root != \"\" && ret.Length > 0 && ret [0] != '/'","ret = root + ret;"],"Extras":[]},"Source":"\t\t\t\t\tif (root != \"\" && ret.Length > 0 && ret [0] != '/')\n\t\t\t\t\t\tret = root + ret;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"root != \"\" && ret.Length > 0 && ret [0] != '/'"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"root != \"\" && ret.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"root != \"\" "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"\""],"Extras":[]},"Source":"\"\" "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ret.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"ret.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ret [0] != '/'"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"ret [0] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["'/'"],"Extras":[]},"Source":"'/'"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tret = root + ret;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["ret","=","root + ret"],"Extras":[]},"Source":"\t\t\t\t\t\tret = root + ret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"\t\t\t\t\t\tret "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"root + ret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["ret"],"Extras":[]},"Source":"\t\t\t\treturn ret;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["IsPathSubsetOf","bool"],"Extras":["static internal"]},"Source":"\n\t\t// required for FileIOPermission (and most proibably reusable elsewhere too)\n\t\t// both path MUST be \"full paths\"\n\t\tstatic internal bool IsPathSubsetOf (string subset, string path)\n\t\t{\n\t\t\tif (subset.Length > path.Length)\n\t\t\t\treturn false;\n\n\t\t\t// check that everything up to the last separator match\n\t\t\tint slast = subset.LastIndexOfAny (PathSeparatorChars);\n\t\t\tif (String.Compare (subset, 0, path, 0, slast) != 0)\n\t\t\t\treturn false;\n\n\t\t\tslast++;\n\t\t\t// then check if the last segment is identical\n\t\t\t"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string subset, string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["subset","string "],"Extras":[]},"Source":"string subset"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["subset.Length > path.Length","return false;"],"Extras":[]},"Source":"\t\t\tif (subset.Length > path.Length)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"subset.Length > path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"subset.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["slast","int"],"Extras":[]},"Source":"\n\t\t\t// check that everything up to the last separator match\n\t\t\tint slast = subset.LastIndexOfAny (PathSeparatorChars);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:slast"],"Extras":[]},"Source":"\n\t\t\t// check that everything up to the last separator match\n\t\t\tint slast = subset.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\t// check that everything up to the last separator match\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast = subset.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["subset.LastIndexOfAny (PathSeparatorChars)"],"Extras":[]},"Source":"= subset.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["subset.LastIndexOfAny"],"Extras":[]},"Source":"subset.LastIndexOfAny (PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"subset.LastIndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["LastIndexOfAny"],"Extras":[]},"Source":"LastIndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"(PathSeparatorChars)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["String.Compare (subset, 0, path, 0, slast) != 0","return false;"],"Extras":[]},"Source":"\t\t\tif (String.Compare (subset, 0, path, 0, slast) != 0)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"String.Compare (subset, 0, path, 0, slast) != 0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["String.Compare"],"Extras":[]},"Source":"String.Compare (subset, 0, path, 0, slast) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Compare "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Compare"],"Extras":[]},"Source":"Compare "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["subset, 0, path, 0, slast"],"Extras":[]},"Source":"(subset, 0, path, 0, slast) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tslast++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\n\t\t\tslast++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"\n\t\t\tslast"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["plast","int"],"Extras":[]},"Source":"\t\t\t// then check if the last segment is identical\n\t\t\tint plast = path.IndexOfAny (PathSeparatorChars, slast);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:plast"],"Extras":[]},"Source":"\t\t\t// then check if the last segment is identical\n\t\t\tint plast = path.IndexOfAny (PathSeparatorChars, slast)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\t// then check if the last segment is identical\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["plast"],"Extras":[]},"Source":"plast = path.IndexOfAny (PathSeparatorChars, slast)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.IndexOfAny (PathSeparatorChars, slast)"],"Extras":[]},"Source":"= path.IndexOfAny (PathSeparatorChars, slast)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOfAny"],"Extras":[]},"Source":"path.IndexOfAny (PathSeparatorChars, slast)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["PathSeparatorChars, slast"],"Extras":[]},"Source":"(PathSeparatorChars, slast)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathSeparatorChars"],"Extras":[]},"Source":"PathSeparatorChars"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["plast >= slast","{\n\t\t\t\treturn String.Compare (subset, slast, path, slast, path.Length - plast) == 0;\n\t\t\t}"],"Extras":[]},"Source":"\t\t\tif (plast >= slast) {\n\t\t\t\treturn String.Compare (subset, slast, path, slast, path.Length - plast) == 0;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"plast >= slast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["plast"],"Extras":[]},"Source":"plast "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["String.Compare (subset, slast, path, slast, path.Length - plast) == 0"],"Extras":[]},"Source":"\t\t\t\treturn String.Compare (subset, slast, path, slast, path.Length - plast) == 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"String.Compare (subset, slast, path, slast, path.Length - plast) == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["String.Compare"],"Extras":[]},"Source":"String.Compare (subset, slast, path, slast, path.Length - plast) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Compare "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Compare"],"Extras":[]},"Source":"Compare "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["subset, slast, path, slast, path.Length - plast"],"Extras":[]},"Source":"(subset, slast, path, slast, path.Length - plast) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path.Length - plast"],"Extras":[]},"Source":"path.Length - plast"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length - plast"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["plast"],"Extras":[]},"Source":"plast"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["subset.Length != path.Length","return false;"],"Extras":[]},"Source":"\t\t\tif (subset.Length != path.Length)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"subset.Length != path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"subset.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["String.Compare (subset, slast, path, slast, subset.Length - slast) == 0"],"Extras":[]},"Source":"\n\t\t\treturn String.Compare (subset, slast, path, slast, subset.Length - slast) == 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"String.Compare (subset, slast, path, slast, subset.Length - slast) == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["String.Compare"],"Extras":[]},"Source":"String.Compare (subset, slast, path, slast, subset.Length - slast) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.Compare "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Compare"],"Extras":[]},"Source":"Compare "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["subset, slast, path, slast, subset.Length - slast"],"Extras":[]},"Source":"(subset, slast, path, slast, subset.Length - slast) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["subset.Length - slast"],"Extras":[]},"Source":"subset.Length - slast"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"subset.Length - slast"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"subset.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["subset"],"Extras":[]},"Source":"subset"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slast"],"Extras":[]},"Source":"slast"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["Combine","string"],"Extras":["public\n\t\tstatic"]},"Source":"\n\t\tpublic\n\t\tstatic string Combine (params string [] paths)\n\t\t{\n\t\t\tif (paths == null)\n\t\t\t\tthrow new ArgumentNullException (\"paths\");\n\n\t\t\tbool need_sep;\n\t\t\tvar ret = new StringBuilder ();\n\t\t\tint pathsLen = paths.Length;\n\t\t\tint slen;\n\t\t\tneed_sep = false;\n\n\t\t\tforeach (var s in paths) {\n\t\t\t\tif (s == null)\n\t\t\t\t\tthrow new ArgumentNullException (\"One of the paths contains a null value\", \"paths\");\n\t\t\t\tif (s.Length == 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (s.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\t\tthrow new Argument"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(params string [] paths)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["paths","string [] "],"Extras":["params"]},"Source":"params string [] paths"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"string [] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["paths == null","throw new ArgumentNullException (\"paths\");"],"Extras":[]},"Source":"\t\t\tif (paths == null)\n\t\t\t\tthrow new ArgumentNullException (\"paths\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"paths == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["paths"],"Extras":[]},"Source":"paths "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"paths\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"paths\""],"Extras":[]},"Source":"(\"paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"paths\""],"Extras":[]},"Source":"\"paths\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"paths\""],"Extras":[]},"Source":"\"paths\""},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["need_sep","bool"],"Extras":[]},"Source":"\n\t\t\tbool need_sep;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:need_sep"],"Extras":[]},"Source":"\n\t\t\tbool need_sep"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\n\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["need_sep"],"Extras":[]},"Source":"need_sep"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["ret","var"],"Extras":[]},"Source":"\t\t\tvar ret = new StringBuilder ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:var","name:ret"],"Extras":[]},"Source":"\t\t\tvar ret = new StringBuilder ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["var"],"Extras":[]},"Source":"\t\t\tvar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret = new StringBuilder ()"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["new StringBuilder ()"],"Extras":[]},"Source":"= new StringBuilder ()"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["StringBuilder"],"Extras":[]},"Source":"new StringBuilder ()"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["StringBuilder"],"Extras":[]},"Source":"StringBuilder "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["pathsLen","int"],"Extras":[]},"Source":"\t\t\tint pathsLen = paths.Length;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:pathsLen"],"Extras":[]},"Source":"\t\t\tint pathsLen = paths.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["pathsLen"],"Extras":[]},"Source":"pathsLen = paths.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["paths.Length"],"Extras":[]},"Source":"= paths.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"paths.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["paths"],"Extras":[]},"Source":"paths"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["slen","int"],"Extras":[]},"Source":"\t\t\tint slen;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:slen"],"Extras":[]},"Source":"\t\t\tint slen"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["slen"],"Extras":[]},"Source":"slen"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tneed_sep = false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["need_sep","=","false"],"Extras":[]},"Source":"\t\t\tneed_sep = false"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["need_sep"],"Extras":[]},"Source":"\t\t\tneed_sep "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ForEachStatement","Info":null,"Source":"\n\t\t\tforeach (var s in paths) {\n\t\t\t\tif (s == null)\n\t\t\t\t\tthrow new ArgumentNullException (\"One of the paths contains a null value\", \"paths\");\n\t\t\t\tif (s.Length == 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (s.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n\n\t\t\t\tif (need_sep) {\n\t\t\t\t\tneed_sep = false;\n\t\t\t\t\tret.Append (DirectorySeparatorStr);\n\t\t\t\t}\n\n\t\t\t\tpathsLen--;\n\t\t\t\tif (IsPathRooted (s))\n\t\t\t\t\tret.Length = 0;\n\t\t\t\t\n\t\t\t\tret.Append (s);\n\t\t\t\tslen = s.Length;\n\t\t\t\tif ("},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["var"],"Extras":[]},"Source":"var "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["paths"],"Extras":[]},"Source":"paths"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["s == null","throw new ArgumentNullException (\"One of the paths contains a null value\", \"paths\");"],"Extras":[]},"Source":"\t\t\t\tif (s == null)\n\t\t\t\t\tthrow new ArgumentNullException (\"One of the paths contains a null value\", \"paths\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"s == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\t\tthrow new ArgumentNullException (\"One of the paths contains a null value\", \"paths\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"One of the paths contains a null value\", \"paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"One of the paths contains a null value\", \"paths\""],"Extras":[]},"Source":"(\"One of the paths contains a null value\", \"paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"One of the paths contains a null value\""],"Extras":[]},"Source":"\"One of the paths contains a null value\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"One of the paths contains a null value\""],"Extras":[]},"Source":"\"One of the paths contains a null value\""},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"paths\""],"Extras":[]},"Source":"\"paths\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"paths\""],"Extras":[]},"Source":"\"paths\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["s.Length == 0","continue;"],"Extras":[]},"Source":"\t\t\t\tif (s.Length == 0)\n\t\t\t\t\tcontinue;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"s.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"s.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ContinueStatement","Info":null,"Source":"\t\t\t\t\tcontinue;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["s.IndexOfAny (InvalidPathChars) != -1","throw new ArgumentException (\"Illegal characters in path.\");"],"Extras":[]},"Source":"\t\t\t\tif (s.IndexOfAny (InvalidPathChars) != -1)\n\t\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"s.IndexOfAny (InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["s.IndexOfAny"],"Extras":[]},"Source":"s.IndexOfAny (InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"s.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"(InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\t\tthrow new ArgumentException (\"Illegal characters in path.\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"(\"Illegal characters in path.\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Illegal characters in path.\""],"Extras":[]},"Source":"\"Illegal characters in path.\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["need_sep","{\n\t\t\t\t\tneed_sep = false;\n\t\t\t\t\tret.Append (DirectorySeparatorStr);\n\t\t\t\t}"],"Extras":[]},"Source":"\n\t\t\t\tif (need_sep) {\n\t\t\t\t\tneed_sep = false;\n\t\t\t\t\tret.Append (DirectorySeparatorStr);\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["need_sep"],"Extras":[]},"Source":"need_sep"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tneed_sep = false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["need_sep","=","false"],"Extras":[]},"Source":"\t\t\t\t\tneed_sep = false"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["need_sep"],"Extras":[]},"Source":"\t\t\t\t\tneed_sep "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tret.Append (DirectorySeparatorStr);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["ret.Append"],"Extras":[]},"Source":"\t\t\t\t\tret.Append (DirectorySeparatorStr)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\tret.Append "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"\t\t\t\t\tret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Append"],"Extras":[]},"Source":"Append "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"(DirectorySeparatorStr)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\t\tpathsLen--;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\n\t\t\t\tpathsLen--"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["pathsLen"],"Extras":[]},"Source":"\n\t\t\t\tpathsLen"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["IsPathRooted (s)","ret.Length = 0;"],"Extras":[]},"Source":"\t\t\t\tif (IsPathRooted (s))\n\t\t\t\t\tret.Length = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted (s)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["s"],"Extras":[]},"Source":"(s)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\tret.Length = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["ret.Length","=","0"],"Extras":[]},"Source":"\t\t\t\t\tret.Length = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\tret.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"\t\t\t\t\tret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\n\t\t\t\tret.Append (s);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["ret.Append"],"Extras":[]},"Source":"\t\t\t\t\n\t\t\t\tret.Append (s)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\n\t\t\t\tret.Append "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"\t\t\t\t\n\t\t\t\tret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Append"],"Extras":[]},"Source":"Append "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["s"],"Extras":[]},"Source":"(s)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tslen = s.Length;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["slen","=","s.Length"],"Extras":[]},"Source":"\t\t\t\tslen = s.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slen"],"Extras":[]},"Source":"\t\t\t\tslen "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"s.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["slen > 0 && pathsLen > 0","{\n\t\t\t\t\tchar p1end = s [slen - 1];\n\t\t\t\t\tif (p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar && p1end != VolumeSeparatorChar)\n\t\t\t\t\t\tneed_sep = true;\n\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\tif (slen > 0 && pathsLen > 0) {\n\t\t\t\t\tchar p1end = s [slen - 1];\n\t\t\t\t\tif (p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar && p1end != VolumeSeparatorChar)\n\t\t\t\t\t\tneed_sep = true;\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"slen > 0 && pathsLen > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"slen > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slen"],"Extras":[]},"Source":"slen "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"pathsLen > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["pathsLen"],"Extras":[]},"Source":"pathsLen "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["p1end","char"],"Extras":[]},"Source":"\t\t\t\t\tchar p1end = s [slen - 1];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:p1end"],"Extras":[]},"Source":"\t\t\t\t\tchar p1end = s [slen - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"\t\t\t\t\tchar "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["p1end"],"Extras":[]},"Source":"p1end = s [slen - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["s [slen - 1]"],"Extras":[]},"Source":"= s [slen - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"s [slen - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s "},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[slen - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["slen - 1"],"Extras":[]},"Source":"slen - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"slen - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["slen"],"Extras":[]},"Source":"slen "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar && p1end != VolumeSeparatorChar","need_sep = true;"],"Extras":[]},"Source":"\t\t\t\t\tif (p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar && p1end != VolumeSeparatorChar)\n\t\t\t\t\t\tneed_sep = true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar && p1end != VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != DirectorySeparatorChar && p1end != AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p1end"],"Extras":[]},"Source":"p1end "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p1end"],"Extras":[]},"Source":"p1end "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"p1end != VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["p1end"],"Extras":[]},"Source":"p1end "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tneed_sep = true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["need_sep","=","true"],"Extras":[]},"Source":"\t\t\t\t\t\tneed_sep = true"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["need_sep"],"Extras":[]},"Source":"\t\t\t\t\t\tneed_sep "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["ret.ToString ()"],"Extras":[]},"Source":"\n\t\t\treturn ret.ToString ();\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["ret.ToString"],"Extras":[]},"Source":"ret.ToString ()"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"ret.ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ret"],"Extras":[]},"Source":"ret"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ToString"],"Extras":[]},"Source":"ToString "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":[""],"Extras":[]},"Source":"()"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["Combine","string"],"Extras":["public\n\t\tstatic"]},"Source":"\n\t\tpublic\n\t\tstatic string Combine (string path1, string path2, string path3)\n\t\t{\n\t\t\tif (path1 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path1\");\n\n\t\t\tif (path2 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path2\");\n\n\t\t\tif (path3 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path3\");\n\t\t\t\n\t\t\treturn Combine (new string [] { path1, path2, path3 });\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path1, string path2, string path3)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path1","string "],"Extras":[]},"Source":"string path1"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path2","string "],"Extras":[]},"Source":"string path2"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path3","string "],"Extras":[]},"Source":"string path3"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1 == null","throw new ArgumentNullException (\"path1\");"],"Extras":[]},"Source":"\t\t\tif (path1 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path1\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path1\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path1\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"(\"path1\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"\"path1\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"\"path1\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2 == null","throw new ArgumentNullException (\"path2\");"],"Extras":[]},"Source":"\n\t\t\tif (path2 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"(\"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path3 == null","throw new ArgumentNullException (\"path3\");"],"Extras":[]},"Source":"\n\t\t\tif (path3 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path3\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path3 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path3\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path3\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path3\""],"Extras":[]},"Source":"(\"path3\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path3\""],"Extras":[]},"Source":"\"path3\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path3\""],"Extras":[]},"Source":"\"path3\""},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["Combine (new string [] { path1, path2, path3 })"],"Extras":[]},"Source":"\t\t\t\n\t\t\treturn Combine (new string [] { path1, path2, path3 });\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Combine"],"Extras":[]},"Source":"Combine (new string [] { path1, path2, path3 })"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Combine"],"Extras":[]},"Source":"Combine "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["new string [] { path1, path2, path3 }"],"Extras":[]},"Source":"(new string [] { path1, path2, path3 })"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["new string [] { path1, path2, path3 }"],"Extras":[]},"Source":"new string [] { path1, path2, path3 }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new string [] { path1, path2, path3 }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"string [] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{ path1, path2, path3 }"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3 "},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["Combine","string"],"Extras":["public\n\t\tstatic"]},"Source":"\n\t\tpublic\n\t\tstatic string Combine (string path1, string path2, string path3, string path4)\n\t\t{\n\t\t\tif (path1 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path1\");\n\n\t\t\tif (path2 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path2\");\n\n\t\t\tif (path3 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path3\");\n\n\t\t\tif (path4 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path4\");\n\t\t\t\n\t\t\treturn Combine (new string [] { path1, path2, path3, path4 });\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path1, string path2, string path3, string path4)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path1","string "],"Extras":[]},"Source":"string path1"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path2","string "],"Extras":[]},"Source":"string path2"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path3","string "],"Extras":[]},"Source":"string path3"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path4","string "],"Extras":[]},"Source":"string path4"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1 == null","throw new ArgumentNullException (\"path1\");"],"Extras":[]},"Source":"\t\t\tif (path1 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path1\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path1\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path1\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"(\"path1\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"\"path1\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"\"path1\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2 == null","throw new ArgumentNullException (\"path2\");"],"Extras":[]},"Source":"\n\t\t\tif (path2 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"(\"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path3 == null","throw new ArgumentNullException (\"path3\");"],"Extras":[]},"Source":"\n\t\t\tif (path3 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path3\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path3 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path3\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path3\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path3\""],"Extras":[]},"Source":"(\"path3\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path3\""],"Extras":[]},"Source":"\"path3\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path3\""],"Extras":[]},"Source":"\"path3\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path4 == null","throw new ArgumentNullException (\"path4\");"],"Extras":[]},"Source":"\n\t\t\tif (path4 == null)\n\t\t\t\tthrow new ArgumentNullException (\"path4\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path4 == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path4"],"Extras":[]},"Source":"path4 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (\"path4\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (\"path4\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path4\""],"Extras":[]},"Source":"(\"path4\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path4\""],"Extras":[]},"Source":"\"path4\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path4\""],"Extras":[]},"Source":"\"path4\""},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["Combine (new string [] { path1, path2, path3, path4 })"],"Extras":[]},"Source":"\t\t\t\n\t\t\treturn Combine (new string [] { path1, path2, path3, path4 });\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Combine"],"Extras":[]},"Source":"Combine (new string [] { path1, path2, path3, path4 })"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Combine"],"Extras":[]},"Source":"Combine "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["new string [] { path1, path2, path3, path4 }"],"Extras":[]},"Source":"(new string [] { path1, path2, path3, path4 })"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["new string [] { path1, path2, path3, path4 }"],"Extras":[]},"Source":"new string [] { path1, path2, path3, path4 }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayCreationExpression","Info":null,"Source":"new string [] { path1, path2, path3, path4 }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"string [] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{ path1, path2, path3, path4 }"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path4"],"Extras":[]},"Source":"path4 "},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["Validate","void"],"Extras":["internal static"]},"Source":"\n\t\tinternal static void Validate (string path)\n\t\t{\n\t\t\tValidate (path, \"path\");\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["void"],"Extras":[]},"Source":"void "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tValidate (path, \"path\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Validate"],"Extras":[]},"Source":"\t\t\tValidate (path, \"path\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Validate"],"Extras":[]},"Source":"\t\t\tValidate "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path, \"path\""],"Extras":[]},"Source":"(path, \"path\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path\""],"Extras":[]},"Source":"\"path\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path\""],"Extras":[]},"Source":"\"path\""},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["Validate","void"],"Extras":["internal static"]},"Source":"\n\t\tinternal static void Validate (string path, string parameterName)\n\t\t{\n\t\t\tif (path == null)\n\t\t\t\tthrow new ArgumentNullException (parameterName);\n\t\t\tif (String.IsNullOrWhiteSpace (path))\n\t\t\t\tthrow new ArgumentException (Locale.GetText (\"Path is empty\"));\n\t\t\tif (path.IndexOfAny (Path.InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (Locale.GetText (\"Path contains invalid chars\"));\n#if WIN_PLATFORM\n\t\t\tif (Environment.IsRunningOnWindows) {\n\t\t\t\tint idx = path.IndexOf (':');\n\t\t\t\tif (idx >= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["void"],"Extras":[]},"Source":"void "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path, string parameterName)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["parameterName","string "],"Extras":[]},"Source":"string parameterName"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null","throw new ArgumentNullException (parameterName);"],"Extras":[]},"Source":"\t\t\tif (path == null)\n\t\t\t\tthrow new ArgumentNullException (parameterName);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentNullException (parameterName);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException (parameterName)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["parameterName"],"Extras":[]},"Source":"(parameterName)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["parameterName"],"Extras":[]},"Source":"parameterName"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["parameterName"],"Extras":[]},"Source":"parameterName"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["String.IsNullOrWhiteSpace (path)","throw new ArgumentException (Locale.GetText (\"Path is empty\"));"],"Extras":[]},"Source":"\t\t\tif (String.IsNullOrWhiteSpace (path))\n\t\t\t\tthrow new ArgumentException (Locale.GetText (\"Path is empty\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["String.IsNullOrWhiteSpace"],"Extras":[]},"Source":"String.IsNullOrWhiteSpace (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"String.IsNullOrWhiteSpace "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsNullOrWhiteSpace"],"Extras":[]},"Source":"IsNullOrWhiteSpace "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (Locale.GetText (\"Path is empty\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (Locale.GetText (\"Path is empty\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Locale.GetText (\"Path is empty\")"],"Extras":[]},"Source":"(Locale.GetText (\"Path is empty\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Locale.GetText (\"Path is empty\")"],"Extras":[]},"Source":"Locale.GetText (\"Path is empty\")"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Locale.GetText"],"Extras":[]},"Source":"Locale.GetText (\"Path is empty\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Locale.GetText "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Locale"],"Extras":[]},"Source":"Locale"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetText"],"Extras":[]},"Source":"GetText "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Path is empty\""],"Extras":[]},"Source":"(\"Path is empty\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Path is empty\""],"Extras":[]},"Source":"\"Path is empty\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Path is empty\""],"Extras":[]},"Source":"\"Path is empty\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path.IndexOfAny (Path.InvalidPathChars) != -1","throw new ArgumentException (Locale.GetText (\"Path contains invalid chars\"));"],"Extras":[]},"Source":"\t\t\tif (path.IndexOfAny (Path.InvalidPathChars) != -1)\n\t\t\t\tthrow new ArgumentException (Locale.GetText (\"Path contains invalid chars\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.IndexOfAny (Path.InvalidPathChars) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.IndexOfAny"],"Extras":[]},"Source":"path.IndexOfAny (Path.InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOfAny"],"Extras":[]},"Source":"IndexOfAny "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Path.InvalidPathChars"],"Extras":[]},"Source":"(Path.InvalidPathChars) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Path.InvalidPathChars"],"Extras":[]},"Source":"Path.InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Path.InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Path"],"Extras":[]},"Source":"Path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["InvalidPathChars"],"Extras":[]},"Source":"InvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"\t\t\t\tthrow new ArgumentException (Locale.GetText (\"Path contains invalid chars\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException (Locale.GetText (\"Path contains invalid chars\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Locale.GetText (\"Path contains invalid chars\")"],"Extras":[]},"Source":"(Locale.GetText (\"Path contains invalid chars\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Locale.GetText (\"Path contains invalid chars\")"],"Extras":[]},"Source":"Locale.GetText (\"Path contains invalid chars\")"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Locale.GetText"],"Extras":[]},"Source":"Locale.GetText (\"Path contains invalid chars\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Locale.GetText "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Locale"],"Extras":[]},"Source":"Locale"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetText"],"Extras":[]},"Source":"GetText "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Path contains invalid chars\""],"Extras":[]},"Source":"(\"Path contains invalid chars\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Path contains invalid chars\""],"Extras":[]},"Source":"\"Path contains invalid chars\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Path contains invalid chars\""],"Extras":[]},"Source":"\"Path contains invalid chars\""},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["PropertyDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"PropertyDeclaration","Info":{"Essentials":["DirectorySeparatorCharAsString","1"],"Extras":["get"]},"Source":"\n\t\tinternal static string DirectorySeparatorCharAsString {\n\t\t\tget {\n\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t}\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"AccessorList","Info":{"Essentials":["get {\n\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t}"],"Extras":[]},"Source":"{\n\t\t\tget {\n\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t}\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AccessorDeclaration","Info":{"Essentials":["get","return DirectorySeparatorStr;"],"Extras":[]},"Source":"\t\t\tget {\n\t\t\t\treturn DirectorySeparatorStr;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"\t\t\t\treturn DirectorySeparatorStr;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorStr"],"Extras":[]},"Source":"DirectorySeparatorStr"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","PropertyDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["internal const","int","MAX_PATH = 260"],"Extras":[]},"Source":"\n\t\tinternal const int MAX_PATH = 260;  // From WinDef.h\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:MAX_PATH"],"Extras":[]},"Source":"int MAX_PATH = 260"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["MAX_PATH"],"Extras":[]},"Source":"MAX_PATH = 260"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["260"],"Extras":[]},"Source":"= 260"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["260"],"Extras":[]},"Source":"260"},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["internal static readonly","char[]","trimEndCharsWindows = { (char)0x9, (char)0xA, (char)0xB, (char)0xC, (char)0xD, (char)0x20, (char)0x85, (char)0xA0 }"],"Extras":[]},"Source":"\n#region Copied from referencesource\n\t\t// this was copied from corefx since it's not available in referencesource\n\t\tinternal static readonly char[] trimEndCharsWindows = { (char)0x9, (char)0xA, (char)0xB, (char)0xC, (char)0xD, (char)0x20, (char)0x85, (char)0xA0 };\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char[]","name:trimEndCharsWindows"],"Extras":[]},"Source":"char[] trimEndCharsWindows = { (char)0x9, (char)0xA, (char)0xB, (char)0xC, (char)0xD, (char)0x20, (char)0x85, (char)0xA0 }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char[] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["trimEndCharsWindows"],"Extras":[]},"Source":"trimEndCharsWindows = { (char)0x9, (char)0xA, (char)0xB, (char)0xC, (char)0xD, (char)0x20, (char)0x85, (char)0xA0 }"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["{ (char)0x9, (char)0xA, (char)0xB, (char)0xC, (char)0xD, (char)0x20, (char)0x85, (char)0xA0 }"],"Extras":[]},"Source":"= { (char)0x9, (char)0xA, (char)0xB, (char)0xC, (char)0xD, (char)0x20, (char)0x85, (char)0xA0 }"},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{ (char)0x9, (char)0xA, (char)0xB, (char)0xC, (char)0xD, (char)0x20, (char)0x85, (char)0xA0 }"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char)0x9"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0x9"],"Extras":[]},"Source":"0x9"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char)0xA"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0xA"],"Extras":[]},"Source":"0xA"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char)0xB"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0xB"],"Extras":[]},"Source":"0xB"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char)0xC"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0xC"],"Extras":[]},"Source":"0xC"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char)0xD"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0xD"],"Extras":[]},"Source":"0xD"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char)0x20"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0x20"],"Extras":[]},"Source":"0x20"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char)0x85"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0x85"],"Extras":[]},"Source":"0x85"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char)0xA0 "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0xA0"],"Extras":[]},"Source":"0xA0 "},{"Kind":0,"KindStr":"Decl","Declaration":"FieldDeclaration","Info":{"Essentials":["internal static readonly","char[]","trimEndCharsUnix = { }"],"Extras":[]},"Source":"\t\tinternal static readonly char[] trimEndCharsUnix = { };\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char[]","name:trimEndCharsUnix"],"Extras":[]},"Source":"char[] trimEndCharsUnix = { }"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char[] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["trimEndCharsUnix"],"Extras":[]},"Source":"trimEndCharsUnix = { }"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["{ }"],"Extras":[]},"Source":"= { }"},{"Kind":0,"KindStr":"Decl","Declaration":"InitializerExpression","Info":null,"Source":"{ }"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["PropertyDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"PropertyDeclaration","Info":{"Essentials":["TrimEndChars",null],"Extras":[]},"Source":"\n\t\tinternal static char[] TrimEndChars => Environment.IsRunningOnWindows ? trimEndCharsWindows : trimEndCharsUnix;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayType","Info":null,"Source":"char[] "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArrayRankSpecifier","Info":null,"Source":"[] "},{"Kind":0,"KindStr":"Decl","Declaration":"OmittedArraySizeExpression","Info":null,"Source":""},{"Kind":0,"KindStr":"Decl","Declaration":"ArrowExpressionClause","Info":null,"Source":"=> Environment.IsRunningOnWindows ? trimEndCharsWindows : trimEndCharsUnix"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"Environment.IsRunningOnWindows ? trimEndCharsWindows : trimEndCharsUnix"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.IsRunningOnWindows "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsRunningOnWindows"],"Extras":[]},"Source":"IsRunningOnWindows "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["trimEndCharsWindows"],"Extras":[]},"Source":"trimEndCharsWindows "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["trimEndCharsUnix"],"Extras":[]},"Source":"trimEndCharsUnix"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","PropertyDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["CheckSearchPattern","void"],"Extras":["internal static"]},"Source":"\n        // \"..\" can only be used if it is specified as a part of a valid File/Directory name. We disallow\n        //  the user being able to use it to move up directories. Here are some examples eg \n        //    Valid: a..b  abc..d\n        //    Invalid: ..ab   ab..  ..   abc..d\\abc..\n        //\n        internal static void CheckSearchPattern(String searchPattern)\n        {\n            int index;\n            while ((index = searchPattern.IndexOf(\"..\", StringComparison.Ordinal)) != -1) {\n      "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["void"],"Extras":[]},"Source":"void "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(String searchPattern)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["searchPattern","String "],"Extras":[]},"Source":"String searchPattern"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String "},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["index","int"],"Extras":[]},"Source":"            int index;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:index"],"Extras":[]},"Source":"            int index"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"            int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["index"],"Extras":[]},"Source":"index"},{"Kind":0,"KindStr":"Decl","Declaration":"WhileStatement","Info":null,"Source":"            while ((index = searchPattern.IndexOf(\"..\", StringComparison.Ordinal)) != -1) {\n                    \n                 if (index + 2 == searchPattern.Length) // Terminal \"..\" . Files names cannot end in \"..\"\n                    throw new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"));\n                \n                 if ((searchPattern[index+2] ==  DirectorySeparatorChar)\n                    || (searchPattern[index+2] == AltDirectorySeparatorChar))\n     "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"(index = searchPattern.IndexOf(\"..\", StringComparison.Ordinal)) != -1"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(index = searchPattern.IndexOf(\"..\", StringComparison.Ordinal)) "},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["index","=","searchPattern.IndexOf(\"..\", StringComparison.Ordinal)"],"Extras":[]},"Source":"index = searchPattern.IndexOf(\"..\", StringComparison.Ordinal)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["index"],"Extras":[]},"Source":"index "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["searchPattern.IndexOf"],"Extras":[]},"Source":"searchPattern.IndexOf(\"..\", StringComparison.Ordinal)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"searchPattern.IndexOf"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["searchPattern"],"Extras":[]},"Source":"searchPattern"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IndexOf"],"Extras":[]},"Source":"IndexOf"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"..\", StringComparison.Ordinal"],"Extras":[]},"Source":"(\"..\", StringComparison.Ordinal)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"..\""],"Extras":[]},"Source":"\"..\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"..\""],"Extras":[]},"Source":"\"..\""},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["StringComparison.Ordinal"],"Extras":[]},"Source":"StringComparison.Ordinal"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"StringComparison.Ordinal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["StringComparison"],"Extras":[]},"Source":"StringComparison"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Ordinal"],"Extras":[]},"Source":"Ordinal"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"-1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["index + 2 == searchPattern.Length","throw new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"));"],"Extras":[]},"Source":"                    \n                 if (index + 2 == searchPattern.Length) // Terminal \"..\" . Files names cannot end in \"..\"\n                    throw new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"index + 2 == searchPattern.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"index + 2 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["index"],"Extras":[]},"Source":"index "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"searchPattern.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["searchPattern"],"Extras":[]},"Source":"searchPattern"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"                    throw new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Environment.GetResourceString(\"Arg_InvalidSearchPattern\")"],"Extras":[]},"Source":"(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Environment.GetResourceString(\"Arg_InvalidSearchPattern\")"],"Extras":[]},"Source":"Environment.GetResourceString(\"Arg_InvalidSearchPattern\")"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Environment.GetResourceString"],"Extras":[]},"Source":"Environment.GetResourceString(\"Arg_InvalidSearchPattern\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetResourceString"],"Extras":[]},"Source":"GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Arg_InvalidSearchPattern\""],"Extras":[]},"Source":"(\"Arg_InvalidSearchPattern\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Arg_InvalidSearchPattern\""],"Extras":[]},"Source":"\"Arg_InvalidSearchPattern\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Arg_InvalidSearchPattern\""],"Extras":[]},"Source":"\"Arg_InvalidSearchPattern\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["(searchPattern[index+2] ==  DirectorySeparatorChar)\n                    || (searchPattern[index+2] == AltDirectorySeparatorChar)","throw new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"));"],"Extras":[]},"Source":"                \n                 if ((searchPattern[index+2] ==  DirectorySeparatorChar)\n                    || (searchPattern[index+2] == AltDirectorySeparatorChar))\n                    throw new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"(searchPattern[index+2] ==  DirectorySeparatorChar)\n                    || (searchPattern[index+2] == AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(searchPattern[index+2] ==  DirectorySeparatorChar)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"searchPattern[index+2] ==  DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"searchPattern[index+2] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["searchPattern"],"Extras":[]},"Source":"searchPattern"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[index+2] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["index+2"],"Extras":[]},"Source":"index+2"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"index+2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["index"],"Extras":[]},"Source":"index"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(searchPattern[index+2] == AltDirectorySeparatorChar)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"searchPattern[index+2] == AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"searchPattern[index+2] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["searchPattern"],"Extras":[]},"Source":"searchPattern"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[index+2] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["index+2"],"Extras":[]},"Source":"index+2"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"index+2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["index"],"Extras":[]},"Source":"index"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"                    throw new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Environment.GetResourceString(\"Arg_InvalidSearchPattern\")"],"Extras":[]},"Source":"(Environment.GetResourceString(\"Arg_InvalidSearchPattern\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Environment.GetResourceString(\"Arg_InvalidSearchPattern\")"],"Extras":[]},"Source":"Environment.GetResourceString(\"Arg_InvalidSearchPattern\")"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Environment.GetResourceString"],"Extras":[]},"Source":"Environment.GetResourceString(\"Arg_InvalidSearchPattern\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetResourceString"],"Extras":[]},"Source":"GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Arg_InvalidSearchPattern\""],"Extras":[]},"Source":"(\"Arg_InvalidSearchPattern\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Arg_InvalidSearchPattern\""],"Extras":[]},"Source":"\"Arg_InvalidSearchPattern\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Arg_InvalidSearchPattern\""],"Extras":[]},"Source":"\"Arg_InvalidSearchPattern\""},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"                \n                searchPattern = searchPattern.Substring(index + 2);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["searchPattern","=","searchPattern.Substring(index + 2)"],"Extras":[]},"Source":"                \n                searchPattern = searchPattern.Substring(index + 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["searchPattern"],"Extras":[]},"Source":"                \n                searchPattern "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["searchPattern.Substring"],"Extras":[]},"Source":"searchPattern.Substring(index + 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"searchPattern.Substring"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["searchPattern"],"Extras":[]},"Source":"searchPattern"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Substring"],"Extras":[]},"Source":"Substring"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["index + 2"],"Extras":[]},"Source":"(index + 2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["index + 2"],"Extras":[]},"Source":"index + 2"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"index + 2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["index"],"Extras":[]},"Source":"index "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["2"],"Extras":[]},"Source":"2"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["CheckInvalidPathChars","void"],"Extras":["internal static"]},"Source":"\n        internal static void CheckInvalidPathChars(string path, bool checkAdditional = false)\n        {\n            if (path == null)\n                throw new ArgumentNullException(\"path\");\n\n            if (PathInternal.HasIllegalCharacters(path, checkAdditional))\n                throw new ArgumentException(Environment.GetResourceString(\"Argument_InvalidPathChars\"));\n        }\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["void"],"Extras":[]},"Source":"void "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(string path, bool checkAdditional = false)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","string "],"Extras":[]},"Source":"string path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["checkAdditional","bool "],"Extras":[]},"Source":"bool checkAdditional = false"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["false"],"Extras":[]},"Source":"= false"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path == null","throw new ArgumentNullException(\"path\");"],"Extras":[]},"Source":"            if (path == null)\n                throw new ArgumentNullException(\"path\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path == null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"                throw new ArgumentNullException(\"path\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException(\"path\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"path\""],"Extras":[]},"Source":"(\"path\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path\""],"Extras":[]},"Source":"\"path\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path\""],"Extras":[]},"Source":"\"path\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["PathInternal.HasIllegalCharacters(path, checkAdditional)","throw new ArgumentException(Environment.GetResourceString(\"Argument_InvalidPathChars\"));"],"Extras":[]},"Source":"\n            if (PathInternal.HasIllegalCharacters(path, checkAdditional))\n                throw new ArgumentException(Environment.GetResourceString(\"Argument_InvalidPathChars\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.HasIllegalCharacters"],"Extras":[]},"Source":"PathInternal.HasIllegalCharacters(path, checkAdditional)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.HasIllegalCharacters"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["HasIllegalCharacters"],"Extras":[]},"Source":"HasIllegalCharacters"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path, checkAdditional"],"Extras":[]},"Source":"(path, checkAdditional)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["checkAdditional"],"Extras":[]},"Source":"checkAdditional"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["checkAdditional"],"Extras":[]},"Source":"checkAdditional"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"                throw new ArgumentException(Environment.GetResourceString(\"Argument_InvalidPathChars\"));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException(Environment.GetResourceString(\"Argument_InvalidPathChars\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Environment.GetResourceString(\"Argument_InvalidPathChars\")"],"Extras":[]},"Source":"(Environment.GetResourceString(\"Argument_InvalidPathChars\"))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Environment.GetResourceString(\"Argument_InvalidPathChars\")"],"Extras":[]},"Source":"Environment.GetResourceString(\"Argument_InvalidPathChars\")"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Environment.GetResourceString"],"Extras":[]},"Source":"Environment.GetResourceString(\"Argument_InvalidPathChars\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetResourceString"],"Extras":[]},"Source":"GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Argument_InvalidPathChars\""],"Extras":[]},"Source":"(\"Argument_InvalidPathChars\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Argument_InvalidPathChars\""],"Extras":[]},"Source":"\"Argument_InvalidPathChars\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Argument_InvalidPathChars\""],"Extras":[]},"Source":"\"Argument_InvalidPathChars\""},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["InternalCombine","String"],"Extras":["internal static"]},"Source":"\n        internal static String InternalCombine(String path1, String path2) {\n            if (path1==null || path2==null)\n                throw new ArgumentNullException((path1==null) ? \"path1\" : \"path2\");\n            CheckInvalidPathChars(path1);\n            CheckInvalidPathChars(path2);\n            \n            if (path2.Length == 0)\n                throw new ArgumentException(Environment.GetResourceString(\"Argument_PathEmpty\"), \"path2\");\n            if (IsPathRooted(path2))\n                th"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(String path1, String path2) "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path1","String "],"Extras":[]},"Source":"String path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path2","String "],"Extras":[]},"Source":"String path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["String"],"Extras":[]},"Source":"String "},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1==null || path2==null","throw new ArgumentNullException((path1==null) ? \"path1\" : \"path2\");"],"Extras":[]},"Source":"            if (path1==null || path2==null)\n                throw new ArgumentNullException((path1==null) ? \"path1\" : \"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1==null || path2==null"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1==null "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2==null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"                throw new ArgumentNullException((path1==null) ? \"path1\" : \"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"new ArgumentNullException((path1==null) ? \"path1\" : \"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentNullException"],"Extras":[]},"Source":"ArgumentNullException"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(path1==null) ? \"path1\" : \"path2\""],"Extras":[]},"Source":"((path1==null) ? \"path1\" : \"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(path1==null) ? \"path1\" : \"path2\""],"Extras":[]},"Source":"(path1==null) ? \"path1\" : \"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"(path1==null) ? \"path1\" : \"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(path1==null) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1==null"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["null"],"Extras":[]},"Source":"null"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path1\""],"Extras":[]},"Source":"\"path1\" "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"            CheckInvalidPathChars(path1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["CheckInvalidPathChars"],"Extras":[]},"Source":"            CheckInvalidPathChars(path1)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CheckInvalidPathChars"],"Extras":[]},"Source":"            CheckInvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1"],"Extras":[]},"Source":"(path1)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"            CheckInvalidPathChars(path2);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["CheckInvalidPathChars"],"Extras":[]},"Source":"            CheckInvalidPathChars(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CheckInvalidPathChars"],"Extras":[]},"Source":"            CheckInvalidPathChars"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2"],"Extras":[]},"Source":"(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2.Length == 0","throw new ArgumentException(Environment.GetResourceString(\"Argument_PathEmpty\"), \"path2\");"],"Extras":[]},"Source":"            \n            if (path2.Length == 0)\n                throw new ArgumentException(Environment.GetResourceString(\"Argument_PathEmpty\"), \"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"                throw new ArgumentException(Environment.GetResourceString(\"Argument_PathEmpty\"), \"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException(Environment.GetResourceString(\"Argument_PathEmpty\"), \"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Environment.GetResourceString(\"Argument_PathEmpty\"), \"path2\""],"Extras":[]},"Source":"(Environment.GetResourceString(\"Argument_PathEmpty\"), \"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Environment.GetResourceString(\"Argument_PathEmpty\")"],"Extras":[]},"Source":"Environment.GetResourceString(\"Argument_PathEmpty\")"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Environment.GetResourceString"],"Extras":[]},"Source":"Environment.GetResourceString(\"Argument_PathEmpty\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetResourceString"],"Extras":[]},"Source":"GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Argument_PathEmpty\""],"Extras":[]},"Source":"(\"Argument_PathEmpty\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Argument_PathEmpty\""],"Extras":[]},"Source":"\"Argument_PathEmpty\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Argument_PathEmpty\""],"Extras":[]},"Source":"\"Argument_PathEmpty\""},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["IsPathRooted(path2)","throw new ArgumentException(Environment.GetResourceString(\"Arg_Path2IsRooted\"), \"path2\");"],"Extras":[]},"Source":"            if (IsPathRooted(path2))\n                throw new ArgumentException(Environment.GetResourceString(\"Arg_Path2IsRooted\"), \"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsPathRooted"],"Extras":[]},"Source":"IsPathRooted"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2"],"Extras":[]},"Source":"(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"ThrowStatement","Info":null,"Source":"                throw new ArgumentException(Environment.GetResourceString(\"Arg_Path2IsRooted\"), \"path2\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"new ArgumentException(Environment.GetResourceString(\"Arg_Path2IsRooted\"), \"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ArgumentException"],"Extras":[]},"Source":"ArgumentException"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["Environment.GetResourceString(\"Arg_Path2IsRooted\"), \"path2\""],"Extras":[]},"Source":"(Environment.GetResourceString(\"Arg_Path2IsRooted\"), \"path2\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["Environment.GetResourceString(\"Arg_Path2IsRooted\")"],"Extras":[]},"Source":"Environment.GetResourceString(\"Arg_Path2IsRooted\")"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Environment.GetResourceString"],"Extras":[]},"Source":"Environment.GetResourceString(\"Arg_Path2IsRooted\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"Environment.GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Environment"],"Extras":[]},"Source":"Environment"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetResourceString"],"Extras":[]},"Source":"GetResourceString"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["\"Arg_Path2IsRooted\""],"Extras":[]},"Source":"(\"Arg_Path2IsRooted\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"Arg_Path2IsRooted\""],"Extras":[]},"Source":"\"Arg_Path2IsRooted\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"Arg_Path2IsRooted\""],"Extras":[]},"Source":"\"Arg_Path2IsRooted\""},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"path2\""],"Extras":[]},"Source":"\"path2\""},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["i","int"],"Extras":[]},"Source":"            int i = path1.Length;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:i"],"Extras":[]},"Source":"            int i = path1.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"            int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["i"],"Extras":[]},"Source":"i = path1.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path1.Length"],"Extras":[]},"Source":"= path1.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["i == 0","return path2;"],"Extras":[]},"Source":"            if (i == 0) return path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path2"],"Extras":[]},"Source":"return path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["ch","char"],"Extras":[]},"Source":"            char ch = path1[i - 1];\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char","name:ch"],"Extras":[]},"Source":"            char ch = path1[i - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"            char "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["ch"],"Extras":[]},"Source":"ch = path1[i - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path1[i - 1]"],"Extras":[]},"Source":"= path1[i - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path1[i - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i - 1"],"Extras":[]},"Source":"i - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["ch != DirectorySeparatorChar && ch != AltDirectorySeparatorChar && ch != VolumeSeparatorChar","return path1 + DirectorySeparatorCharAsString + path2;"],"Extras":[]},"Source":"            if (ch != DirectorySeparatorChar && ch != AltDirectorySeparatorChar && ch != VolumeSeparatorChar) \n                return path1 + DirectorySeparatorCharAsString + path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ch != DirectorySeparatorChar && ch != AltDirectorySeparatorChar && ch != VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ch != DirectorySeparatorChar && ch != AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ch != DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ch"],"Extras":[]},"Source":"ch "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ch != AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ch"],"Extras":[]},"Source":"ch "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["AltDirectorySeparatorChar"],"Extras":[]},"Source":"AltDirectorySeparatorChar "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"ch != VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ch"],"Extras":[]},"Source":"ch "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["VolumeSeparatorChar"],"Extras":[]},"Source":"VolumeSeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path1 + DirectorySeparatorCharAsString + path2"],"Extras":[]},"Source":"                return path1 + DirectorySeparatorCharAsString + path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 + DirectorySeparatorCharAsString + path2"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 + DirectorySeparatorCharAsString "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorCharAsString"],"Extras":[]},"Source":"DirectorySeparatorCharAsString "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path1 + path2"],"Extras":[]},"Source":"            return path1 + path2;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1 + path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["GetFileName","ReadOnlySpan<char>"],"Extras":["public static"]},"Source":"#endregion\n\n#region Copied from corefx\n\n        public static ReadOnlySpan<char> GetFileName(ReadOnlySpan<char> path)\n        {\n            int root = GetPathRoot(new string (path)).Length;\n\n            // We don't want to cut off \"C:\\file.txt:stream\" (i.e. should be \"file.txt:stream\")\n            // but we *do* want \"C:Foo\" => \"Foo\". This necessitates checking for the root.\n\n            for (int i = path.Length; --i >= 0;)\n            {\n                if (i < root || IsDirectorySeparator(path["},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> path)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["root","int"],"Extras":[]},"Source":"            int root = GetPathRoot(new string (path)).Length;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:root"],"Extras":[]},"Source":"            int root = GetPathRoot(new string (path)).Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"            int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["root"],"Extras":[]},"Source":"root = GetPathRoot(new string (path)).Length"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["GetPathRoot(new string (path)).Length"],"Extras":[]},"Source":"= GetPathRoot(new string (path)).Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"GetPathRoot(new string (path)).Length"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["GetPathRoot"],"Extras":[]},"Source":"GetPathRoot(new string (path))"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetPathRoot"],"Extras":[]},"Source":"GetPathRoot"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["new string (path)"],"Extras":[]},"Source":"(new string (path))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["new string (path)"],"Extras":[]},"Source":"new string (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["string"],"Extras":[]},"Source":"new string (path)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path"],"Extras":[]},"Source":"(path)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"ForStatement","Info":null,"Source":"\n            // We don't want to cut off \"C:\\file.txt:stream\" (i.e. should be \"file.txt:stream\")\n            // but we *do* want \"C:Foo\" => \"Foo\". This necessitates checking for the root.\n\n            for (int i = path.Length; --i >= 0;)\n            {\n                if (i < root || IsDirectorySeparator(path[i]))\n                    return path.Slice(i + 1, path.Length - i - 1);\n            }\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:i"],"Extras":[]},"Source":"int i = path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["i"],"Extras":[]},"Source":"i = path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path.Length"],"Extras":[]},"Source":"= path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"--i >= 0"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"--i "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["i < root || IsDirectorySeparator(path[i])","return path.Slice(i + 1, path.Length - i - 1);"],"Extras":[]},"Source":"                if (i < root || IsDirectorySeparator(path[i]))\n                    return path.Slice(i + 1, path.Length - i - 1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i < root || IsDirectorySeparator(path[i])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i < root "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["root"],"Extras":[]},"Source":"root "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator(path[i])"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path[i]"],"Extras":[]},"Source":"(path[i])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path[i]"],"Extras":[]},"Source":"path[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"path[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[i]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path.Slice(i + 1, path.Length - i - 1)"],"Extras":[]},"Source":"                    return path.Slice(i + 1, path.Length - i - 1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path.Slice"],"Extras":[]},"Source":"path.Slice(i + 1, path.Length - i - 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["i + 1, path.Length - i - 1"],"Extras":[]},"Source":"(i + 1, path.Length - i - 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["i + 1"],"Extras":[]},"Source":"i + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"i + 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path.Length - i - 1"],"Extras":[]},"Source":"path.Length - i - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length - i - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path.Length - i "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["i"],"Extras":[]},"Source":"i "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["path"],"Extras":[]},"Source":"\n            return path;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path"],"Extras":[]},"Source":"path"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["Join","string"],"Extras":["public static"]},"Source":"\n\t\tpublic static string Join(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2)\n\t\t{\n\t\t\tif (path1.Length == 0)\n\t\t\t\treturn new string(path2);\n\t\t\tif (path2.Length == 0)\n\t\t\t\treturn new string(path1);\n\n\t\t\treturn JoinInternal(path1, path2);\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path1","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path1"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path2","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path2"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1.Length == 0","return new string(path2);"],"Extras":[]},"Source":"\t\t\tif (path1.Length == 0)\n\t\t\t\treturn new string(path2);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["new string(path2)"],"Extras":[]},"Source":"\t\t\t\treturn new string(path2);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["string"],"Extras":[]},"Source":"new string(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2"],"Extras":[]},"Source":"(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2.Length == 0","return new string(path1);"],"Extras":[]},"Source":"\t\t\tif (path2.Length == 0)\n\t\t\t\treturn new string(path1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["new string(path1)"],"Extras":[]},"Source":"\t\t\t\treturn new string(path1);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["string"],"Extras":[]},"Source":"new string(path1)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1"],"Extras":[]},"Source":"(path1)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["JoinInternal(path1, path2)"],"Extras":[]},"Source":"\n\t\t\treturn JoinInternal(path1, path2);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["JoinInternal"],"Extras":[]},"Source":"JoinInternal(path1, path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["JoinInternal"],"Extras":[]},"Source":"JoinInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1, path2"],"Extras":[]},"Source":"(path1, path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["Join","string"],"Extras":["public static"]},"Source":"\n\t\tpublic static string Join(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2, ReadOnlySpan<char> path3)\n\t\t{\n\t\t\tif (path1.Length == 0)\n\t\t\t\treturn Join(path2, path3);\n\n\t\t\tif (path2.Length == 0)\n\t\t\t\treturn Join(path1, path3);\n\n\t\t\tif (path3.Length == 0)\n\t\t\t\treturn Join(path1, path2);\n\n\t\t\treturn JoinInternal(path1, path2, path3);\n\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2, ReadOnlySpan<char> path3)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path1","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path1"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path2","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path2"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path3","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path3"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1.Length == 0","return Join(path2, path3);"],"Extras":[]},"Source":"\t\t\tif (path1.Length == 0)\n\t\t\t\treturn Join(path2, path3);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["Join(path2, path3)"],"Extras":[]},"Source":"\t\t\t\treturn Join(path2, path3);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Join"],"Extras":[]},"Source":"Join(path2, path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Join"],"Extras":[]},"Source":"Join"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2, path3"],"Extras":[]},"Source":"(path2, path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2.Length == 0","return Join(path1, path3);"],"Extras":[]},"Source":"\n\t\t\tif (path2.Length == 0)\n\t\t\t\treturn Join(path1, path3);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["Join(path1, path3)"],"Extras":[]},"Source":"\t\t\t\treturn Join(path1, path3);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Join"],"Extras":[]},"Source":"Join(path1, path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Join"],"Extras":[]},"Source":"Join"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1, path3"],"Extras":[]},"Source":"(path1, path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path3.Length == 0","return Join(path1, path2);"],"Extras":[]},"Source":"\n\t\t\tif (path3.Length == 0)\n\t\t\t\treturn Join(path1, path2);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path3.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path3.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["Join(path1, path2)"],"Extras":[]},"Source":"\t\t\t\treturn Join(path1, path2);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Join"],"Extras":[]},"Source":"Join(path1, path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Join"],"Extras":[]},"Source":"Join"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1, path2"],"Extras":[]},"Source":"(path1, path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["JoinInternal(path1, path2, path3)"],"Extras":[]},"Source":"\n\t\t\treturn JoinInternal(path1, path2, path3);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["JoinInternal"],"Extras":[]},"Source":"JoinInternal(path1, path2, path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["JoinInternal"],"Extras":[]},"Source":"JoinInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1, path2, path3"],"Extras":[]},"Source":"(path1, path2, path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","MethodDeclaration"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["TryJoin","bool"],"Extras":["public static"]},"Source":"\n\t\tpublic static bool TryJoin(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2, Span<char> destination, out int charsWritten)\n\t\t{\n\t\t\tcharsWritten = 0;\n\t\t\tif (path1.Length == 0 && path2.Length == 0)\n\t\t\t\treturn true;\n\n\t\t\tif (path1.Length == 0 || path2.Length == 0)\n\t\t\t{\n\t\t\t\tref ReadOnlySpan<char> pathToUse = ref path1.Length == 0 ? ref path2 : ref path1;\n\t\t\t\tif (destination.Length < pathToUse.Length)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tpathToUse.CopyTo(destination);\n\t\t\t\tcharsWritten = pathToUse.L"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2, Span<char> destination, out int charsWritten)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path1","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path1"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path2","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path2"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["destination","Span<char> "],"Extras":[]},"Source":"Span<char> destination"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["charsWritten","int "],"Extras":["out"]},"Source":"out int charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tcharsWritten = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["charsWritten","=","0"],"Extras":[]},"Source":"\t\t\tcharsWritten = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"\t\t\tcharsWritten "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1.Length == 0 && path2.Length == 0","return true;"],"Extras":[]},"Source":"\t\t\tif (path1.Length == 0 && path2.Length == 0)\n\t\t\t\treturn true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0 && path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["true"],"Extras":[]},"Source":"\t\t\t\treturn true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1.Length == 0 || path2.Length == 0","{\n\t\t\t\tref ReadOnlySpan<char> pathToUse = ref path1.Length == 0 ? ref path2 : ref path1;\n\t\t\t\tif (destination.Length < pathToUse.Length)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tpathToUse.CopyTo(destination);\n\t\t\t\tcharsWritten = pathToUse.Length;\n\t\t\t\treturn true;\n\t\t\t}"],"Extras":[]},"Source":"\n\t\t\tif (path1.Length == 0 || path2.Length == 0)\n\t\t\t{\n\t\t\t\tref ReadOnlySpan<char> pathToUse = ref path1.Length == 0 ? ref path2 : ref path1;\n\t\t\t\tif (destination.Length < pathToUse.Length)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tpathToUse.CopyTo(destination);\n\t\t\t\tcharsWritten = pathToUse.Length;\n\t\t\t\treturn true;\n\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0 || path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["pathToUse","ref ReadOnlySpan<char>"],"Extras":[]},"Source":"\t\t\t\tref ReadOnlySpan<char> pathToUse = ref path1.Length == 0 ? ref path2 : ref path1;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:ref ReadOnlySpan<char>","name:pathToUse"],"Extras":[]},"Source":"\t\t\t\tref ReadOnlySpan<char> pathToUse = ref path1.Length == 0 ? ref path2 : ref path1"},{"Kind":0,"KindStr":"Decl","Declaration":"RefType","Info":null,"Source":"\t\t\t\tref ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["pathToUse"],"Extras":[]},"Source":"pathToUse = ref path1.Length == 0 ? ref path2 : ref path1"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["ref path1.Length == 0 ? ref path2 : ref path1"],"Extras":[]},"Source":"= ref path1.Length == 0 ? ref path2 : ref path1"},{"Kind":0,"KindStr":"Decl","Declaration":"RefExpression","Info":null,"Source":"ref path1.Length == 0 ? ref path2 : ref path1"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"path1.Length == 0 ? ref path2 : ref path1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"RefExpression","Info":null,"Source":"ref path2 "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2 "},{"Kind":0,"KindStr":"Decl","Declaration":"RefExpression","Info":null,"Source":"ref path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["destination.Length < pathToUse.Length","{\n\t\t\t\t\treturn false;\n\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\tif (destination.Length < pathToUse.Length)\n\t\t\t\t{\n\t\t\t\t\treturn false;\n\t\t\t\t}\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length < pathToUse.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"pathToUse.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["pathToUse"],"Extras":[]},"Source":"pathToUse"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\t\tpathToUse.CopyTo(destination);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["pathToUse.CopyTo"],"Extras":[]},"Source":"\n\t\t\t\tpathToUse.CopyTo(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\n\t\t\t\tpathToUse.CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["pathToUse"],"Extras":[]},"Source":"\n\t\t\t\tpathToUse"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination"],"Extras":[]},"Source":"(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tcharsWritten = pathToUse.Length;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["charsWritten","=","pathToUse.Length"],"Extras":[]},"Source":"\t\t\t\tcharsWritten = pathToUse.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"\t\t\t\tcharsWritten "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"pathToUse.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["pathToUse"],"Extras":[]},"Source":"pathToUse"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["true"],"Extras":[]},"Source":"\t\t\t\treturn true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["needsSeparator","bool"],"Extras":[]},"Source":"\n\t\t\tbool needsSeparator = !(PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:needsSeparator"],"Extras":[]},"Source":"\n\t\t\tbool needsSeparator = !(PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2))"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\n\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["needsSeparator"],"Extras":[]},"Source":"needsSeparator = !(PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2))"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["!(PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2))"],"Extras":[]},"Source":"= !(PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2))"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!(PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2))"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2))"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.EndsInDirectorySeparator"],"Extras":[]},"Source":"PathInternal.EndsInDirectorySeparator(path1) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.EndsInDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["EndsInDirectorySeparator"],"Extras":[]},"Source":"EndsInDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1"],"Extras":[]},"Source":"(path1) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.StartsWithDirectorySeparator"],"Extras":[]},"Source":"PathInternal.StartsWithDirectorySeparator(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.StartsWithDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["StartsWithDirectorySeparator"],"Extras":[]},"Source":"StartsWithDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2"],"Extras":[]},"Source":"(path2)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["charsNeeded","int"],"Extras":[]},"Source":"\t\t\tint charsNeeded = path1.Length + path2.Length + (needsSeparator ? 1 : 0);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:charsNeeded"],"Extras":[]},"Source":"\t\t\tint charsNeeded = path1.Length + path2.Length + (needsSeparator ? 1 : 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["charsNeeded"],"Extras":[]},"Source":"charsNeeded = path1.Length + path2.Length + (needsSeparator ? 1 : 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path1.Length + path2.Length + (needsSeparator ? 1 : 0)"],"Extras":[]},"Source":"= path1.Length + path2.Length + (needsSeparator ? 1 : 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length + path2.Length + (needsSeparator ? 1 : 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length + path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(needsSeparator ? 1 : 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"needsSeparator ? 1 : 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["needsSeparator"],"Extras":[]},"Source":"needsSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["destination.Length < charsNeeded","return false;"],"Extras":[]},"Source":"\t\t\tif (destination.Length < charsNeeded)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length < charsNeeded"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsNeeded"],"Extras":[]},"Source":"charsNeeded"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tpath1.CopyTo(destination);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path1.CopyTo"],"Extras":[]},"Source":"\n\t\t\tpath1.CopyTo(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\n\t\t\tpath1.CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"\n\t\t\tpath1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination"],"Extras":[]},"Source":"(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["needsSeparator","destination[path1.Length] = DirectorySeparatorChar;"],"Extras":[]},"Source":"\t\t\tif (needsSeparator)\n\t\t\t\tdestination[path1.Length] = DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["needsSeparator"],"Extras":[]},"Source":"needsSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tdestination[path1.Length] = DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["destination[path1.Length]","=","DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\tdestination[path1.Length] = DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\tdestination[path1.Length] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"\t\t\t\tdestination"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[path1.Length] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1.Length"],"Extras":[]},"Source":"path1.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tpath2.CopyTo(destination.Slice(path1.Length + (needsSeparator ? 1 : 0)));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path2.CopyTo"],"Extras":[]},"Source":"\n\t\t\tpath2.CopyTo(destination.Slice(path1.Length + (needsSeparator ? 1 : 0)))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\n\t\t\tpath2.CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"\n\t\t\tpath2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Slice(path1.Length + (needsSeparator ? 1 : 0))"],"Extras":[]},"Source":"(destination.Slice(path1.Length + (needsSeparator ? 1 : 0)))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Slice(path1.Length + (needsSeparator ? 1 : 0))"],"Extras":[]},"Source":"destination.Slice(path1.Length + (needsSeparator ? 1 : 0))"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["destination.Slice"],"Extras":[]},"Source":"destination.Slice(path1.Length + (needsSeparator ? 1 : 0))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1.Length + (needsSeparator ? 1 : 0)"],"Extras":[]},"Source":"(path1.Length + (needsSeparator ? 1 : 0))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1.Length + (needsSeparator ? 1 : 0)"],"Extras":[]},"Source":"path1.Length + (needsSeparator ? 1 : 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length + (needsSeparator ? 1 : 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(needsSeparator ? 1 : 0)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"needsSeparator ? 1 : 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["needsSeparator"],"Extras":[]},"Source":"needsSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tcharsWritten = charsNeeded;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["charsWritten","=","charsNeeded"],"Extras":[]},"Source":"\n\t\t\tcharsWritten = charsNeeded"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"\n\t\t\tcharsWritten "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsNeeded"],"Extras":[]},"Source":"charsNeeded"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["true"],"Extras":[]},"Source":"\t\t\treturn true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["TryJoin","bool"],"Extras":["public static"]},"Source":"\n\t\tpublic static bool TryJoin(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2, ReadOnlySpan<char> path3, Span<char> destination, out int charsWritten)\n\t\t{\n\t\t\tcharsWritten = 0;\n\t\t\tif (path1.Length == 0 && path2.Length == 0 && path3.Length == 0)\n\t\t\t\treturn true;\n\n\t\t\tif (path1.Length == 0)\n\t\t\t\treturn TryJoin(path2, path3, destination, out charsWritten);\n\t\t\tif (path2.Length == 0)\n\t\t\t\treturn TryJoin(path1, path3, destination, out charsWritten);\n\t\t\tif (path3.Length == 0)\n\t\t\t\treturn TryJoin(path1, p"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"bool "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> path1, ReadOnlySpan<char> path2, ReadOnlySpan<char> path3, Span<char> destination, out int charsWritten)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path1","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path1"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path2","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path2"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["path3","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> path3"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["destination","Span<char> "],"Extras":[]},"Source":"Span<char> destination"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["charsWritten","int "],"Extras":["out"]},"Source":"out int charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"int "},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tcharsWritten = 0;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["charsWritten","=","0"],"Extras":[]},"Source":"\t\t\tcharsWritten = 0"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"\t\t\tcharsWritten "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1.Length == 0 && path2.Length == 0 && path3.Length == 0","return true;"],"Extras":[]},"Source":"\t\t\tif (path1.Length == 0 && path2.Length == 0 && path3.Length == 0)\n\t\t\t\treturn true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0 && path2.Length == 0 && path3.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0 && path2.Length == 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.Length == 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path3.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path3.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["true"],"Extras":[]},"Source":"\t\t\t\treturn true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path1.Length == 0","return TryJoin(path2, path3, destination, out charsWritten);"],"Extras":[]},"Source":"\n\t\t\tif (path1.Length == 0)\n\t\t\t\treturn TryJoin(path2, path3, destination, out charsWritten);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["TryJoin(path2, path3, destination, out charsWritten)"],"Extras":[]},"Source":"\t\t\t\treturn TryJoin(path2, path3, destination, out charsWritten);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["TryJoin"],"Extras":[]},"Source":"TryJoin(path2, path3, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["TryJoin"],"Extras":[]},"Source":"TryJoin"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2, path3, destination, out charsWritten"],"Extras":[]},"Source":"(path2, path3, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"out charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path2.Length == 0","return TryJoin(path1, path3, destination, out charsWritten);"],"Extras":[]},"Source":"\t\t\tif (path2.Length == 0)\n\t\t\t\treturn TryJoin(path1, path3, destination, out charsWritten);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path2.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["TryJoin(path1, path3, destination, out charsWritten)"],"Extras":[]},"Source":"\t\t\t\treturn TryJoin(path1, path3, destination, out charsWritten);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["TryJoin"],"Extras":[]},"Source":"TryJoin(path1, path3, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["TryJoin"],"Extras":[]},"Source":"TryJoin"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1, path3, destination, out charsWritten"],"Extras":[]},"Source":"(path1, path3, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"out charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["path3.Length == 0","return TryJoin(path1, path2, destination, out charsWritten);"],"Extras":[]},"Source":"\t\t\tif (path3.Length == 0)\n\t\t\t\treturn TryJoin(path1, path2, destination, out charsWritten);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path3.Length == 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path3.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["TryJoin(path1, path2, destination, out charsWritten)"],"Extras":[]},"Source":"\t\t\t\treturn TryJoin(path1, path2, destination, out charsWritten);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["TryJoin"],"Extras":[]},"Source":"TryJoin(path1, path2, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["TryJoin"],"Extras":[]},"Source":"TryJoin"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1, path2, destination, out charsWritten"],"Extras":[]},"Source":"(path1, path2, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"out charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["neededSeparators","int"],"Extras":[]},"Source":"\n\t\t\tint neededSeparators = PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2) ? 0 : 1;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:neededSeparators"],"Extras":[]},"Source":"\n\t\t\tint neededSeparators = PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2) ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["neededSeparators"],"Extras":[]},"Source":"neededSeparators = PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2) ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2) ? 0 : 1"],"Extras":[]},"Source":"= PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2) ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2) ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.EndsInDirectorySeparator(path1) || PathInternal.StartsWithDirectorySeparator(path2) "},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.EndsInDirectorySeparator"],"Extras":[]},"Source":"PathInternal.EndsInDirectorySeparator(path1) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.EndsInDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["EndsInDirectorySeparator"],"Extras":[]},"Source":"EndsInDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1"],"Extras":[]},"Source":"(path1) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.StartsWithDirectorySeparator"],"Extras":[]},"Source":"PathInternal.StartsWithDirectorySeparator(path2) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.StartsWithDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["StartsWithDirectorySeparator"],"Extras":[]},"Source":"StartsWithDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2"],"Extras":[]},"Source":"(path2) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["needsSecondSeparator","bool"],"Extras":[]},"Source":"\t\t\tbool needsSecondSeparator = !(PathInternal.EndsInDirectorySeparator(path2) || PathInternal.StartsWithDirectorySeparator(path3));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:needsSecondSeparator"],"Extras":[]},"Source":"\t\t\tbool needsSecondSeparator = !(PathInternal.EndsInDirectorySeparator(path2) || PathInternal.StartsWithDirectorySeparator(path3))"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["needsSecondSeparator"],"Extras":[]},"Source":"needsSecondSeparator = !(PathInternal.EndsInDirectorySeparator(path2) || PathInternal.StartsWithDirectorySeparator(path3))"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["!(PathInternal.EndsInDirectorySeparator(path2) || PathInternal.StartsWithDirectorySeparator(path3))"],"Extras":[]},"Source":"= !(PathInternal.EndsInDirectorySeparator(path2) || PathInternal.StartsWithDirectorySeparator(path3))"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!(PathInternal.EndsInDirectorySeparator(path2) || PathInternal.StartsWithDirectorySeparator(path3))"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(PathInternal.EndsInDirectorySeparator(path2) || PathInternal.StartsWithDirectorySeparator(path3))"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.EndsInDirectorySeparator(path2) || PathInternal.StartsWithDirectorySeparator(path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.EndsInDirectorySeparator"],"Extras":[]},"Source":"PathInternal.EndsInDirectorySeparator(path2) "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.EndsInDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["EndsInDirectorySeparator"],"Extras":[]},"Source":"EndsInDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path2"],"Extras":[]},"Source":"(path2) "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.StartsWithDirectorySeparator"],"Extras":[]},"Source":"PathInternal.StartsWithDirectorySeparator(path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.StartsWithDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["StartsWithDirectorySeparator"],"Extras":[]},"Source":"StartsWithDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path3"],"Extras":[]},"Source":"(path3)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["needsSecondSeparator","neededSeparators++;"],"Extras":[]},"Source":"\t\t\tif (needsSecondSeparator)\n\t\t\t\tneededSeparators++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["needsSecondSeparator"],"Extras":[]},"Source":"needsSecondSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tneededSeparators++;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"\t\t\t\tneededSeparators++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["neededSeparators"],"Extras":[]},"Source":"\t\t\t\tneededSeparators"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["charsNeeded","int"],"Extras":[]},"Source":"\n\t\t\tint charsNeeded = path1.Length + path2.Length + path3.Length + neededSeparators;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:int","name:charsNeeded"],"Extras":[]},"Source":"\n\t\t\tint charsNeeded = path1.Length + path2.Length + path3.Length + neededSeparators"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["int"],"Extras":[]},"Source":"\n\t\t\tint "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["charsNeeded"],"Extras":[]},"Source":"charsNeeded = path1.Length + path2.Length + path3.Length + neededSeparators"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["path1.Length + path2.Length + path3.Length + neededSeparators"],"Extras":[]},"Source":"= path1.Length + path2.Length + path3.Length + neededSeparators"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length + path2.Length + path3.Length + neededSeparators"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length + path2.Length + path3.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"path1.Length + path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path1.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path2.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path3.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["neededSeparators"],"Extras":[]},"Source":"neededSeparators"},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["destination.Length < charsNeeded","return false;"],"Extras":[]},"Source":"\t\t\tif (destination.Length < charsNeeded)\n\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length < charsNeeded"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsNeeded"],"Extras":[]},"Source":"charsNeeded"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["false"],"Extras":[]},"Source":"\t\t\t\treturn false;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["false"],"Extras":[]},"Source":"false"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["result","bool"],"Extras":[]},"Source":"\n\t\t\tbool result = TryJoin(path1, path2, destination, out charsWritten);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:result"],"Extras":[]},"Source":"\n\t\t\tbool result = TryJoin(path1, path2, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\n\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["result"],"Extras":[]},"Source":"result = TryJoin(path1, path2, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["TryJoin(path1, path2, destination, out charsWritten)"],"Extras":[]},"Source":"= TryJoin(path1, path2, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["TryJoin"],"Extras":[]},"Source":"TryJoin(path1, path2, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["TryJoin"],"Extras":[]},"Source":"TryJoin"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["path1, path2, destination, out charsWritten"],"Extras":[]},"Source":"(path1, path2, destination, out charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path1"],"Extras":[]},"Source":"path1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path2"],"Extras":[]},"Source":"path2"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"out charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tDebug.Assert(result, \"should never fail joining first two paths\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Debug.Assert"],"Extras":[]},"Source":"\t\t\tDebug.Assert(result, \"should never fail joining first two paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\tDebug.Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Debug"],"Extras":[]},"Source":"\t\t\tDebug"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Assert"],"Extras":[]},"Source":"Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["result, \"should never fail joining first two paths\""],"Extras":[]},"Source":"(result, \"should never fail joining first two paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["result"],"Extras":[]},"Source":"result"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["result"],"Extras":[]},"Source":"result"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"should never fail joining first two paths\""],"Extras":[]},"Source":"\"should never fail joining first two paths\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"should never fail joining first two paths\""],"Extras":[]},"Source":"\"should never fail joining first two paths\""},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["needsSecondSeparator","destination[charsWritten++] = DirectorySeparatorChar;"],"Extras":[]},"Source":"\n\t\t\tif (needsSecondSeparator)\n\t\t\t\tdestination[charsWritten++] = DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["needsSecondSeparator"],"Extras":[]},"Source":"needsSecondSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\tdestination[charsWritten++] = DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["destination[charsWritten++]","=","DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\tdestination[charsWritten++] = DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\tdestination[charsWritten++] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"\t\t\t\tdestination"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[charsWritten++] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["charsWritten++"],"Extras":[]},"Source":"charsWritten++"},{"Kind":0,"KindStr":"Decl","Declaration":"PostfixUnaryExpression","Info":null,"Source":"charsWritten++"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\n\t\t\tpath3.CopyTo(destination.Slice(charsWritten));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["path3.CopyTo"],"Extras":[]},"Source":"\n\t\t\tpath3.CopyTo(destination.Slice(charsWritten))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\n\t\t\tpath3.CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"\n\t\t\tpath3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Slice(charsWritten)"],"Extras":[]},"Source":"(destination.Slice(charsWritten))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Slice(charsWritten)"],"Extras":[]},"Source":"destination.Slice(charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["destination.Slice"],"Extras":[]},"Source":"destination.Slice(charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"(charsWritten)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"charsWritten"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"charsWritten"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tcharsWritten += path3.Length;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["charsWritten","+=","path3.Length"],"Extras":[]},"Source":"\t\t\tcharsWritten += path3.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["charsWritten"],"Extras":[]},"Source":"\t\t\tcharsWritten "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"path3.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["path3"],"Extras":[]},"Source":"path3"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["true"],"Extras":[]},"Source":"\n\t\t\treturn true;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["true"],"Extras":[]},"Source":"true"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["JoinInternal","string"],"Extras":["private static unsafe"]},"Source":"\n\n\t\tprivate static unsafe string JoinInternal(ReadOnlySpan<char> first, ReadOnlySpan<char> second)\n\t\t{\n\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0, \"should have dealt with empty paths\");\n\n\t\t\tbool hasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0]);\n\n\t\t\tfixed (char* f = &MemoryMarshal.GetReference(first), s = &MemoryMarshal.GetReference(second))\n\t\t\t{\n\t\t\t\treturn string.Create(\n\t\t\t\t\tfirst.Length + second.Length + (h"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> first, ReadOnlySpan<char> second)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["first","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> first"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["second","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> second"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0, \"should have dealt with empty paths\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Debug.Assert"],"Extras":[]},"Source":"\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0, \"should have dealt with empty paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\tDebug.Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Debug"],"Extras":[]},"Source":"\t\t\tDebug"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Assert"],"Extras":[]},"Source":"Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first.Length > 0 && second.Length > 0, \"should have dealt with empty paths\""],"Extras":[]},"Source":"(first.Length > 0 && second.Length > 0, \"should have dealt with empty paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length > 0 && second.Length > 0"],"Extras":[]},"Source":"first.Length > 0 && second.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 && second.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"second.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"should have dealt with empty paths\""],"Extras":[]},"Source":"\"should have dealt with empty paths\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"should have dealt with empty paths\""],"Extras":[]},"Source":"\"should have dealt with empty paths\""},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["hasSeparator","bool"],"Extras":[]},"Source":"\n\t\t\tbool hasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0]);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:hasSeparator"],"Extras":[]},"Source":"\n\t\t\tbool hasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\n\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["hasSeparator"],"Extras":[]},"Source":"hasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"],"Extras":[]},"Source":"= PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(first[first.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first[first.Length - 1]"],"Extras":[]},"Source":"(first[first.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first[first.Length - 1]"],"Extras":[]},"Source":"first[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"first[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length - 1"],"Extras":[]},"Source":"first.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["second[0]"],"Extras":[]},"Source":"(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second[0]"],"Extras":[]},"Source":"second[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"second[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"FixedStatement","Info":null,"Source":"\n\t\t\tfixed (char* f = &MemoryMarshal.GetReference(first), s = &MemoryMarshal.GetReference(second))\n\t\t\t{\n\t\t\t\treturn string.Create(\n\t\t\t\t\tfirst.Length + second.Length + (hasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLengt"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char*","name:f"],"Extras":[]},"Source":"char* f = &MemoryMarshal.GetReference(first), s = &MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char* "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["f"],"Extras":[]},"Source":"f = &MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(first)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first"],"Extras":[]},"Source":"(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["s"],"Extras":[]},"Source":"s = &MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(second)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["second"],"Extras":[]},"Source":"(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["string.Create(\n\t\t\t\t\tfirst.Length + second.Length + (hasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1)));\n\t\t\t\t\t})"],"Extras":[]},"Source":"\t\t\t\treturn string.Create(\n\t\t\t\t\tfirst.Length + second.Length + (hasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["string.Create"],"Extras":[]},"Source":"string.Create(\n\t\t\t\t\tfirst.Length + second.Length + (hasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(des"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"string.Create"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Create"],"Extras":[]},"Source":"Create"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first.Length + second.Length + (hasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1)));\n\t\t\t\t\t}"],"Extras":[]},"Source":"(\n\t\t\t\t\tfirst.Length + second.Length + (hasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slic"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\tfirst.Length + second.Length + (hasSeparator ? 0 : 1)"],"Extras":[]},"Source":"\t\t\t\t\tfirst.Length + second.Length + (hasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + (hasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"\t\t\t\t\tfirst"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(hasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"hasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["hasSeparator"],"Extras":[]},"Source":"hasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator)"],"Extras":[]},"Source":"\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator)"},{"Kind":0,"KindStr":"Decl","Declaration":"TupleExpression","Info":null,"Source":"\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length, HasSeparator: hasSeparator)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)f"],"Extras":[]},"Source":"First: (IntPtr)f"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"First: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["First"],"Extras":[]},"Source":"First"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)f"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["f"],"Extras":[]},"Source":"f"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length"],"Extras":[]},"Source":"FirstLength: first.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"FirstLength: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)s"],"Extras":[]},"Source":"Second: (IntPtr)s"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"Second: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Second"],"Extras":[]},"Source":"Second"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second.Length"],"Extras":[]},"Source":"SecondLength: second.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"SecondLength: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecondLength"],"Extras":[]},"Source":"SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["hasSeparator"],"Extras":[]},"Source":"HasSeparator: hasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"HasSeparator: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["HasSeparator"],"Extras":[]},"Source":"HasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["hasSeparator"],"Extras":[]},"Source":"hasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1)));\n\t\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1)));\n\t\t\t\t\t}"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedLambdaExpression","Info":null,"Source":"\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1)));\n\t\t\t\t\t}"},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"\t\t\t\t\t(destination, state) "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["destination",null],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["state",null],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.First, state.FirstLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.First, state.FirstLength"],"Extras":[]},"Source":"((char*)state.First, state.FirstLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.First"],"Extras":[]},"Source":"(char*)state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["First"],"Extras":[]},"Source":"First"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength"],"Extras":[]},"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination"],"Extras":[]},"Source":"(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!state.HasSeparator","destination[state.FirstLength] = PathInternal.DirectorySeparatorChar;"],"Extras":[]},"Source":"\t\t\t\t\t\tif (!state.HasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!state.HasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.HasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["HasSeparator"],"Extras":[]},"Source":"HasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["destination[state.FirstLength]","=","PathInternal.DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[state.FirstLength] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength"],"Extras":[]},"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1)));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.Second, state.SecondLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1)))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.Second, state.SecondLength"],"Extras":[]},"Source":"((char*)state.Second, state.SecondLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.Second"],"Extras":[]},"Source":"(char*)state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Second"],"Extras":[]},"Source":"Second"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.SecondLength"],"Extras":[]},"Source":"state.SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecondLength"],"Extras":[]},"Source":"SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1))"],"Extras":[]},"Source":"(destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1)))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1))"],"Extras":[]},"Source":"destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["destination.Slice"],"Extras":[]},"Source":"destination.Slice(state.FirstLength + (state.HasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["state.FirstLength + (state.HasSeparator ? 0 : 1)"],"Extras":[]},"Source":"(state.FirstLength + (state.HasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength + (state.HasSeparator ? 0 : 1)"],"Extras":[]},"Source":"state.FirstLength + (state.HasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"state.FirstLength + (state.HasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(state.HasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"state.HasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.HasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["HasSeparator"],"Extras":[]},"Source":"HasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["JoinInternal","string"],"Extras":["private static unsafe"]},"Source":"\n#if !__MonoCS__\n\n\t\tprivate static unsafe string JoinInternal(ReadOnlySpan<char> first, ReadOnlySpan<char> second, ReadOnlySpan<char> third)\n\t\t{\n\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0 && third.Length > 0, \"should have dealt with empty paths\");\n\n\t\t\tbool firstHasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0]);\n\t\t\tbool thirdHasSeparator = PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| Path"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> first, ReadOnlySpan<char> second, ReadOnlySpan<char> third)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["first","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> first"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["second","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> second"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["third","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> third"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0 && third.Length > 0, \"should have dealt with empty paths\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Debug.Assert"],"Extras":[]},"Source":"\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0 && third.Length > 0, \"should have dealt with empty paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\tDebug.Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Debug"],"Extras":[]},"Source":"\t\t\tDebug"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Assert"],"Extras":[]},"Source":"Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first.Length > 0 && second.Length > 0 && third.Length > 0, \"should have dealt with empty paths\""],"Extras":[]},"Source":"(first.Length > 0 && second.Length > 0 && third.Length > 0, \"should have dealt with empty paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length > 0 && second.Length > 0 && third.Length > 0"],"Extras":[]},"Source":"first.Length > 0 && second.Length > 0 && third.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 && second.Length > 0 && third.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 && second.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"second.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"third.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"third.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"should have dealt with empty paths\""],"Extras":[]},"Source":"\"should have dealt with empty paths\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"should have dealt with empty paths\""],"Extras":[]},"Source":"\"should have dealt with empty paths\""},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["firstHasSeparator","bool"],"Extras":[]},"Source":"\n\t\t\tbool firstHasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0]);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:firstHasSeparator"],"Extras":[]},"Source":"\n\t\t\tbool firstHasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\n\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["firstHasSeparator"],"Extras":[]},"Source":"firstHasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"],"Extras":[]},"Source":"= PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(first[first.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first[first.Length - 1]"],"Extras":[]},"Source":"(first[first.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first[first.Length - 1]"],"Extras":[]},"Source":"first[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"first[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length - 1"],"Extras":[]},"Source":"first.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["second[0]"],"Extras":[]},"Source":"(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second[0]"],"Extras":[]},"Source":"second[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"second[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["thirdHasSeparator","bool"],"Extras":[]},"Source":"\t\t\tbool thirdHasSeparator = PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0]);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:thirdHasSeparator"],"Extras":[]},"Source":"\t\t\tbool thirdHasSeparator = PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["thirdHasSeparator"],"Extras":[]},"Source":"thirdHasSeparator = PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"],"Extras":[]},"Source":"= PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(second[second.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["second[second.Length - 1]"],"Extras":[]},"Source":"(second[second.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second[second.Length - 1]"],"Extras":[]},"Source":"second[second.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"second[second.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[second.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second.Length - 1"],"Extras":[]},"Source":"second.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"second.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["third[0]"],"Extras":[]},"Source":"(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["third[0]"],"Extras":[]},"Source":"third[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"third[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"FixedStatement","Info":null,"Source":"\n\t\t\tfixed (char* f = &MemoryMarshal.GetReference(first), s = &MemoryMarshal.GetReference(second), t = &MemoryMarshal.GetReference(third))\n\t\t\t{\n\t\t\t\treturn string.Create(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSepara"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char*","name:f"],"Extras":[]},"Source":"char* f = &MemoryMarshal.GetReference(first), s = &MemoryMarshal.GetReference(second), t = &MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char* "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["f"],"Extras":[]},"Source":"f = &MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(first)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first"],"Extras":[]},"Source":"(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["s"],"Extras":[]},"Source":"s = &MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(second)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["second"],"Extras":[]},"Source":"(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["t"],"Extras":[]},"Source":"t = &MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(third)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["third"],"Extras":[]},"Source":"(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["string.Create(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(destination.Length - state.ThirdLength));\n\t\t\t\t\t})"],"Extras":[]},"Source":"\t\t\t\treturn string.Create(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.Fir"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["string.Create"],"Extras":[]},"Source":"string.Create(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSepara"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"string.Create"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Create"],"Extras":[]},"Source":"Create"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(destination.Length - state.ThirdLength));\n\t\t\t\t\t}"],"Extras":[]},"Source":"(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\td"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length + (firstHasSeparator ? 0 : 1) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"\t\t\t\t\tfirst"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"third.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(firstHasSeparator ? 0 : 1) "},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"firstHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["firstHasSeparator"],"Extras":[]},"Source":"firstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(thirdHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"thirdHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["thirdHasSeparator"],"Extras":[]},"Source":"thirdHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator)"],"Extras":[]},"Source":"\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator)"},{"Kind":0,"KindStr":"Decl","Declaration":"TupleExpression","Info":null,"Source":"\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, FirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)f"],"Extras":[]},"Source":"First: (IntPtr)f"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"First: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["First"],"Extras":[]},"Source":"First"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)f"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["f"],"Extras":[]},"Source":"f"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length"],"Extras":[]},"Source":"FirstLength: first.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"FirstLength: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)s"],"Extras":[]},"Source":"Second: (IntPtr)s"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"Second: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Second"],"Extras":[]},"Source":"Second"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second.Length"],"Extras":[]},"Source":"SecondLength: second.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"SecondLength: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecondLength"],"Extras":[]},"Source":"SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)t"],"Extras":[]},"Source":"\t\t\t\t\t\tThird: (IntPtr)t"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"\t\t\t\t\t\tThird: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Third"],"Extras":[]},"Source":"\t\t\t\t\t\tThird"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)t"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["t"],"Extras":[]},"Source":"t"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["third.Length"],"Extras":[]},"Source":"ThirdLength: third.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"ThirdLength: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdLength"],"Extras":[]},"Source":"ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"third.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["firstHasSeparator"],"Extras":[]},"Source":"FirstHasSeparator: firstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"FirstHasSeparator: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstHasSeparator"],"Extras":[]},"Source":"FirstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["firstHasSeparator"],"Extras":[]},"Source":"firstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["thirdHasSeparator"],"Extras":[]},"Source":"ThirdHasSeparator: thirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"ThirdHasSeparator: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdHasSeparator"],"Extras":[]},"Source":"ThirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["thirdHasSeparator"],"Extras":[]},"Source":"thirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(destination.Length - state.ThirdLength));\n\t\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySep"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedLambdaExpression","Info":null,"Source":"\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySep"},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"\t\t\t\t\t(destination, state) "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["destination",null],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["state",null],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.First, state.FirstLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.First, state.FirstLength"],"Extras":[]},"Source":"((char*)state.First, state.FirstLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.First"],"Extras":[]},"Source":"(char*)state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["First"],"Extras":[]},"Source":"First"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength"],"Extras":[]},"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination"],"Extras":[]},"Source":"(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!state.FirstHasSeparator","destination[state.FirstLength] = PathInternal.DirectorySeparatorChar;"],"Extras":[]},"Source":"\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!state.FirstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstHasSeparator"],"Extras":[]},"Source":"FirstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["destination[state.FirstLength]","=","PathInternal.DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[state.FirstLength] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength"],"Extras":[]},"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.Second, state.SecondLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.Second, state.SecondLength"],"Extras":[]},"Source":"((char*)state.Second, state.SecondLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.Second"],"Extras":[]},"Source":"(char*)state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Second"],"Extras":[]},"Source":"Second"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.SecondLength"],"Extras":[]},"Source":"state.SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecondLength"],"Extras":[]},"Source":"SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"],"Extras":[]},"Source":"(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"],"Extras":[]},"Source":"destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["destination.Slice"],"Extras":[]},"Source":"destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["state.FirstLength + (state.FirstHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength + (state.FirstHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"state.FirstLength + (state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"state.FirstLength + (state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"state.FirstHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstHasSeparator"],"Extras":[]},"Source":"FirstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!state.ThirdHasSeparator","destination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySeparatorChar;"],"Extras":[]},"Source":"\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!state.ThirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.ThirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdHasSeparator"],"Extras":[]},"Source":"ThirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["destination[destination.Length - state.ThirdLength - 1]","=","PathInternal.DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] = PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\t\t\tdestination[destination.Length - state.ThirdLength - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[destination.Length - state.ThirdLength - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Length - state.ThirdLength - 1"],"Extras":[]},"Source":"destination.Length - state.ThirdLength - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length - state.ThirdLength - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length - state.ThirdLength "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.ThirdLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdLength"],"Extras":[]},"Source":"ThirdLength "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(destination.Length - state.ThirdLength));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.Third, state.ThirdLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(destination.Length - state.ThirdLength))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.Third, state.ThirdLength"],"Extras":[]},"Source":"((char*)state.Third, state.ThirdLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.Third"],"Extras":[]},"Source":"(char*)state.Third"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.Third"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.Third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Third"],"Extras":[]},"Source":"Third"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.ThirdLength"],"Extras":[]},"Source":"state.ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdLength"],"Extras":[]},"Source":"ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Slice(destination.Length - state.ThirdLength)"],"Extras":[]},"Source":"(destination.Slice(destination.Length - state.ThirdLength))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Slice(destination.Length - state.ThirdLength)"],"Extras":[]},"Source":"destination.Slice(destination.Length - state.ThirdLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["destination.Slice"],"Extras":[]},"Source":"destination.Slice(destination.Length - state.ThirdLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Length - state.ThirdLength"],"Extras":[]},"Source":"(destination.Length - state.ThirdLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Length - state.ThirdLength"],"Extras":[]},"Source":"destination.Length - state.ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length - state.ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdLength"],"Extras":[]},"Source":"ThirdLength"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["3"],"Extras":["MethodDeclaration"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"MethodDeclaration","Info":{"Essentials":["JoinInternal","string"],"Extras":["private static unsafe"]},"Source":"\n\t\tprivate static unsafe string JoinInternal(ReadOnlySpan<char> first, ReadOnlySpan<char> second, ReadOnlySpan<char> third, ReadOnlySpan<char> fourth)\n\t\t{\n\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0 && third.Length > 0 && fourth.Length > 0, \"should have dealt with empty paths\");\n\n\t\t\tbool firstHasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0]);\n\t\t\tbool thirdHasSeparator = PathInternal.IsDirectorySeparator(second["},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string "},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"(ReadOnlySpan<char> first, ReadOnlySpan<char> second, ReadOnlySpan<char> third, ReadOnlySpan<char> fourth)\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["first","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> first"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["second","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> second"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["third","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> third"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["fourth","ReadOnlySpan<char> "],"Extras":[]},"Source":"ReadOnlySpan<char> fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"ReadOnlySpan<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char> "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0 && third.Length > 0 && fourth.Length > 0, \"should have dealt with empty paths\");\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["Debug.Assert"],"Extras":[]},"Source":"\t\t\tDebug.Assert(first.Length > 0 && second.Length > 0 && third.Length > 0 && fourth.Length > 0, \"should have dealt with empty paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\tDebug.Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Debug"],"Extras":[]},"Source":"\t\t\tDebug"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Assert"],"Extras":[]},"Source":"Assert"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first.Length > 0 && second.Length > 0 && third.Length > 0 && fourth.Length > 0, \"should have dealt with empty paths\""],"Extras":[]},"Source":"(first.Length > 0 && second.Length > 0 && third.Length > 0 && fourth.Length > 0, \"should have dealt with empty paths\")"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length > 0 && second.Length > 0 && third.Length > 0 && fourth.Length > 0"],"Extras":[]},"Source":"first.Length > 0 && second.Length > 0 && third.Length > 0 && fourth.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 && second.Length > 0 && third.Length > 0 && fourth.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 && second.Length > 0 && third.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 && second.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"second.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"third.Length > 0 "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"third.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"fourth.Length > 0"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"fourth.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["fourth"],"Extras":[]},"Source":"fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\"should have dealt with empty paths\""],"Extras":[]},"Source":"\"should have dealt with empty paths\""},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["\"should have dealt with empty paths\""],"Extras":[]},"Source":"\"should have dealt with empty paths\""},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["firstHasSeparator","bool"],"Extras":[]},"Source":"\n\t\t\tbool firstHasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0]);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:firstHasSeparator"],"Extras":[]},"Source":"\n\t\t\tbool firstHasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\n\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["firstHasSeparator"],"Extras":[]},"Source":"firstHasSeparator = PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"],"Extras":[]},"Source":"= PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator(first[first.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(first[first.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first[first.Length - 1]"],"Extras":[]},"Source":"(first[first.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first[first.Length - 1]"],"Extras":[]},"Source":"first[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"first[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[first.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length - 1"],"Extras":[]},"Source":"first.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"first.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["second[0]"],"Extras":[]},"Source":"(second[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second[0]"],"Extras":[]},"Source":"second[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"second[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["thirdHasSeparator","bool"],"Extras":[]},"Source":"\t\t\tbool thirdHasSeparator = PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0]);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:thirdHasSeparator"],"Extras":[]},"Source":"\t\t\tbool thirdHasSeparator = PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["thirdHasSeparator"],"Extras":[]},"Source":"thirdHasSeparator = PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"],"Extras":[]},"Source":"= PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator(second[second.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(second[second.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["second[second.Length - 1]"],"Extras":[]},"Source":"(second[second.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second[second.Length - 1]"],"Extras":[]},"Source":"second[second.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"second[second.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[second.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second.Length - 1"],"Extras":[]},"Source":"second.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"second.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["third[0]"],"Extras":[]},"Source":"(third[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["third[0]"],"Extras":[]},"Source":"third[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"third[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LocalDeclarationStatement","Info":{"Essentials":["fourthHasSeparator","bool"],"Extras":[]},"Source":"\t\t\tbool fourthHasSeparator = PathInternal.IsDirectorySeparator(third[third.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(fourth[0]);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:bool","name:fourthHasSeparator"],"Extras":[]},"Source":"\t\t\tbool fourthHasSeparator = PathInternal.IsDirectorySeparator(third[third.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(fourth[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["bool"],"Extras":[]},"Source":"\t\t\tbool "},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["fourthHasSeparator"],"Extras":[]},"Source":"fourthHasSeparator = PathInternal.IsDirectorySeparator(third[third.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(fourth[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["PathInternal.IsDirectorySeparator(third[third.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(fourth[0])"],"Extras":[]},"Source":"= PathInternal.IsDirectorySeparator(third[third.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(fourth[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator(third[third.Length - 1])\n\t\t\t\t|| PathInternal.IsDirectorySeparator(fourth[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(third[third.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["third[third.Length - 1]"],"Extras":[]},"Source":"(third[third.Length - 1])\n"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["third[third.Length - 1]"],"Extras":[]},"Source":"third[third.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"third[third.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[third.Length - 1]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["third.Length - 1"],"Extras":[]},"Source":"third.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"third.Length - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"third.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["PathInternal.IsDirectorySeparator"],"Extras":[]},"Source":"PathInternal.IsDirectorySeparator(fourth[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IsDirectorySeparator"],"Extras":[]},"Source":"IsDirectorySeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["fourth[0]"],"Extras":[]},"Source":"(fourth[0])"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["fourth[0]"],"Extras":[]},"Source":"fourth[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"fourth[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["fourth"],"Extras":[]},"Source":"fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[0]"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0"},{"Kind":0,"KindStr":"Decl","Declaration":"FixedStatement","Info":null,"Source":"\n\t\t\tfixed (char* f = &MemoryMarshal.GetReference(first), s = &MemoryMarshal.GetReference(second), t = &MemoryMarshal.GetReference(third), u = &MemoryMarshal.GetReference(fourth))\n\t\t\t{\n\t\t\t\treturn string.Create(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLengt"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclaration","Info":{"Essentials":["type:char*","name:f"],"Extras":[]},"Source":"char* f = &MemoryMarshal.GetReference(first), s = &MemoryMarshal.GetReference(second), t = &MemoryMarshal.GetReference(third), u = &MemoryMarshal.GetReference(fourth)"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char* "},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["f"],"Extras":[]},"Source":"f = &MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(first)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first"],"Extras":[]},"Source":"(first)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["s"],"Extras":[]},"Source":"s = &MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(second)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["second"],"Extras":[]},"Source":"(second)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["t"],"Extras":[]},"Source":"t = &MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(third)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["third"],"Extras":[]},"Source":"(third)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"VariableDeclarator","Info":{"Essentials":["u"],"Extras":[]},"Source":"u = &MemoryMarshal.GetReference(fourth)"},{"Kind":0,"KindStr":"Decl","Declaration":"EqualsValueClause","Info":{"Essentials":["&MemoryMarshal.GetReference(fourth)"],"Extras":[]},"Source":"= &MemoryMarshal.GetReference(fourth)"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"&MemoryMarshal.GetReference(fourth)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["MemoryMarshal.GetReference"],"Extras":[]},"Source":"MemoryMarshal.GetReference(fourth)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"MemoryMarshal.GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["MemoryMarshal"],"Extras":[]},"Source":"MemoryMarshal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["GetReference"],"Extras":[]},"Source":"GetReference"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["fourth"],"Extras":[]},"Source":"(fourth)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["fourth"],"Extras":[]},"Source":"fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["fourth"],"Extras":[]},"Source":"fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"ReturnStatement","Info":{"Essentials":["string.Create(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, Fourth: (IntPtr)u, FourthLength:fourth.Length,\n\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator, FourthHasSeparator: fourthHasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.FourthHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.FourthLength - 1] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Fourth, state.FourthLength).CopyTo(destination.Slice(destination.Length - state.FourthLength));\n\t\t\t\t\t})"],"Extras":[]},"Source":"\t\t\t\treturn string.Create(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, Fourth: (IntPtr)u, FourthLength:fourth.Length,\n\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator, FourthHasSeparator: fourthHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["string.Create"],"Extras":[]},"Source":"string.Create(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, Fourth: (IntPtr)u, FourthLength:fourth.Length,\n\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator, FourthHasSeparator: fourthHasSeparator),\n\t\t\t\t\t(de"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"string.Create"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["string"],"Extras":[]},"Source":"string"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Create"],"Extras":[]},"Source":"Create"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["first.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, Fourth: (IntPtr)u, FourthLength:fourth.Length,\n\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator, FourthHasSeparator: fourthHasSeparator),\n\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.FourthHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.FourthLength - 1] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Fourth, state.FourthLength).CopyTo(destination.Slice(destination.Length - state.FourthLength));\n\t\t\t\t\t}"],"Extras":[]},"Source":"(\n\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1),\n\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, Fourth: (IntPtr)u, FourthLength:fourth.Length,\n\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator, FourthHasSeparator: fourthHasSeparator),\n\t\t\t\t\t(destination, st"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) + (fourthHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) + (thirdHasSeparator ? 0 : 1) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length + (firstHasSeparator ? 0 : 1) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length + fourth.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length + third.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length + second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\tfirst.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"\t\t\t\t\tfirst"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"third.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"fourth.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["fourth"],"Extras":[]},"Source":"fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(firstHasSeparator ? 0 : 1) "},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"firstHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["firstHasSeparator"],"Extras":[]},"Source":"firstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(thirdHasSeparator ? 0 : 1) "},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"thirdHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["thirdHasSeparator"],"Extras":[]},"Source":"thirdHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(fourthHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"fourthHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["fourthHasSeparator"],"Extras":[]},"Source":"fourthHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, Fourth: (IntPtr)u, FourthLength:fourth.Length,\n\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator, FourthHasSeparator: fourthHasSeparator)"],"Extras":[]},"Source":"\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, Fourth: (IntPtr)u, FourthLength:fourth.Length,\n\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator, FourthHasSeparator: fourthHasSeparator)"},{"Kind":0,"KindStr":"Decl","Declaration":"TupleExpression","Info":null,"Source":"\t\t\t\t\t(First: (IntPtr)f, FirstLength: first.Length, Second: (IntPtr)s, SecondLength: second.Length,\n\t\t\t\t\t\tThird: (IntPtr)t, ThirdLength: third.Length, Fourth: (IntPtr)u, FourthLength:fourth.Length,\n\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator, ThirdHasSeparator: thirdHasSeparator, FourthHasSeparator: fourthHasSeparator)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)f"],"Extras":[]},"Source":"First: (IntPtr)f"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"First: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["First"],"Extras":[]},"Source":"First"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)f"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["f"],"Extras":[]},"Source":"f"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["first.Length"],"Extras":[]},"Source":"FirstLength: first.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"FirstLength: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"first.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["first"],"Extras":[]},"Source":"first"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)s"],"Extras":[]},"Source":"Second: (IntPtr)s"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"Second: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Second"],"Extras":[]},"Source":"Second"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)s"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["s"],"Extras":[]},"Source":"s"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["second.Length"],"Extras":[]},"Source":"SecondLength: second.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"SecondLength: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecondLength"],"Extras":[]},"Source":"SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"second.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["second"],"Extras":[]},"Source":"second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)t"],"Extras":[]},"Source":"\t\t\t\t\t\tThird: (IntPtr)t"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"\t\t\t\t\t\tThird: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Third"],"Extras":[]},"Source":"\t\t\t\t\t\tThird"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)t"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["t"],"Extras":[]},"Source":"t"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["third.Length"],"Extras":[]},"Source":"ThirdLength: third.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"ThirdLength: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdLength"],"Extras":[]},"Source":"ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"third.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["third"],"Extras":[]},"Source":"third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(IntPtr)u"],"Extras":[]},"Source":"Fourth: (IntPtr)u"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"Fourth: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Fourth"],"Extras":[]},"Source":"Fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(IntPtr)u"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["IntPtr"],"Extras":[]},"Source":"IntPtr"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["u"],"Extras":[]},"Source":"u"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["fourth.Length"],"Extras":[]},"Source":"FourthLength:fourth.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"FourthLength:"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FourthLength"],"Extras":[]},"Source":"FourthLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"fourth.Length"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["fourth"],"Extras":[]},"Source":"fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["firstHasSeparator"],"Extras":[]},"Source":"\t\t\t\t\t\tFirstHasSeparator: firstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"\t\t\t\t\t\tFirstHasSeparator: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstHasSeparator"],"Extras":[]},"Source":"\t\t\t\t\t\tFirstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["firstHasSeparator"],"Extras":[]},"Source":"firstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["thirdHasSeparator"],"Extras":[]},"Source":"ThirdHasSeparator: thirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"ThirdHasSeparator: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdHasSeparator"],"Extras":[]},"Source":"ThirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["thirdHasSeparator"],"Extras":[]},"Source":"thirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["fourthHasSeparator"],"Extras":[]},"Source":"FourthHasSeparator: fourthHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"NameColon","Info":null,"Source":"FourthHasSeparator: "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FourthHasSeparator"],"Extras":[]},"Source":"FourthHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["fourthHasSeparator"],"Extras":[]},"Source":"fourthHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.FourthHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.FourthLength - 1] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Fourth, state.FourthLength).CopyTo(destination.Slice(destination.Length - state.FourthLength));\n\t\t\t\t\t}"],"Extras":[]},"Source":"\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 :"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedLambdaExpression","Info":null,"Source":"\t\t\t\t\t(destination, state) =>\n\t\t\t\t\t{\n\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 :"},{"Kind":0,"KindStr":"Decl","Declaration":"ParameterList","Info":null,"Source":"\t\t\t\t\t(destination, state) "},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["destination",null],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"Parameter","Info":{"Essentials":["state",null],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination);\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.First, state.FirstLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.First, state.FirstLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.First, state.FirstLength"],"Extras":[]},"Source":"((char*)state.First, state.FirstLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.First"],"Extras":[]},"Source":"(char*)state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.First"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["First"],"Extras":[]},"Source":"First"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength"],"Extras":[]},"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination"],"Extras":[]},"Source":"(destination)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!state.FirstHasSeparator","destination[state.FirstLength] = PathInternal.DirectorySeparatorChar;"],"Extras":[]},"Source":"\t\t\t\t\t\tif (!state.FirstHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!state.FirstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstHasSeparator"],"Extras":[]},"Source":"FirstHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["destination[state.FirstLength]","=","PathInternal.DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] = PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[state.FirstLength] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength"],"Extras":[]},"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.Second, state.SecondLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Second, state.SecondLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.Second, state.SecondLength"],"Extras":[]},"Source":"((char*)state.Second, state.SecondLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.Second"],"Extras":[]},"Source":"(char*)state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.Second"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Second"],"Extras":[]},"Source":"Second"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.SecondLength"],"Extras":[]},"Source":"state.SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecondLength"],"Extras":[]},"Source":"SecondLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"],"Extras":[]},"Source":"(destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1)))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"],"Extras":[]},"Source":"destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["destination.Slice"],"Extras":[]},"Source":"destination.Slice(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["state.FirstLength + (state.FirstHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"(state.FirstLength + (state.FirstHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength + (state.FirstHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"state.FirstLength + (state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"state.FirstLength + (state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"state.FirstHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstHasSeparator"],"Extras":[]},"Source":"FirstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!state.ThirdHasSeparator","destination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] = PathInternal.DirectorySeparatorChar;"],"Extras":[]},"Source":"\t\t\t\t\t\tif (!state.ThirdHasSeparator)\n\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!state.ThirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.ThirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdHasSeparator"],"Extras":[]},"Source":"ThirdHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["destination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)]","=","PathInternal.DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] = PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\t\t\tdestination[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"state.FirstLength + state.SecondLength "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.SecondLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecondLength"],"Extras":[]},"Source":"SecondLength "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(state.FirstHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"state.FirstHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstHasSeparator"],"Extras":[]},"Source":"FirstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.Third, state.ThirdLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo(destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Third, state.ThirdLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.Third, state.ThirdLength"],"Extras":[]},"Source":"((char*)state.Third, state.ThirdLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.Third"],"Extras":[]},"Source":"(char*)state.Third"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.Third"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.Third"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Third"],"Extras":[]},"Source":"Third"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.ThirdLength"],"Extras":[]},"Source":"state.ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdLength"],"Extras":[]},"Source":"ThirdLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1))"],"Extras":[]},"Source":"(destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1))"],"Extras":[]},"Source":"destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["destination.Slice"],"Extras":[]},"Source":"destination.Slice(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"(state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)"],"Extras":[]},"Source":"state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) + (state.ThirdHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"state.FirstLength + state.SecondLength + (state.FirstHasSeparator ? 0 : 1) "},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"state.FirstLength + state.SecondLength "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstLength"],"Extras":[]},"Source":"FirstLength "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.SecondLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["SecondLength"],"Extras":[]},"Source":"SecondLength "},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(state.FirstHasSeparator ? 0 : 1) "},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"state.FirstHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FirstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FirstHasSeparator"],"Extras":[]},"Source":"FirstHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"ParenthesizedExpression","Info":null,"Source":"(state.ThirdHasSeparator ? 0 : 1)"},{"Kind":0,"KindStr":"Decl","Declaration":"ConditionalExpression","Info":null,"Source":"state.ThirdHasSeparator ? 0 : 1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.ThirdHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["ThirdHasSeparator"],"Extras":[]},"Source":"ThirdHasSeparator "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["0"],"Extras":[]},"Source":"0 "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"IfStatement","Info":{"Essentials":["!state.FourthHasSeparator","destination[destination.Length - state.FourthLength - 1] = PathInternal.DirectorySeparatorChar;"],"Extras":[]},"Source":"\t\t\t\t\t\tif (!state.FourthHasSeparator)\n\t\t\t\t\t\t\tdestination[destination.Length - state.FourthLength - 1] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"PrefixUnaryExpression","Info":null,"Source":"!state.FourthHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FourthHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FourthHasSeparator"],"Extras":[]},"Source":"FourthHasSeparator"},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\t\tdestination[destination.Length - state.FourthLength - 1] = PathInternal.DirectorySeparatorChar;\n"},{"Kind":0,"KindStr":"Decl","Declaration":"AssignmentExpression","Info":{"Essentials":["destination[destination.Length - state.FourthLength - 1]","=","PathInternal.DirectorySeparatorChar"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination[destination.Length - state.FourthLength - 1] = PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"ElementAccessExpression","Info":null,"Source":"\t\t\t\t\t\t\tdestination[destination.Length - state.FourthLength - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"\t\t\t\t\t\t\tdestination"},{"Kind":0,"KindStr":"Decl","Declaration":"BracketedArgumentList","Info":null,"Source":"[destination.Length - state.FourthLength - 1] "},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Length - state.FourthLength - 1"],"Extras":[]},"Source":"destination.Length - state.FourthLength - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length - state.FourthLength - 1"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length - state.FourthLength "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FourthLength "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FourthLength"],"Extras":[]},"Source":"FourthLength "},{"Kind":0,"KindStr":"Decl","Declaration":"LiteralExpression","Info":{"Essentials":["1"],"Extras":[]},"Source":"1"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"PathInternal.DirectorySeparatorChar"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["PathInternal"],"Extras":[]},"Source":"PathInternal"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["DirectorySeparatorChar"],"Extras":[]},"Source":"DirectorySeparatorChar"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"BlockStarts","Info":{"Essentials":["4"],"Extras":["ExpressionStatement"]},"Source":null},{"Kind":0,"KindStr":"Decl","Declaration":"ExpressionStatement","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Fourth, state.FourthLength).CopyTo(destination.Slice(destination.Length - state.FourthLength));\n"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["new Span<char>((char*)state.Fourth, state.FourthLength).CopyTo"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Fourth, state.FourthLength).CopyTo(destination.Slice(destination.Length - state.FourthLength))"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Fourth, state.FourthLength).CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ObjectCreationExpression","Info":{"Essentials":["Span<char>"],"Extras":[]},"Source":"\t\t\t\t\t\tnew Span<char>((char*)state.Fourth, state.FourthLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"GenericName","Info":null,"Source":"Span<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"TypeArgumentList","Info":{"Essentials":["char"],"Extras":[]},"Source":"<char>"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["(char*)state.Fourth, state.FourthLength"],"Extras":[]},"Source":"((char*)state.Fourth, state.FourthLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["(char*)state.Fourth"],"Extras":[]},"Source":"(char*)state.Fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"CastExpression","Info":null,"Source":"(char*)state.Fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"PointerType","Info":null,"Source":"char*"},{"Kind":0,"KindStr":"Decl","Declaration":"PredefinedType","Info":{"Essentials":["char"],"Extras":[]},"Source":"char"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.Fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Fourth"],"Extras":[]},"Source":"Fourth"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["state.FourthLength"],"Extras":[]},"Source":"state.FourthLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FourthLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FourthLength"],"Extras":[]},"Source":"FourthLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["CopyTo"],"Extras":[]},"Source":"CopyTo"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Slice(destination.Length - state.FourthLength)"],"Extras":[]},"Source":"(destination.Slice(destination.Length - state.FourthLength))"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Slice(destination.Length - state.FourthLength)"],"Extras":[]},"Source":"destination.Slice(destination.Length - state.FourthLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"InvocationExpression","Info":{"Essentials":["destination.Slice"],"Extras":[]},"Source":"destination.Slice(destination.Length - state.FourthLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Slice"],"Extras":[]},"Source":"Slice"},{"Kind":0,"KindStr":"Decl","Declaration":"ArgumentList","Info":{"Essentials":["destination.Length - state.FourthLength"],"Extras":[]},"Source":"(destination.Length - state.FourthLength)"},{"Kind":0,"KindStr":"Decl","Declaration":"Argument","Info":{"Essentials":["destination.Length - state.FourthLength"],"Extras":[]},"Source":"destination.Length - state.FourthLength"},{"Kind":0,"KindStr":"Decl","Declaration":"BinaryExpression","Info":null,"Source":"destination.Length - state.FourthLength"},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"destination.Length "},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["destination"],"Extras":[]},"Source":"destination"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["Length"],"Extras":[]},"Source":"Length "},{"Kind":0,"KindStr":"Decl","Declaration":"MemberAccessExpression","Info":null,"Source":"state.FourthLength"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["state"],"Extras":[]},"Source":"state"},{"Kind":0,"KindStr":"Decl","Declaration":"IdentifierName","Info":{"Essentials":["FourthLength"],"Extras":[]},"Source":"FourthLength"},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["3","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["2","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["1","ExpressionStatement"],"Extras":[]},"Source":null},{"Kind":1,"KindStr":"EndBlock","Declaration":"","Info":{"Essentials":["0","ExpressionStatement"],"Extras":[]},"Source":null}]}